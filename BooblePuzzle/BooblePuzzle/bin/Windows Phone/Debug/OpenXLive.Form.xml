<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenXLive.Form</name>
    </assembly>
    <members>
        <member name="M:OpenXLive.Forms.FriendCache.#ctor">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.FriendCache class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.FriendCache.#ctor(System.Collections.Generic.IEnumerable{OpenXLive.Features.Player})">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.FriendCache 
            class and populates it with items copied from the specified collection. 
            </summary>
            <param name="collection">The collection from which the items are copied.</param>
            <exception cref="T:System.ArgumentNullException">collection is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.FriendCache.#ctor(System.Collections.Generic.List{OpenXLive.Features.Player})">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.FriendCache 
            class and populates it with items copied from the specified list.
            </summary>
            <param name="list">The list from which the items are copied.</param>
        </member>
        <member name="M:OpenXLive.Forms.FriendCache.InsertItem(System.Int32,OpenXLive.Features.Player)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:OpenXLive.Forms.FriendCache.HasExist(OpenXLive.Features.Player)">
            <summary>
            Return a value indicates wheter the specifies player has exist.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.NotificationCache.#ctor">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.NotificationCache class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.NotificationCache.#ctor(System.Collections.Generic.List{OpenXLive.NotificationItemWrapper})">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.NotificationCache 
            class and populates it with items copied from the specified list.. 
            </summary>
            <param name="list">The list from which the items are copied.</param>
        </member>
        <member name="M:OpenXLive.Forms.NotificationCache.InsertItem(System.Int32,OpenXLive.NotificationItemWrapper)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:OpenXLive.Forms.NotificationCache.HasExist(OpenXLive.NotificationItemWrapper)">
            <summary>
            Return a value indicates wheter the specifies item has exist.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.NotificationCache.Refresh(System.Collections.Generic.IList{OpenXLive.Features.NotificationItem})">
            <summary>
            Refresh list.
            </summary>
            <param name="list"></param>
            <exception cref="T:System.ArgumentNullException">list is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.RecommendedPlayerCache.#ctor">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.RecommendedPlayerCache class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.RecommendedPlayerCache.#ctor(System.Collections.Generic.IEnumerable{OpenXLive.Features.Player})">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.RecommendedPlayerCache 
            class and populates it with items copied from the specified collection. 
            </summary>
            <param name="collection">The collection from which the items are copied.</param>
            <exception cref="T:System.ArgumentNullException">collection is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.RecommendedPlayerCache.#ctor(System.Collections.Generic.List{OpenXLive.Features.Player})">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.RecommendedPlayerCache 
            class and populates it with items copied from the specified list.
            </summary>
            <param name="list">The list from which the items are copied.</param>
        </member>
        <member name="M:OpenXLive.Forms.RecommendedPlayerCache.Save">
            <summary>
            Save info to the isolated storage.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.RecommendedPlayerCache.Load">
            <summary>
            Load info from the isolated storage.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.TaskCache.#ctor">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.TaskCache class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.TaskCache.#ctor(System.Boolean)">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.TaskCache class.
            </summary>
            <param name="sort"></param>
        </member>
        <member name="M:OpenXLive.Forms.TaskCache.#ctor(System.Collections.Generic.IEnumerable{OpenXLive.Features.TaskItem})">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.TaskCache 
            class and populates it with items copied from the specified collection.. 
            </summary>
            <param name="collection">The collection from which the items are copied.</param>
            <exception cref="T:System.ArgumentNullException">collection is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.TaskCache.#ctor(System.Collections.Generic.List{OpenXLive.Features.TaskItem})">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.TaskCache 
            class and populates it with items copied from the specified list.. 
            </summary>
            <param name="list">The list from which the items are copied.</param>
        </member>
        <member name="M:OpenXLive.Forms.TaskCache.InsertItem(System.Int32,OpenXLive.Features.TaskItem)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:OpenXLive.Forms.TaskCache.HasExist(OpenXLive.Features.TaskItem)">
            <summary>
            Return a value indicates wheter the specifies item has exist.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.TaskCache.Refresh(System.Collections.Generic.IList{OpenXLive.Features.TaskItem})">
            <summary>
            Refresh list.
            </summary>
            <param name="list"></param>
            <exception cref="T:System.ArgumentNullException">list is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.TaskCache.GetClosestIndex(OpenXLive.Features.TaskItem)">
            <summary>
            Gets the index of the closest status.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveCache.AppendToFriendCache(OpenXLive.Features.Player)">
            <summary>
            Append a palyer into friend cache.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveCache.RefreshFriendCache(OpenXLive.Features.Player)">
            <summary>
            Refresh friend cache.
            </summary>
            <param name="player"></param>
        </member>
        <member name="P:OpenXLive.Forms.XLiveCache.Friends">
            <summary>
            Friends.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveCache.Following">
            <summary>
            Following.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveCache.Followers">
            <summary>
            Followers.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveCache.HomeTimeline">
            <summary>
            Timeline.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveCache.ActivatedTask">
            <summary>
            Activated task.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveCache.FinishedTask">
            <summary>
            Activated task.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveCache.RecommendedPlayer">
            <summary>
            Recommended player.
            </summary>
        </member>
        <member name="P:OpenXLive.NotificationItemWrapper.Item">
            <summary>
            
            </summary>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="P:OpenXLive.NotificationItemWrapper.Handled">
            <summary>
            Gets or sets a value that indicate whether the notification item had handled.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Forms.Resources.Images">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Achievement_Lock">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Achievement_Point">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Achievement_PointGray">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Add_Pressed">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Add_Release">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AddFollow">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AnonymousPlayer">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AppBar_Add">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AppBar_Camera">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AppBar_Cancel">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AppBar_Comment">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AppBar_Group">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AppBar_New">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AppBar_Ok">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AppBar_Refresh">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AppBar_Repost">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AppBar_Search">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.AppBar_Send">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Comment">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.DefaultPlayer">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Delete_Pressed">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Delete_Release">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.FollowerIcon">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.FollowingIcon">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.FriendIcon">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.GameCenter_Achievement">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.GameCenter_AnnouncementBottom">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.GameCenter_AnnouncementTop">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.GameCenter_Arrow">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.GameCenter_ChangePicture">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.GameCenter_Friends">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.GameCenter_FriendsArc">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.GameCenter_Leaderboard">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.GameCenter_Message">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.GameCenter_OnlineplayerLeft">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.GameCenter_OnlineplayerRight">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.ImageLoading">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.LeaderboardMe">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.LeaderboardNo1">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.LeaderboardNo2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.LeaderboardNo3">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.LevelUp">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.NewFriend">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.NewMessage">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Repost">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Star_All">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Star_Half">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Star_None">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Task_Activated">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Task_Finished">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Task_Tracking">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Timeline_Triangle">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Forms.Resources.Images.Triangle">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.TimelineCache.#ctor">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.TimelineCache class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.TimelineCache.#ctor(System.Collections.Generic.IEnumerable{OpenXLive.Features.XLiveStatus})">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.TimelineCache 
            class and populates it with items copied from the specified collection.. 
            </summary>
            <param name="collection">The collection from which the items are copied.</param>
            <exception cref="T:System.ArgumentNullException">collection is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.TimelineCache.#ctor(System.Collections.Generic.List{OpenXLive.Features.XLiveStatus})">
            <summary>
            Initializes a new, empty instance of the OpenXLive.Forms.TimelineCache 
            class and populates it with items copied from the specified list.. 
            </summary>
            <param name="list">The list from which the items are copied.</param>
        </member>
        <member name="M:OpenXLive.Forms.TimelineCache.AppendToBottom(System.Collections.Generic.IList{OpenXLive.Features.XLiveStatus})">
            <summary>
            Append the specifies statuses to the bottom of the cache.
            </summary>
            <param name="statuses"></param>
        </member>
        <member name="M:OpenXLive.Forms.TimelineCache.AppendToTop(OpenXLive.Features.XLiveStatus)">
            <summary>
            Append the specifies status to the top of the cache.
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:OpenXLive.Forms.TimelineCache.AppendToTop(System.Collections.Generic.IList{OpenXLive.Features.XLiveStatus})">
            <summary>
            Append the specifies statuses to the top of the cache.
            </summary>
            <param name="statuses"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.LeaderboardHelper.GetScoreValue(OpenXLive.Features.Score)">
            <summary>
            Return the string of a value.
            </summary>
            <param name="score"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.MedalFliter.Flit(System.Collections.Generic.IList{OpenXLive.Features.Medal})">
            <summary>
            Flit specifies medal collection.
            </summary>
            <param name="medals"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.PagingHelper">
            <summary>
            Provider some method to verifies whether can page down or page up.
            </summary>
        </member>
        <member name="M:OpenXLive.PagingHelper.CanNext(OpenXLive.Features.IPaging,System.Int32)">
            <summary>
            Verifies whether the IPaging objec can page down.
            </summary>
            <param name="search"></param>
            <param name="maximum"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">search is null.</exception>
        </member>
        <member name="M:OpenXLive.PagingHelper.GreaterThanMaximum(OpenXLive.Features.IPaging,System.Int32)">
            <summary>
            Verifies wheter the number the IPaging object had request is greater than the specifies maximun.
            </summary>
            <param name="search"></param>
            <param name="maximum"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">search is null.</exception>
        </member>
        <member name="M:OpenXLive.TextParser.ParseUrl(System.String,Microsoft.Xna.Framework.Color)">
            <summary>
            Parse Text.
            </summary>
            <param name="text"></param>
            <param name="uriColor"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.TextParser.ParseUrl(System.String,Microsoft.Xna.Framework.Color,OpenXLive.Form.Controls.TextDecoration)">
            <summary>
            Parse Text.
            </summary>
            <param name="text"></param>
            <param name="uriColor"></param>
            <param name="decoration"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.TextParser.GetPublisherTitle(OpenXLive.Features.XLiveStatus)">
            <summary>
            Gets the title of publisher in a status.
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.TextParser.GetTimeString(System.DateTime)">
            <summary>
            Convert datetime to a string.
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.XLiveImageHelper.ComputeImageSize(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="maxWidth"></param>
            <param name="maxHeight"></param>
            <param name="sourceWidth"></param>
            <param name="sourceHeight"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.XLiveImageHelper.LoadImageSource(OpenXLive.Form.Controls.Image,System.String)">
            <summary>
            Load image from specifies url.
            </summary>
            <param name="image"></param>
            <param name="url"></param>
        </member>
        <member name="M:OpenXLive.XLiveImageHelper.LoadImageSource(OpenXLive.Form.Controls.Image,System.String,System.Nullable{System.Int32})">
            <summary>
            Load image from specifies url.
            </summary>
            <param name="image"></param>
            <param name="url"></param>
            <param name="size"></param>
        </member>
        <member name="M:OpenXLive.XLiveImageHelper.LoadImageSource(OpenXLive.Controls.SaturationImage,System.String,System.Nullable{System.Int32})">
            <summary>
            Load image from specifies url.
            </summary>
            <param name="image"></param>
            <param name="url"></param>
            <param name="size"></param>
        </member>
        <member name="M:OpenXLive.XLiveImageHelper.GetUri(System.String,System.Nullable{System.Int32})">
            <summary>
            Get uri object from a url.
            </summary>
            <param name="url"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.XLiveImageHelper.LoadImageSource(OpenXLive.Form.Controls.Image,OpenXLive.Features.Player)">
            <summary>
            Load player photo from specifies player.
            </summary>
            <param name="image"></param>
            <param name="player"></param>
        </member>
        <member name="M:OpenXLive.XLiveImageHelper.GetBadgeImage(OpenXLive.Features.Player,System.Single,System.Single)">
            <summary>
            Gets a badge image from a specifies player.
            </summary>
            <param name="player"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.XLiveScissorCalculator.ComputeVisualRectangle(System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Computes the visual rectangle.
            </summary>
            <param name="sizeRect">the given size rectangle.</param>
            <param name="graphicsDevice">the GraphicsDevice.</param>
            <returns>The final visual rectangle</returns>
        </member>
        <member name="M:OpenXLive.XLiveScissorCalculator.ComputeVisualRectangle(Microsoft.Xna.Framework.Rectangle,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Computes the visual rectangle.
            </summary>
            <param name="sizeRect">the given size rectangle.</param>
            <param name="viewport">Specified viewport.</param>
            <param name="graphicsDevice">the GraphicsDevice.</param>
            <returns>The final visual rectangle</returns>
        </member>
        <member name="P:OpenXLive.XLiveArgumentsParser.Parser">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveCommentAndRepostListBox">
            <summary>
            Providers a listbox show comments and repost for a status.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveDynamicLoadListBox">
            <summary>
            Contains a list of selectable items. This control can load items dynamically.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Control">
            <summary>
            Represents the base class for UI element.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.UIObject">
            <summary>
            OpenXLive.Form.UIObject is a base class for most of the objects that have visual appearance.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.UIObject.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.UIObject class.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            NavigationService has not been initialized or Game.GraphicsDevice is null
            </exception>
        </member>
        <member name="M:OpenXLive.Form.UIObject.OnSizeRectInternalChanged">
            <summary>
            Called when SizeRectInternal property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.UIObject.LockSizeRect">
            <summary>
            Lock the size rectangle, the SizeRectInternal value will not be changed if locked.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.UIObject.UnlockSizeRect">
            <summary>
            Unlock the size rectangle.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.UIObject.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.UIObject.OnForceVisibleChanged">
            <summary>
            Called when user force change Visible property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.UIObject.FireVisibleChangedEvent(System.Boolean,System.Boolean)">
            <summary>
            Raise VisibleChanged event.
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:OpenXLive.Form.UIObject.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.UIObject.LoadedInternal">
            <summary>
            Fire loaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.UIObject.UnloadedInternal">
            <summary>
            Fire unloaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.UIObject.HandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Handle user gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.UIObject.HandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Handle touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.UIObject.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updata status.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:OpenXLive.Form.UIObject.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            This is called when this control should draw itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:OpenXLive.Form.UIObject.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.UIObject.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.UIObject.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when update status.
            </summary>
            <param name="gameTime">Time passed since the last call to Update.</param>
        </member>
        <member name="M:OpenXLive.Form.UIObject.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when this contorl draw itself.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="M:OpenXLive.Form.UIObject.OnPriorDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called after OnDraw method. this method will draw element on the top layer.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="M:OpenXLive.Form.UIObject.OnEarliestDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called before OnDraw method. this method will draw element on the bottom layer.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="M:OpenXLive.Form.UIObject.Dispose">
            <summary>
            Immediately releases the unmanaged resources used by this object.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.UIObject.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the UIObject class.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="E:OpenXLive.Form.UIObject.VisibleChanged">
            <summary>
            Occurs when the OpenXLive.Form.UIObject.Visible property changes.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.UIObject.Loaded">
            <summary>
            Occurs when a OpenXLive.Form.UIObject has been constructed and loaded for presentation.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.UIObject.Unloaded">
            <summary>
            Occurs when this object is no longer loaded for presentation.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.Dispatcher">
            <summary>
            Gets the OpenXLive.Form.Dispatcher this object is associated with.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.Name">
            <summary>
            Gets or sets the name of the object. The default is an empty string.
            </summary>
            <exception cref="T:System.ArgumentNullException">Set name to null.</exception>
        </member>
        <member name="P:OpenXLive.Form.UIObject.IsLoaded">
            <summary>
            Gets a value that indicates whether this object has been loaded for presentation.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.SizeRectInternal">
            <summary>
            Gets the size rectangle of a OpenXLive.Form.UIObject.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.IsInputVisibleCore">
            <summary>
            Gets or sets a value that will effect the IsInputVisible property.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.IsInputVisible">
            <summary>
            Gets or sets whether the control can acceput user input.
            This value will always be false if the UIObject does not add to the game loop and
            does not render to the screen.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.VisibleCore">
            <summary>
            Gets or sets a value that will effect the Visible property.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.Visible">
            <summary>
            Gets or sets a value indicating whether a OpenXLive.From.UIObject is drawn on the screen.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.ForceVisible">
            <summary>
            Gets the visible property that user force chganged.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be used to store custom information about this object.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.SpriteBatch">
            <summary>
            Gets the current SpriteBatch.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.Parent">
            <summary>
            Gets the parent object of this OpenXLive.Form.UIObject.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.UIObject.IsDisposed">
            <summary>
            Gets a value that indicates whether the object is disposed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Control class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.ForceChangeTranslateTransform(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Force change the translate transform and not raise OnTanslateTransformChanging method.
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.LoadedInternal">
            <summary>
            Loaded content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.UnloadedInternal">
            <summary>
            Unloaded content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.FireSizeChangedEvent(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Raise SizeChanged event.
            </summary>
            <param name="previousHeight"></param>
            <param name="newHeight"></param>
            <param name="previousWidth"></param>
            <param name="newWidth"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.LoadTemplate">
            <summary>
            Load control template
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.LoadTemplateOverride">
            <summary>
            Load a control template as visual content for a control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.SetContentEnabledCore(System.Boolean)">
            <summary>
            Sets the IsEnabledCore property for template content.
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.SetContentInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for template content.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.SetContentVisibleCore(System.Boolean)">
            <summary>
            Sets the VisibleCore property for template content.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.AddContextMenu">
            <summary>
            Add context menu.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.RemoveContextMenu">
            <summary>
            Remove context mneu.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OpenContextMenu(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Open context menu.
            </summary>
            <param name="position">The current position of the first touchpoint.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.FireIsEnabledChangedEvent(System.Boolean,System.Boolean)">
            <summary>
            Raise IsEnabledChanged event.
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.HitTest(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets a value that indicate whether the Visual rectangle contains the sprecifies point.
            </summary>
            <param name="point">The specifies point.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.SetSizeRect">
            <summary>
            Sets the size rectangle of a OpenXLive.Form.Controls.Control.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.Control has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnWidthChanging(System.Single)">
            <summary>
            Called when width property is changing.
            </summary>
            <param name="newValue">The new width.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnHeightChanging(System.Single)">
            <summary>
            Called when height property is changing.
            </summary>
            <param name="newValue">The new height.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnPositionChanging(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Called when position property is changing.
            </summary>
            <param name="newPosition">The new position.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnTanslateTransformChanging(System.Single,System.Single)">
            <summary>
            Called when translate transform property is changing.
            </summary>
            <param name="x">the distance to translate along the x-axis</param>
            <param name="y">The distance to translate along the y-axis</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnHeightChanged">
            <summary>
            Called when height property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnPositionChanged">
            <summary>
            Called when position property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnTanslateTransformChanged">
            <summary>
            Called when translate transform property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.Control._Offset">
            <summary>
            Indicates the offset of template.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when update status.
            </summary>
            <param name="gameTime">Time passed since the last call to Update.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when this contorl draw itself.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnMovedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for move operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnPressedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for pressed operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for released operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnDoubleTapCore(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Provides class handling for dobule tap operation.
            </summary>
            <param name="gestureSample">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnTapCore(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Provides class handling for tap operation.
            </summary>
            <param name="gestureSample">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnHoldCore(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Provides class handling for hold operation.
            </summary>
            <param name="gestureSample">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnTouchMove(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.Control.TouchMove event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnTouchDown(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.Control.TouchDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnTouchUp(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.Control.TouchUp event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnDoubleTap(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.Control.DoubleTap event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnTap(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.Control.Tap event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.OnHold(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.Control.Hold event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Control.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="E:OpenXLive.Form.Controls.Control.SizeChanged">
            <summary>
            Occurs when either the OpenXLive.Form.Controls.Control.Height or the
            OpenXLive.Form.Controls.Control.Width properties change value on a
            OpenXLive.Form.Controls.Control.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Control.IsEnabledChanged">
            <summary>
            Occurs when the OpenXLive.Form.Controls.Control.IsEnabled property changes.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Control.Tap">
            <summary>
            Occurs when a Tap gesture is committed while over this Control.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Control.DoubleTap">
            <summary>
            Occurs when a DoubleTap gesture is committed while over this Control.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Control.Hold">
            <summary>
            Occurs when a Hold gesture is committed while over this Control.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Control.TouchDown">
            <summary>
            Occurs when the TouchLocationState is pressed while over a Control.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Control.TouchUp">
            <summary>
            Occurs when the TouchLocationState is released while over a Control.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Control.TouchMove">
            <summary>
             Occurs when the coordinate position of the touch operation changes while over a Control.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Control.SizeRect">
            <summary>
            Gets the size rectangle of a OpenXLive.Form.Controls.Control.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Control.Viewport">
            <summary>
            Gets or sets the viewport of a OpenXLive.Form.Controls.Control.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Control.TranslateTransform">
            <summary>
            Gets or sets transform information that affects a OpenXLive.Form.Controls.Control.
            This API supports the OpenXlive infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Control.Position">
            <summary>
            Gets or Sets a value indicating the position of a OpenXLive.Form.Controls.Control on the screen.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Control.Height">
            <summary>
            Gets or Sets the Height of a OpenXLive.Form.Controls.Control.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Control.Width">
            <summary>
            Gets or Sets the Width of a OpenXLive.Form.Controls.Control.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Control.Foreground">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Control.IsEnabledCore">
            <summary>
            Gets or sets a value that will effect the IsEnabled property.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Control.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the user can interact with the OpenXLive.From.Controls.Control.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Control.Template">
            <summary>
            Gets the template that is contained within a control.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Control.ContextMenu">
            <summary>
            Gets or sets the value of the ContextMenu property of the specified control.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.#ctor">
            <summary>
            Initializes a new instance of XLiveDynamicLoadListBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.LoadTempalteListBox">
            <summary>
            Load template listbox for the XLiveDynamicLoadListBox.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.LoadTemplateListBoxOverride">
            <summary>
            Load template listbox for the XLiveDynamicLoadListBox.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.LoadTemplateOverride">
            <summary>
            Add TemplateListBox as the content of the control template.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.LoadTemplateContent">
            <summary>
            Load content.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.InitializeTemplateListBox">
            <summary>
            Register template list box event.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.OnItemsSourceLoaded">
            <summary>
            Called when set ItemsSource of OpenXLive.Forms.XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.OnItemsChanged">
            <summary>
            Called when ItemsSource remove or add item.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.LoadItemsSource">
            <summary>
            Load itemsSrouce.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.OnLoadItemsSource">
            <summary>
            Called when set ItemsSource of OpenXLive.Forms.XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.ContentControl has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update control.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.ScrollToVerticalOffset(System.Single)">
            <summary>
            Scrolls the items that is within the OpenXLive.Controls.XLiveMessagesListBox
            to the specified vertical offset position with animation.
            </summary>
            <param name="offset">The position that the items scrolls to.</param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.JumpToVerticalOffset(System.Single)">
            <summary>
            Scrolls the items that is within the OpenXLive.Controls.XLiveMessagesListBox
            to the specified vertical offset position without animation.
            </summary>
            <param name="offset">The position that the items scrolls to.</param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.ScrollIntoView(System.Object)">
            <summary>
            Causes the object to scroll into view with animation.
            </summary>
            <param name="item">The object to scroll.</param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.JumpIntoView(System.Object)">
            <summary>
            Causes the object to jupm into view without animation.
            </summary>
            <param name="item"></param>
        </member>
        <member name="F:OpenXLive.Controls.XLiveDynamicLoadListBox._HadScrollToBottom">
            <summary>
            Indicates whether the vertical scroll has scroll to the bottom.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.MonitorScrolling">
            <summary>
            Monitor scrolling.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadListBox.FireScrollToBottomEvent">
            <summary>
            Raise ScrollToBottom event.
            </summary>
        </member>
        <member name="E:OpenXLive.Controls.XLiveDynamicLoadListBox.SelectionChanged">
            <summary>
            Occurs when the currently selected item changes.
            </summary>
        </member>
        <member name="E:OpenXLive.Controls.XLiveDynamicLoadListBox.TapItem">
            <summary>
            Occurs when tap the item.
            </summary>
        </member>
        <member name="E:OpenXLive.Controls.XLiveDynamicLoadListBox.ItemsSourceLoaded">
            <summary>
            Occurs when set ItemsSource for OpenXLive.Controls.XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="E:OpenXLive.Controls.XLiveDynamicLoadListBox.ItemsChanged">
            <summary>
            Occurs when ItemsSource remove or add item.
            This event will occured only when the ItemsSourc implement the INotifyCollectionChanged interface.
            </summary>
        </member>
        <member name="E:OpenXLive.Controls.XLiveDynamicLoadListBox.ScrollToBottom">
            <summary>
            Occurs when the vertical bar scroll to the bottom of the XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.TemplateListBox">
            <summary>
            The template ListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.BottomOffset">
            <summary>
            Gets or sets the bottom offset, this property will impact how to raise ScrollToBottom event.
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, less than zero,  or System.Float.IsInfinity(System.Float) is true.</exception>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.LoadingBarVisible">
            <summary>
            Gets or sets whether the loading bar is visible.
            The default is true.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.ItemNormalHeight">
            <summary>
            Gets or sets the height of the item.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.LoadingItemHeight">
            <summary>
            Gets or sets the height of the loading item.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.LoadingItemWidth">
            <summary>
            Gets or sets the width of the loading item.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.ItemTemplate">
            <summary>
            Gets or sets the item template of the XLiveDynamicLoadListBox
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.LoadingTempalte">
            <summary>
            Gets or sets the loading template.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.Items">
            <summary>
            Gets the item in the XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.ItemsSource">
            <summary>
            Gets or sets a collection used to generate the content of XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.VerticalScrollOffset">
            <summary>
            Gets the vertical offset of the vertical scroll bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadListBox.VerticalScrollMaximum">
            <summary>
            The vertical size of all the item for display in the OpenXLive.Form.Controls.ListBox.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.CommentsTemplate">
            <summary>
            Providers data template for comments.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.DataTemplate">
            <summary>
            Describes the visual structure of a data object for the ItemsControl.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.UITemplate">
            <summary>
            Creates an UI element for data.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.UITemplate.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.UITemplate class.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            NavigationService has not been initialized or Game.GraphicsDevice is null
            </exception>
        </member>
        <member name="P:OpenXLive.Form.UITemplate.SpriteBatch">
            <summary>
            Gets the current SpriteBatch.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.DataTemplate.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.DataTemplate class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.DataTemplate.LoadContent(System.Object)">
            <summary>
            Creates the OpenXLive.Form.Controls.Control objects in the OpenXLive.Form.Controls.DataTemplate.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context of the template.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.DataTemplate.LoadContentOverride(System.Object)">
            <summary>
            Creates the OpenXLive.Form.Controls.Control objects in the OpenXLive.Form.Controls.DataTemplate.
            </summary>
            <param name="dataContext">The data context of the template.</param>
            <returns>The root OpenXLive.Form.Controls.Control of the OpenXLive.Form.Controls.DataTemplate.</returns>
        </member>
        <member name="M:OpenXLive.Controls.CommentsTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Controls.RepostTempalte">
            <summary>
            Providers a data template for repost.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.RepostTempalte.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Controls.XLiveDynamicLoadTemplateListBox">
            <summary>
            Represents a ListBox with loading templates and can load item dynamically.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ListBox">
            <summary>
            Contains a list of selectable items.
            This control does not support AutoWidth and AutoHeight feature, 
            it will throw NotSupportedException exception if set AutoWidth or AutoHeight to true.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ItemsControl">
            <summary>
            Represents a control that can be used to present a collection of items.
            This control only support AutoHeight feature, it will throw NotSupportedException exception if set AutoWidth to true.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Primitives.AutoSizeControl">
            <summary>
            Represents the base class for the control that can automatically size itself to fit the size of its content..
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Primitivess.AutoSizeControl class.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Primitives.AutoSizeControl._LastHeight">
            <summary>
            The height before set AutoHeight ture.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.OnAutoHeightChanged">
            <summary>
            Called when AutoHeight property changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Primitives.AutoSizeControl._LastWiddth">
            <summary>
            The height before set AutoHeight ture.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.OnAutoWidthChanged">
            <summary>
            Called when AutoHeight property changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Primitives.AutoSizeControl._CanAdjustHeight">
            <summary>
            Indicates whether can adjust the height.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.AdjustHeight">
            <summary>
            Adjusts the value of Height property.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Primitives.AutoSizeControl._CanAdjustWidth">
            <summary>
            Indicates whether can adjust the width.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.AdjustWidth">
            <summary>
            Adjusts the value of Width property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.OnMaxHeightChanged">
            <summary>
            Called when MaxHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.OnMinHeightChanged">
            <summary>
            Called when MinHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.OnMaxWidthChanged">
            <summary>
            Called when MaxWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.OnMinWidthChanged">
            <summary>
            Called when MinWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.OnHeightChanging(System.Single)">
            <summary>
            Called when height property is changing.
            </summary>
            <param name="newValue">The new height.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.OnWidthChanging(System.Single)">
            <summary>
            Called when width property is changing.
            </summary>
            <param name="newValue">The new width.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.OnHeightChanged">
            <summary>
            Called when height property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.AutoSizeControl.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Primitives.AutoSizeControl.HeightChanged">
            <summary>
            Occurs when height property has changed.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Primitives.AutoSizeControl.WidthChanged">
            <summary>
            Occurs when width property has changed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.AutoSizeControl.AutoHeight">
            <summary>
            Ges or sets a value that indicates whether the height is depend on the content.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.AutoSizeControl.AutoWidth">
            <summary>
            Ges or sets a value that indicates whether the width is depend on the content.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.AutoSizeControl.AutoHeightValue">
            <summary>
            Gets or sets the actual height when set AutoHeight to true.
            This value shoud be set by derived class.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.AutoSizeControl.AutoWidthValue">
            <summary>
            Gets or sets the actual height when set AutoWidth to true.
            This value should be set by derived class.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.AutoSizeControl.MaxHeight">
            <summary>
            Gets or sets the maximum height constraint of a OpenXLive.Form.Controls.Primitivess.AutoSizeControl.
            The default value is Float.PositiveInfinity.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.AutoSizeControl.MaxWidth">
            <summary>
            Gets or sets the maximum width constraint of a OpenXLive.Form.Controls.Primitivess.AutoSizeControl.
            The default value is Float.PositiveInfinity.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.AutoSizeControl.MinHeight">
            <summary>
            Gets or sets the minimum height constraint of a OpenXLive.Form.Controls.Primitivess.AutoSizeControl.
            The default value is 0.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.AutoSizeControl.MinWidth">
            <summary>
            Gets or sets the minimum width constraint of a OpenXLive.Form.Controls.Primitivess.AutoSizeControl.
            The default value is 0.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl.OverflowCount">
            <summary>
            The count overflow up and down.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._ItemsCore">
            <summary>
            Provides a list for generated items.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.ItemsControl class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnAutoWidthChanged">
            <summary>
            Called when AutoWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.SetItemsEnabledCore(System.Boolean)">
            <summary>
            Sets IsEnabledCore property of all the item container.
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.SetItemsVisibleCore(System.Boolean)">
            <summary>
            Sets VisibleCore property of all the item container.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.SetItemsInputVisibleCore(System.Boolean)">
            <summary>
            Sets IsInputVisibleCore property of all the item container.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._PreviousIndex">
            <summary>
            Previous selected index.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._SelectedIndex">
            <summary>
            Current selected index.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._CanNotifyChanged">
            <summary>
            Indicates whether notify source changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.GetRectangle(System.Object)">
            <summary>
            Gets tht input rectangle of the specified item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._ItemsSourceChanged">
            <summary>
            Indicates whether the items source has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnLoadItemsSource">
            <summary>
            Called when set ItemsSource of OpenXLive.Form.Controls.ItemsControl.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnItemsSourceLoaded">
            <summary>
            Called when set ItemsSource of OpenXLive.Form.Controls.ItemsControl.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnItemsChanged">
            <summary>
            Called when ItemsSource remove or add item.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.GetItem(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.GetContainerForItem">
            <summary>
             Creates or identifies the item container that is used to display the given item.
            </summary>
            <returns>The item container that is used to display the given item.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.GetContainerForItemOverride">
            <summary>
             Creates or identifies the item container that is used to display the given item.
            </summary>
            <returns>The item container that is used to display the given item.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.PrepareContainerForItem(OpenXLive.Form.Controls.ItemContainer,System.Object,OpenXLive.Form.Controls.Item)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="container">The container used to display the specified item.</param>
            <param name="dataContext">The data context of the item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.PrepareContainerForItemOverride(OpenXLive.Form.Controls.ItemContainer,System.Object,OpenXLive.Form.Controls.Item)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="container">The container used to display the specified item.</param>
            <param name="dataContext">The data context of the item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.RestoreDefault">
            <summary>
            Restore default state.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._DrawTopIndex">
            <summary>
            The top index of the item that is drawing on the items control.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._DrawBottomIndex">
            <summary>
            The bottom index of the item that is drawing on the items control.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._LoadedTopIndex">
            <summary>
            The top index of the item that is loaded in the items control.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._LoadedBottomIndex">
            <summary>
            The bottom index of the item that is loaded in the items control.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl.ItemsOffsetInternal">
            <summary>
            The offset of all the item.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.SetVisualRectAndCurrentSicissor">
            <summary>
            Sets items visual rectangle and sicissor rectangle.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.MonitorItemSizeChange">
            <summary>
            Monitor the size of earch loaded item.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.RefreshDrawIndex">
            <summary>
            Refresh draw index.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.SetLoadedIndex">
            <summary>
            Sets the top and bottom index of the item that is loaded on the items control.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.SetDrawTopIndex(System.Boolean)">
            <summary>
            Sets the top draw index.
            </summary>
            <param name="movingUp"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.SetDrawBottomIndex">
            <summary>
            Sets the bottom draw index.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.PrepareContainerForItem">
            <summary>
            Prepare ItemContainer to loaded on the items control.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.GetCacheContainer">
            <summary>
            Get a item container from cache, if no cache create a new one.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.GetDrawContainer(System.Int32)">
            <summary>
            Get a Item container from draw items.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.SetContainersInputVisibleCore(System.Boolean)">
            <summary>
            Sets container IsInputVisible property.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.GetContainerRangeIndex(System.Int32@,System.Int32@)">
            <summary>
            Computes the start and end index will be loaded.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._ItemContainerCache">
            <summary>
            The cache of the ItemContainer.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._ItemContainerLoaded">
            <summary>
            The collection of ItemContainer used to loaded on the items control.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.UpdateItems(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates items.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._PressedIndex">
            <summary>
            Gets the Index of current pressed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.DrawItems(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draw items.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.GetTouchIndex(System.Int32,System.Int32)">
            <summary>
            Gets the index at the current touch location.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnSelectionChanged(System.Int32,System.Int32)">
            <summary>
            Raise SelectionChanged event.
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnTapItem(System.Int32,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Raise TapItem event.
            </summary>
            <param name="index"></param>
            <param name="position"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.GetItemContainer(System.Object)">
            <summary>
            Gets a item container.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.ValidateSourceIndex(System.Int32)">
            <summary>
            Validate the index in ItemsSource.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.ValidateInputIndex(System.Int32)">
            <summary>
            Validate the index in Items.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.ItemsControl has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.RestoreState">
            <summary>
            Restores default state.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._TouchDownIndex">
            <summary>
            Indicates the first touch index of items.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ItemsControl._TouchDown">
            <summary>
            Indicates whether has touch down this control.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.OnTouchDown(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.ItemsControl.TouchDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.HitTestScissorRect(System.Int32,System.Int32)">
            <summary>
            Gets a valuet that indicate whether the scissor rectangle contains the sprecifies point.
            </summary>
            <param name="x">x-coordinate.</param>
            <param name="y">y-coordiante.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemsControl.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="E:OpenXLive.Form.Controls.ItemsControl.SelectionChanged">
            <summary>
            Occurs when the currently selected item changes.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.ItemsControl.TapItem">
            <summary>
            Occurs when tap the item.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.ItemsControl.ItemsSourceLoaded">
            <summary>
            Occurs when set ItemsSource for OpenXLive.Form.Controls.ItemsControl.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.ItemsControl.ItemsChanged">
            <summary>
            Occurs when ItemsSource remove or add item.
            This event will occured only when the ItemsSourc implement the INotifyCollectionChanged interface.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemsControl.ActualItemsVisualRect">
            <summary>
            Gets the actual items visual rectangle of the OpenXLive.Form.Controls.ItemsControl.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemsControl.ItemsVisualRect">
            <summary>
            Gets or sets the items visual rectangle of the OpenXLive.Form.Controls.ItemsControl.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemsControl.Items">
            <summary>
            Gets the items in the ItemsControl.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemsControl.SelectedIndex">
            <summary>
            Gets or sets the index of the selected item.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemsControl.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemsControl.ItemsSource">
            <summary>
            Gets or sets a collection used to generate the content of ItemsControl.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemsControl.ItemTemplate">
            <summary>
            Gets or sets the item template of the ItemsControl
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemsControl.ItemNormalHeight">
            <summary>
            Gets or sets the height of the item.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemsControl.DisableInteraction">
            <summary>
            Disable interaction.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.#ctor">
            <summary>
            Initializes a new instance of ListBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.ScrollToVerticalOffset(System.Single)">
            <summary>
            Scrolls the items that is within the OpenXLive.Form.Controls.ListBox
            to the specified vertical offset position with animation.
            </summary>
            <param name="offset">The position that the items scrolls to.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.JumpToVerticalOffset(System.Single)">
            <summary>
            Scrolls the items that is within the OpenXLive.Form.Controls.ListBox
            to the specified vertical offset position without animation.
            </summary>
            <param name="offset">The position that the items scrolls to.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.ScrollIntoView(System.Object)">
            <summary>
            Causes the object to scroll into view with animation.
            </summary>
            <param name="item">The object to scroll.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.JumpIntoView(System.Object)">
            <summary>
            Causes the object to jupm into view without animation.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnAutoHeightChanged">
            <summary>
            Throw exception when set AutoHeight to ture.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnItemsSourceLoaded">
            <summary>
            Called when set ItemsSource of OpenXLive.Form.Controls.ListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnItemsChanged">
            <summary>
            Called when ItemsSource remove or add item.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ListBox._IsReleased">
            <summary>
            Indicates whether the touch operation is released.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ListBox._LastVerticalOffset">
            <summary>
            The previous VericalOffset of ScrollViewer.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ListBox._LastHorizontalOffset">
            <summary>
            The previous HorizontalOffset of ScrollViewer.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.ValidateInputIndex(System.Int32)">
            <summary>
            Validate the index in Items.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.ListBox has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.SetVisualRect">
            <summary>
            Update scroll viewer property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.UpdateItemsOffsetInternal">
            <summary>
            Update ItemsOffsetInternal value.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ListBox.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.ListBox.VerticalScrollOffset">
            <summary>
            Gets the vertical offset of the vertical scroll bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ListBox.VerticalScrollMaximum">
            <summary>
            The vertical size of all the item for display in the OpenXLive.Form.Controls.ListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ListBox.VerticalScrollBarVisible">
            <summary>
            Gets or sets the value of the OpenXLive.Form.Controls.ListBox.VerticalScrollBarVisible.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadTemplateListBox.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveDynamicLoadTemplateListBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadTemplateListBox.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveDynamicLoadTemplateListBox.PrepareContainerForItemOverride(OpenXLive.Form.Controls.ItemContainer,System.Object,OpenXLive.Form.Controls.Item)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="container">The container used to display the specified item.</param>
            <param name="dataContext">The data context of the item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadTemplateListBox.LoadingTempalte">
            <summary>
            Gets or sets the loading template.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadTemplateListBox.LoadingItemHeight">
            <summary>
            Gets or sets the height of the loading item.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveDynamicLoadTemplateListBox.LoadingItemWidth">
            <summary>
            Gets or sets the width of the loading item.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveCommentAndRepostTemplateListBox.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="T:OpenXLive.Controls.XLiveFeaturedGameListBox">
            <summary>
            Provider a listbox to show featured games.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.FeaturedGameTempalte">
            <summary>
            The featured template in the games list box.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.FeaturedGameTempalte.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFeaturedGameTemplateListBox.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="T:OpenXLive.Controls.IconButton">
            <summary>
            Represents a icon button control.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Primitives.ButtonBase">
            <summary>
            Represents the base class for all button controls. This control have no TouchDown and TouchUp event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Primitives.ButtonBase class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.RestoreState">
            <summary>
            Restores default state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnFontFamilyChanged">
            <summary>
            Called when FontFamily property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnFontSizeChanged">
            <summary>
            Called when FontSize property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnContentChanged(System.String,System.String)">
            <summary>
            Called when the value of the Content property changes.
            </summary>
            <param name="oldContent">The old value of the Content property.</param>
            <param name="newContent">The new value of the Content property.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnPressStateChanged">
            <summary>
            Called when IsPressed property is changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnClick">
            <summary>
            Raises the OpenXLive.Form.Controls.Primitives.ButtonBase.Click event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.FireClickEvent">
            <summary>
            Raises click event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Released.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnMovedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Moved.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnTouchDown(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.ButtonBase.TouchDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.OnTouchUp(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.ButtonBase.TouchUp event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ButtonBase.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ButtonBase.FontFamily">
            <summary>
            Gets or sets the FontFamily for the OpenXLive.Form.Controls.ButtonBase.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ButtonBase.FontSize">
            <summary>
            Gets or sets the size of the text in this ButtonBase. The defualt value is 25 (in pixels).
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ButtonBase.Content">
            <summary>
            Gets or sets the value of the Content.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ButtonBase.IsPressed">
            <summary>
            Gets a value that indicates whether a OpenXLive.Form.Controls.Primitives.ButtonBase
            is currently in a pressed state.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Primitives.ButtonBase.Click">
            <summary>
            Occurs when Button is clicked.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.IconButton.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Controls.IconButton class.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.IconButton.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.IconButton.OnPressStateChanged">
            <summary>
            Called when IsPressed property is changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.IconButton._ActualDrawTexture">
            <summary>
            The actual textue will be draw on the button.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.IconButton.SetAcutalTexture">
            <summary>
            Set the actual texture.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.IconButton._VisualRect">
            <summary>
            Indicates the visual rectangle of Border.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.IconButton.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Controls.IconButton.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draw icon button.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="P:OpenXLive.Controls.IconButton.Icon">
            <summary>
            Gets or sets the texture of the icon in the IconButton.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.IconButton.PressedIcon">
            <summary>
            Gets or sets the texture of the icon in the IconButton when the icon button is pressed.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.IconButton.DiabledIcon">
            <summary>
            Gets or sets the texture of the icon in the IconButton when the icon button is diabled.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox.#ctor">
            <summary>
            Initializes a new instance of the XLiveFriendLeaderboardListBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox.LoadTemplateListBoxOverride">
            <summary>
            Load template listbox for the XLiveLeaderboardListBox.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox.LoadTemplateOverride">
            <summary>
            Add content to the control template.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox.LoadTemplateContent">
            <summary>
            Load content for template.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox._MyScorePanel_Tap(System.Object,OpenXLive.Form.InputEventArgs)">
            <summary>
            Tap my score
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.ContentControl has changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.XLiveFriendLeaderboardListBox._MyScoreIndex">
            <summary>
            The index of my score in the items source.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox.OnItemsSourceLoaded">
            <summary>
            Called when set ItemsSource of OpenXLive.Form.XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox.OnItemsChanged">
            <summary>
            Called when ItemsSource remove or add item.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox.GetMyScroeIndex">
            <summary>
            Gets the index of myscroe in the items source.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update listbox.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Controls.XLiveFriendLeaderboardListBox._State">
            <summary>
            The state of the XLiveLeaderboardListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox.SetItemVisualRect">
            <summary>
            Set item visual rectangle.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardListBox.UpdateState">
            <summary>
            Update State.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveFriendLeaderboardListBox.FirstTemplate">
            <summary>
            Gets or sets the template for the first on the leaderboard listbox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveFriendLeaderboardListBox.SecondTemplate">
            <summary>
            Gets or sets the template for the second on the leaderboard listbox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveFriendLeaderboardListBox.ThirdTemplate">
            <summary>
            Gets or sets the template for the third on the leaderboard listbox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveFriendLeaderboardListBox.MyTemplate">
            <summary>
            Gets or sets the template for the my scrore on the leaderboard listbox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveFriendLeaderboardListBox.MyScore">
            <summary>
            Gets or sets the score of current player in the leaderboard.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveFriendLeaderboardListBox.State">
            <summary>
            Gets or sets the state of the XLiveLeaderboardListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardTemplateListBox.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardTemplateListBox.PrepareContainerForItemOverride(OpenXLive.Form.Controls.ItemContainer,System.Object,OpenXLive.Form.Controls.Item)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="container">The container used to display the specified item.</param>
            <param name="dataContext">The data context of the item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="P:OpenXLive.Controls.XLiveFriendLeaderboardTemplateListBox.FirstTemplate">
            <summary>
            Gets or sets the template for the first on the XLiveLeaderboardTemplateListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveFriendLeaderboardTemplateListBox.SecondTemplate">
            <summary>
            Gets or sets the template for the second on the XLiveLeaderboardTemplateListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveFriendLeaderboardTemplateListBox.ThirdTemplate">
            <summary>
            Gets or sets the template for the third on the XLiveLeaderboardTemplateListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveFriendLeaderboardTemplateListBox.MyTemplate">
            <summary>
            Gets or sets the template for the my scrore on the leaderboard listbox.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveMedalListBox">
            <summary>
            Provider a listbox to show medals.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.MedalTemplate">
            <summary>
            Provider a datatemplate for medal.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.MedalTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.XLiveMedalTemplateListBox.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="T:OpenXLive.Controls.XLiveMessageThreadListBox">
            <summary>
            Providers a listbox show message threads.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.MessageThreadTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Controls.XLiveMessageThreadTemplateListBox">
            <summary>
            Contians a list of message threads.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveMessageThreadTemplateListBox.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="T:OpenXLive.Controls.PictureItem">
            <summary>
            Providers a item on the picture wall.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Controls.PictureItem class.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.LoadTemplateOverride">
            <summary>
            Load a control template as visual content for a control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureItem._FlippingCounter">
            <summary>
            Represents the number of steps inside the pipeline of picture Items
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.Flip">
            <summary>
            Flip.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.SetFrontImage(OpenXLive.Form.Media.BitmapSource)">
            <summary>
            If the state is Fore, will change the ForeImage to the specified value.
            If the state is Back, will change the BackImage to the specified value.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.SetFrontBackground(Microsoft.Xna.Framework.Color)">
            <summary>
            If the state is Fore, will change background of fore iamge wrapper to be the specified background.
            If the state is Back, will change background of back iamge wrapper to be the specified background.
            </summary>
            <param name="background"></param>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.SetReverseImage(OpenXLive.Form.Media.BitmapSource)">
            <summary>
            If the state is Fore, will change the BackImage to the specified value.
            If the state is Back, will change the ForeImage to the specified value.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.SetReverseBackground(Microsoft.Xna.Framework.Color)">
            <summary>
            If the state is Fore, will change background of back iamge wrapper to be the specified background.
            If the state is Back, will change background of fore iamge wrapper to be the specified background.
            </summary>
            <param name="background"></param>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.GetFrontImage">
            <summary>
            If the state is Fore, will return the ForeImage.
            If the state is Back, will return the BackImage.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.GetFrontWrapperBackground">
            <summary>
            If the state is Fore, will return the background of fore image wrapper.
            If the state is Back, will return the background of back image wrapper.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.GetReverseImage">
            <summary>
            If the state is Fore, will return the BackImage.
            If the state is Back, will return the ForeImage.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.GetReverseWrapperBackground">
            <summary>
            If the state is Fore, will return the background of back image wrapper.
            If the state is Back, will return the background of fore image wrapper.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.SetReverseImagePositionAndSize(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Sets reverse image margin, with, height.
            </summary>
            <param name="position"></param>
            <param name="size"></param>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.RestoreReverseImage">
            <summary>
            Restore reverse image margin property
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.OnHeightChanged">
            <summary>
            Called when height property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureItem.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when update status.
            </summary>
            <param name="gameTime">Time passed since the last call to Update.</param>
        </member>
        <member name="P:OpenXLive.Controls.PictureItem.Background">
            <summary>
            Gets or sets a color that provides the background of the PictureItem control.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.PictureItem.ForeImage">
            <summary>
            Gets or sets the foreground image of the picture item.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.PictureItem.BackImage">
            <summary>
            Gets or sets the background image of the picture item.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.PictureItem.State">
            <summary>
            Gets or sets the state of the picture item.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.PictureItem.IsActive">
            <summary>
            Gets a value that indicates whether the current respect had a image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.PictureItem.IsSpliced">
            <summary>
            Gets a value that indicates whether this PictureItem is used to be spliced.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.PictureItem.X">
            <summary>
            Gets or sets the fist coordinate in two-dimensional array.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.PictureItem.Y">
            <summary>
            Gets or sets the second coordinate in two-dimensional array.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.PictureItemState">
            <summary>
            Providers state for picture item.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureItemState.Fore">
            <summary>
            The fore image and foreground is shown.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureItemState.Back">
            <summary>
            The back image and background is shown.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.PictureWall">
            <summary>
            Show multi picture.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall.ProbabilisticBehaviorSelector">
            <summary>
            Random number generator to take certain random decisions.
            e.g. which picture item is to be animated next.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall._FlipTileItemSelector">
            <summary>
            Random number generator to indicate which picture item is to be animated next.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall._ForeImageSelector">
            <summary>
            Random number generator to indicate which image is to be display.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall._ActiveItemSelector">
            <summary>
            Random number generator to indicate which active picture item is to be animated next.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall._SpliceSelector">
            <summary>
            Random number generator to splice.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall._PictureItems">
            <summary>
            Contains All the picture Item.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall._ImageItems">
            <summary>
            All the image item in BitmapSource.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall._ForeImagePool">
            <summary>
            The image list that had shown.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall._BackImagePool">
            <summary>
            The image list that had not shown.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall._PictureItemsPiepline">
            <summary>
            Contains the PictureItem that where flipped previously.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall._EnabledItemsPool">
            <summary>
            Pool that contains flip tile item that can be animated at the moment.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.PictureWall._SplicedItemsPool">
            <summary>
            Pool that contains flip tile item that used to be spliced.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureWall.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Controls.PictureWall class.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureWall.OnLoadItemsSource">
            <summary>
            Called when set ItemsSource of OpenXLive.Controls.PictureWall.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureWall.LoadTemplateOverride">
            <summary>
            Load a control template as visual content for a control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.PictureWall.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureWall.OnHeightChanged">
            <summary>
            Called when height property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureWall.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when update status.
            <param name="gameTime">Time passed since the last call to Update.</param>
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureWall.OnLayoutChanged">
            <summary>
            Refresh children.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureWall.GetRandomWrapperBrush(System.Random)">
            <summary>
            Get a random brush.
            </summary>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.PictureWall.Splice">
            <summary>
            Select splice item, the slected items must be flipped currently.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.PictureWall.Flip">
            <summary>
            Flip Tile.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.PictureWall.Columns">
            <summary>
            Gets or sets a value that indicates the colums of PictureWall
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.PictureWall.Rows">
            <summary>
            Gets or sets a value that indicates the rows of PictureWall
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.PictureWall.IsFrozen">
            <summary>
            Gets or sets a value that indicates whether freeze PictureWall
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.PictureWall.ItemsSource">
            <summary>
            Gets or sets a BitmapSource collecion
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.RecentGameType">
            <summary>
            Specifies the type of the game.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.RecentGameType.RecentGame">
            <summary>
            Recent game.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.RecentGameType.RecentHeader">
            <summary>
            Recent game header.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.RecentGameType.FeaturedGame">
            <summary>
            Featured game.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.RecentGameType.FeaturedHeader">
            <summary>
            Featured game header.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.RecentGame">
            <summary>
            Provider data for XLiveRecentGamesListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.RecentGame.Type">
            <summary>
            Gets or sets the type of the game.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.RecentGame.Game">
            <summary>
            Gets or sets the game.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.SaturationImage">
            <summary>
            Providers a image have Saturation effect.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.SaturationImage.LoadTemplateOverride">
            <summary>
            Load a control template as visual content for a control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.SaturationImage.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.Control has changed.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.SaturationImage.Source">
            <summary>
            Gets or sets the source for the SaturationImage.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.SaturationImage.Background">
            <summary>
             Gets or sets a color that provides the background of the SaturationImage.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.SaturationImage.Stretch">
            <summary>
            Gets or sets a value that describes how an OpenXLive.Controls.SaturationImage 
            should be stretched to fill the destination rectangle. The default value is Stretch.Fill.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.SaturationImage.OriginalTexture">
            <summary>
            Gets the original texture.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.SaturationImage.SaturatedTexture">
            <summary>
            Gets the saturated texture.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.SaturationImage.IsSaturated">
            <summary>
            Gets or sets whether applay saturation effect for the image.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Primitives.ToggleButton">
            <summary>
            Base class for controls that can switch states, such as OpenXLive.Form.Controls.CheckBox
            and OpenXLive.Form.Controls.RadioButton.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleButton.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Primitives.ToggleButton class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleButton.OnClick">
            <summary>
            Occurs when the OpenXLive.Form.Controls.Primitives.ToggleButton is clicked.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleButton.OnToggle">
            <summary>
            Toggle the value of IsChecked property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleButton.FireCheckdEvent">
            <summary>
            Raises Checked event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleButton.FireUncheckedEvent">
            <summary>
            Raises Unchecked event.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ToggleButton.IsChecked">
            <summary>
            Gets or sets whether the OpenXLive.Form.Controls.Primitives.ToggleButton is checked.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Primitives.ToggleButton.Checked">
            <summary>
            Occurs when an OpenXLive.Form.Controls.Primitives.ToggleButton is checked.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Primitives.ToggleButton.Unchecked">
            <summary>
            Occurs when an OpenXLive.Form.Controls.Primitives.ToggleButton is unchecked.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.SNSCheckBox.LoadTemplateOverride">
            <summary>
            Load a control template as visual content for a control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.SNSCheckBox.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.Control has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.SNSCheckBox.OnToggle">
            <summary>
            Toggle the value of IsChecked property.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.SNSCheckBox.SNSIcon">
            <summary>
            Gets or sets the sns icon.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.StatusBox">
            <summary>
            Contains original status of a status.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Controls.StatusBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.HitImage(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets a value that indicate whether hit the image in the StatusBox.
            </summary>
            <param name="point">The specifies point.</param>
            <returns></returns>
        </member>
        <member name="F:OpenXLive.Controls.StatusBox._ImageSize">
            <summary>
            The size of the image.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.UpdateImage">
            <summary>
            Update the image.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.LoadedInternal">
            <summary>
            Fire loaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.UnloadedInternal">
            <summary>
            Fire Unloaded event.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.StatusBox._ActualTriangleSize">
            <summary>
            The actual triangle size.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnMaxHeightChanged">
            <summary>
            Called when MaxHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnMaxWidthChanged">
            <summary>
            Called when MaxWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnMinHeightChanged">
            <summary>
            Called when MinHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnMinWidthChanged">
            <summary>
            Called when MinWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnAutoHeightChanged">
            <summary>
            Called when AutoHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnAutoWidthChanged">
            <summary>
            Called when AutoHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnHeightChanged">
            <summary>
            Called when height property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Controls.StatusBox has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.DrawBorder">
            <summary>
            Draw border.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.DrawTriangle">
            <summary>
            Draw triangle.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.StatusBox._VisualRect">
            <summary>
            Indicates the visual rectangle of ChatBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws ChatBox.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.Refresh">
            <summary>
            Refresh.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusBox.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.FixImage">
            <summary>
            Gets or sets whether fix the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.ImageVisible">
            <summary>
            Gets or sets the visible of the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.CanViewPicture">
            <summary>
            Gets or sets a value indicating whether can view the image in the StatusBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.MaxImageHeight">
            <summary>
            Gets or sets the maximum height of the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.MaxImageWidth">
            <summary>
            Gets or sets the maximum width of the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.ImageLoadingHeight">
            <summary>
            Gets or sets the maximum height of the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.ImageLoadingWidth">
            <summary>
            Gets or sets the maximum width of the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.Image">
            <summary>
            Gets or sets the image source of the StatusBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.Background">
            <summary>
             Gets or sets a color that provides the background of the StatusBox control.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.FontFamily">
            <summary>
            Gets or sets the FontFamily for the OpenXLive.Controls.StatusBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.FontSize">
            <summary>
            Gets or sets the size of the text in this StatusBox. The defualt value is 25 (in pixels).
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.Text">
            <summary>
            Gets or sets the text contents of a OpenXLive.Controls.StatusBox.
            </summary>
            <exception cref="T:System.ArgumentNullException">Text is set to null.</exception>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.TextAlignment">
            <summary>
            Gets or sets a value that indicates the horizontal alignment of text content. The default value is TextAlignment.Left.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.TextWrapping">
            <summary>
            Gets or sets how the OpenXLive.Controls.StatusBox wraps text. The default value is TextWrapping.NoWrap.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusBox.TriangleVisible">
            <summary>
            Gets or sets whether the triangle is visible.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.LeaderboardItem">
            <summary>
            Provider a item in a leaderboard.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.LeaderboardListBoxState">
            <summary>
            Represent state for XLiveLeaderboardListBox.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.LeaderboardListBoxState.None">
            <summary>
            No myscore in the ItemsSource.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.LeaderboardListBoxState.Down">
            <summary>
            Myscore bellow the bottom of the screen.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.LeaderboardListBoxState.RaiseOrDrop">
            <summary>
            Myscore is drawing on the screen.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.LeaderboardListBoxState.Up">
            <summary>
            Myscore above the top of the screen.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveLeaderboardListBox">
            <summary>
            Provider a listbox use to show leaderboard.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.#ctor">
            <summary>
            Initializes a new instance of the XLiveLeaderboardListBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.InitializeTemplateListBox">
            <summary>
            Register template list box event.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.LoadTemplateListBoxOverride">
            <summary>
            Load template listbox for the XLiveLeaderboardListBox.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.LoadTemplateOverride">
            <summary>
            Add content to the control template.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.LoadItemsSource">
            <summary>
            Load itemsSrouce.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.OnLoadItemsSource">
            <summary>
            Called when set ItemsSource of OpenXLive.Controls.XLiveMessagesListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.LoadTemplateContent">
            <summary>
            Load content for template.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox._MyScorePanel_Tap(System.Object,OpenXLive.Form.InputEventArgs)">
            <summary>
            Tap my score
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.ContentControl has changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.XLiveLeaderboardListBox._MyScoreIndex">
            <summary>
            The index of my score in the items source.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.OnItemsSourceLoaded">
            <summary>
            Called when set ItemsSource of OpenXLive.Form.XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.OnItemsChanged">
            <summary>
            Called when ItemsSource remove or add item.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.GetMyScroeIndex">
            <summary>
            Gets the index of myscroe in the items source.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update listbox.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Controls.XLiveLeaderboardListBox._State">
            <summary>
            The state of the XLiveLeaderboardListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.SetItemVisualRect">
            <summary>
            Set item visual rectangle.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.UpdateState">
            <summary>
            Update State.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardListBox.HitTopThree(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Returns a value indicating the index of the tap item in the listbox.
            </summary>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardListBox.LoadingBarVisible">
            <summary>
            Gets or sets whether the load button is visible.
            The default is true.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardListBox.ItemsSource">
            <summary>
            Gets or sets a collection used to generate the content of XLiveMessagesListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardListBox.TopThreeTemplate">
            <summary>
            Gets or sets the template for the top three item on the leaderboard listbox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardListBox.MyTemplate">
            <summary>
            Gets or sets the template for the my scrore on the leaderboard listbox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardListBox.MyScore">
            <summary>
            Gets or sets the score of current player in the leaderboard.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardListBox.State">
            <summary>
            Gets or sets the state of the XLiveLeaderboardListBox.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveLeaderboardTopThreeTemplate">
            <summary>
            Provider data template for top three score on the leaderboard.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardTopThreeTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load third item content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardTopThreeTemplate.FirstBackground">
            <summary>
            Gets or sets the background of the first item.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardTopThreeTemplate.SecondBackground">
            <summary>
            Gets or sets the background of the second item.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardTopThreeTemplate.ThirdBackground">
            <summary>
            Gets or sets the background of the third item.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveLeaderboardMyTemplate">
            <summary>
            Provider data template for my score on the leaderboard.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardMyTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load my item content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardMyTemplate.Background">
            <summary>
            Gets or sets the background of the my score item.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveLeaderboardNormalTemplate">
            <summary>
            Provider data template for normal score on the leaderboard.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardNormalTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load normal item content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Controls.XLiveFriendLeaderboardTopThreeTemplate">
            <summary>
            Provider data template for top three score on the friend leaderboard.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardTopThreeTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load top three item content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Controls.XLiveFriendLeaderboardMyTemplate">
            <summary>
            Provider data template for my score on the friend leaderboard.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardMyTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load my item content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Controls.XLiveFriendLeaderboardMyTemplate.Background">
            <summary>
            Gets or sets the background of the my score item.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveFriendLeaderboardNormalTemplate">
            <summary>
            Provider data template for normal score on the friend leaderboard.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveFriendLeaderboardNormalTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load third item content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardTemplateListBox.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLeaderboardTemplateListBox.PrepareContainerForItemOverride(OpenXLive.Form.Controls.ItemContainer,System.Object,OpenXLive.Form.Controls.Item)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="container">The container used to display the specified item.</param>
            <param name="dataContext">The data context of the item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardTemplateListBox.TopThreeTemplate">
            <summary>
            Gets or sets the template for the top three items on the XLiveLeaderboardTemplateListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLeaderboardTemplateListBox.MyTemplate">
            <summary>
            Gets or sets the template for the my scrore on the leaderboard listbox.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.StatusWrapper">
            <summary>
            Show a status without repost.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Controls.StatusWrapper class.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.HitImage(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets a value that indicate whether hit the image in the StatusBox.
            </summary>
            <param name="point">The specifies point.</param>
            <returns></returns>
        </member>
        <member name="F:OpenXLive.Controls.StatusWrapper._ImageSize">
            <summary>
            The size of the image.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.UpdateImage">
            <summary>
            Update the image.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.LoadedInternal">
            <summary>
            Fire loaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.UnloadedInternal">
            <summary>
            Fire Unloaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnMaxHeightChanged">
            <summary>
            Called when MaxHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnMaxWidthChanged">
            <summary>
            Called when MaxWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnMinHeightChanged">
            <summary>
            Called when MinHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnMinWidthChanged">
            <summary>
            Called when MinWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnAutoHeightChanged">
            <summary>
            Called when AutoHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnAutoWidthChanged">
            <summary>
            Called when AutoHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnHeightChanged">
            <summary>
            Called when height property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Controls.StatusBox has changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.StatusWrapper._VisualRect">
            <summary>
            Indicates the visual rectangle of ChatBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws ChatBox.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.Refresh">
            <summary>
            Refresh.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.StatusWrapper.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.FixImage">
            <summary>
            Gets or sets whether fix the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.ImageVisible">
            <summary>
            Gets or sets the visible of the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.CanViewPicture">
            <summary>
            Gets or sets a value indicating whether can view the image in the StatusBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.MaxImageHeight">
            <summary>
            Gets or sets the maximum height of the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.MaxImageWidth">
            <summary>
            Gets or sets the maximum width of the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.ImageLoadingHeight">
            <summary>
            Gets or sets the maximum height of the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.ImageLoadingWidth">
            <summary>
            Gets or sets the maximum width of the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.Image">
            <summary>
            Gets or sets the image source of the StatusBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.Background">
            <summary>
             Gets or sets a color that provides the background of the StatusBox control.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.FontFamily">
            <summary>
            Gets or sets the FontFamily for the OpenXLive.Controls.StatusBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.FontSize">
            <summary>
            Gets or sets the size of the text in this StatusBox. The defualt value is 25 (in pixels).
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.Text">
            <summary>
            Gets or sets the text contents of a OpenXLive.Controls.StatusBox.
            </summary>
            <exception cref="T:System.ArgumentNullException">Text is set to null.</exception>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.TextAlignment">
            <summary>
            Gets or sets a value that indicates the horizontal alignment of text content. The default value is TextAlignment.Left.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.StatusWrapper.TextWrapping">
            <summary>
            Gets or sets how the OpenXLive.Controls.StatusBox wraps text. The default value is TextWrapping.NoWrap.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.TaskListBox">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.TaskListBox.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="T:OpenXLive.Controls.StatusItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveTimelineListBox">
            <summary>
            Represents a ListBox to show status.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveTimelineListBox.InitializeTemplateListBox">
            <summary>
            Register template list box event.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveTimelineListBox.LoadTemplateListBoxOverride">
            <summary>
            Load template listbox for the XLiveTimelineListBox.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.XLiveTimelineListBox.LoadItemsSource">
            <summary>
            Load itemsSrouce.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveTimelineListBox.OnLoadItemsSource">
            <summary>
            Called when set ItemsSource of OpenXLive.Controls.XLiveTimelineListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveTimelineListBox.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveTimelineListBox.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for released operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveTimelineListBox.MonitorScrolling">
            <summary>
            Monitor scrolling.
            </summary>
        </member>
        <member name="E:OpenXLive.Controls.XLiveTimelineListBox.DragDown">
            <summary>
            Occurs when the drag down the XLiveTimelineListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveTimelineListBox.RepostTemplate">
            <summary>
            Gets or sets the loading template.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveTimelineListBox.LoadingBarVisible">
            <summary>
            Gets or sets whether the load button is visible.
            The default is true.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveTimelineListBox.ItemsSource">
            <summary>
            Gets or sets a collection used to generate the content of XLiveTimelineListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.TimelineRefreshTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Controls.XLiveTimelineTemplateListBox">
            <summary>
            Represents a template ListBox in TimelineListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveTimelineTemplateListBox.OnItemsSourceLoaded">
            <summary>
            Called when set ItemsSource of OpenXLive.Form.Controls.ItemsControl.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.XLiveTimelineTemplateListBox._ItemsSourceChanged">
            <summary>
            Indicates whether the items source has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveTimelineTemplateListBox.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveTimelineTemplateListBox.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveTimelineTemplateListBox.PrepareContainerForItemOverride(OpenXLive.Form.Controls.ItemContainer,System.Object,OpenXLive.Form.Controls.Item)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="container">The container used to display the specified item.</param>
            <param name="dataContext">The data context of the item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="P:OpenXLive.Controls.XLiveTimelineTemplateListBox.RefreshTemplate">
            <summary>
            Gets or sets the refresh template.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveTimelineTemplateListBox.RepostTemplate">
            <summary>
            Gets or sets the repost status template.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveLoadingTemplate">
            <summary>
            Loading template for dynamic loading list box.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveLoadingTemplate.LoadContentOverride(System.Object)">
            <summary>
            Creates the OpenXLive.Form.Controls.Control objects in the OpenXLive.Forms.XLiveLoadingTemplate.
            </summary>
            <param name="dataContext">The data context of the template.</param>
            <returns>The root OpenXLive.Form.Controls.Control of the OpenXLive.Forms.XLiveLoadingTemplate.</returns>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLoadingTemplate.Width">
            <summary>
            Gets or sets the width of the tempalete
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLoadingTemplate.Height">
            <summary>
            Gets or sets the height of the tempalete
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveLoadingTemplate.LoadingFontSize">
            <summary>
            Gets or sets the font size of the loading text.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveMessagesLoadButtonTemplate">
            <summary>
            Load button template for messages list box.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveMessagesLoadButtonTemplate.LoadContentOverride(System.Object)">
            <summary>
            Creates the OpenXLive.Form.Controls.Control objects in the OpenXLive.Forms.XLiveLoadingTemplate.
            </summary>
            <param name="dataContext">The data context of the template.</param>
            <returns>The root OpenXLive.Form.Controls.Control of the OpenXLive.Forms.XLiveLoadingTemplate.</returns>
        </member>
        <member name="T:OpenXLive.Controls.XLiveMessagesListBox">
            <summary>
            Contians a list of messages.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveMessagesListBox.#ctor">
            <summary>
            Initializes a new instance of the XLiveMessagesListBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveMessagesListBox.InitializeTemplateListBox">
            <summary>
            Register template list box event.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveMessagesListBox.LoadItemsSource">
            <summary>
            Load itemsSrouce.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveMessagesListBox.OnLoadItemsSource">
            <summary>
            Called when set ItemsSource of OpenXLive.Controls.XLiveMessagesListBox.
            </summary>
        </member>
        <member name="E:OpenXLive.Controls.XLiveMessagesListBox.LoadButtonClick">
            <summary>
            Occurs when click the load button.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveMessagesListBox.LoadingBarVisible">
            <summary>
            Gets or sets whether the load button is visible.
            The default is true.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveMessagesListBox.InsertState">
            <summary>
            Gets or sets the state of the list box.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveMessagesListBox.ItemsSource">
            <summary>
            Gets or sets a collection used to generate the content of XLiveMessagesListBox.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.MessageTemplate">
            <summary>
            DataTemplate for message.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.MessageTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Controls.XLiveMessagsTemplateListBox">
            <summary>
            Contians a list of messages.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveMessagsTemplateListBox.#ctor">
            <summary>
            Initializes a new instance of the XLiveMessagsTemplateListBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveMessagsTemplateListBox.OnItemsSourceLoaded">
            <summary>
            Called when set ItemsSource of OpenXLive.Controls.XLiveMessagsTemplateListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveMessagsTemplateListBox.OnItemsChanged">
            <summary>
            Called when ItemsSource remove or add item.
            </summary>
        </member>
        <member name="F:OpenXLive.Controls.XLiveMessagsTemplateListBox._LastMessage">
            <summary>
            Indicates the prvious message.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveMessagsTemplateListBox.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="P:OpenXLive.Controls.XLiveMessagsTemplateListBox.InsertState">
            <summary>
            Gets or sets the state of the list box.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveRecentGamesListBox">
            <summary>
            Providers a tempalte listbox to show recent game.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveRecentGamesListBox.LoadTemplateListBoxOverride">
            <summary>
            Load template listbox for the XLiveRecentGamesListBox.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Controls.XLiveRecentGamesListBox.Arrow">
            <summary>
            Gets or sets the arrow txture.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.RecentGameHeaderTempalte.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Controls.RecentGameHeaderTempalte.Arrow">
            <summary>
            Gets or sets the arrow txture.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.FeaturedGameHeaderTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Controls.FeaturedGameHeaderTemplate.Arrow">
            <summary>
            Gets or sets the arrow txture.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.RecentGameTempalte">
            <summary>
            The normal template in the games list box.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.RecentGameTempalte.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Controls.GameCenterFeaturedGameTempalte">
            <summary>
            The normal template in the games list box.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.GameCenterFeaturedGameTempalte.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Controls.XLiveRecentGamesTemplateListBox.GetItemOverride(System.Object,System.Single,System.Single)">
            <summary>
            Creates or identifies the Item used to display a specified data.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context for Item.</param>
            <param name="itemWidth">The width of the target ItemsControl.</param>
            <param name="previousItemsHeight">The height contains the first to the previous of current Item.</param>
        </member>
        <member name="M:OpenXLive.Controls.XLiveRecentGamesTemplateListBox.PrepareContainerForItemOverride(OpenXLive.Form.Controls.ItemContainer,System.Object,OpenXLive.Form.Controls.Item)">
            <summary>
            Prepares the specified container to display the specified item.
            </summary>
            <param name="container">The container used to display the specified item.</param>
            <param name="dataContext">The data context of the item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="P:OpenXLive.Controls.XLiveRecentGamesTemplateListBox.RecentHeaderTemplate">
            <summary>
            Gets or sets the template for the recent header on the XLiveRecentGamesTemplateListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveRecentGamesTemplateListBox.RecentTemplate">
            <summary>
            Gets or sets the template for the recent game on the XLiveRecentGamesTemplateListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveRecentGamesTemplateListBox.FeaturedHeaderTemplate">
            <summary>
            Gets or sets the template for the featured header on the XLiveRecentGamesTemplateListBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Controls.XLiveRecentGamesTemplateListBox.FeaturedTemplate">
            <summary>
            Gets or sets the template for the featured game on the XLiveRecentGamesTemplateListBox.
            </summary>
        </member>
        <member name="T:OpenXLive.Controls.XLiveStatusRepostTemplate">
            <summary>
            Providers a datatemplate template for status in the timeline.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveStatusRepostTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Controls.XLiveStatusNormalTemplate">
            <summary>
            Providers a datatemplate template for status in the timeline.
            </summary>
        </member>
        <member name="M:OpenXLive.Controls.XLiveStatusNormalTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Forms.XLiveAchievementsForm">
            <summary>
            Contains a form show achievements of the game.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveForm">
            <summary>
            Encapsulates content that can be drawn on the screen.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveForm.PageInternal">
            <summary>
            A game page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.#ctor(OpenXLive.XLiveFormManager)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveForm class.
            </summary>
            <param name="manager"></param>
            <exception cref="T:System.ArgumentNullException">manager is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.#ctor(OpenXLive.XLiveFormManager,OpenXLive.Forms.XLiveGamePage)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveForm class.
            </summary>
            <param name="manager"></param>
            <param name="page"></param>
            <exception cref="T:System.ArgumentNullException">manager is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.Initialize">
            <summary>
            Initializes the screen manager component.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.LoadContent">
            <summary>
            Load your graphics content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.UnloadContent">
            <summary>
            Unload your graphics content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update state for each Form.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.HardwareKeyPressed">
            <summary>
            Called when the hardware key is pressed.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Tells each form to draw itself.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveForm.m_Title">
            <summary>
            Indicates the title of the form.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.OnLoad">
            <summary>
            Raise Load event.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.OnClosed">
            <summary>
            Raise Closed event.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the from is closing.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveForm._IsShown">
            <summary>
            Indicates whether the form has shown.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveForm._IsClosed">
            <summary>
            Indicates whether the form has closed.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.Show">
            <summary>
            Show a XLiveForm.
            </summary>
            <exception cref="T:System.InvalidOperationException">The form is closing or has been closed.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.Close">
            <summary>
            Close a XLiveForm, the XLiveForm can be closed only when the form is the activated from.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.Deactivated(OpenXLive.Form.PageDeactivatedEventArgs)">
            <summary>
            Called when the form is Deactivated.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.Activated(OpenXLive.Form.PageActivatedEventArgs)">
            <summary>
            Called when the form is being made active after previously being put into a dormant state or tombstoned.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveForm.HasPage(OpenXLive.Form.GamePage)">
            <summary>
            Return a value that indicates whether the form has the specifies page.
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Forms.XLiveForm.BackgroundRectangle">
            <summary>
            Gets the rectangle of the background.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveForm.Title">
            <summary>
            Gets the Form title
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveForm.FormManager">
            <summary>
            Gets the from manager of a XLiveFrom.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveForm.State">
            <summary>
            Gets the state of a XLiveFrom.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveForm.Background">
            <summary>
            Gets or sets the background of a form.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveForm.ScreenWidth">
            <summary>
            Gets the screen width of the GraphicsDevice.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveForm.ScreenHeight">
            <summary>
            Gets the screen height of the GraphicsDevice.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveForm.IsManuallyDeactivated">
            <summary>
            Indicates whether this form deactivate the game
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveForm.Content">
            <summary>
            Gets or sets the value of the OpenXLive.Forms.XLiveForm content property.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveForm.SpriteBatch">
            <summary>
            Gets the SpriteBatch of a XLiveForm.
            </summary>
        </member>
        <member name="E:OpenXLive.Forms.XLiveForm.Load">
            <summary>
            Occurs before a form is displayed for the first time.
            </summary>
        </member>
        <member name="E:OpenXLive.Forms.XLiveForm.Closed">
            <summary>
            Occurs when this form have closed.
            </summary>
        </member>
        <member name="E:OpenXLive.Forms.XLiveForm.Closing">
            <summary>
            Occurs when this form is closing.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveGameCenterForm">
            <summary>
            OpenXLive game center form.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveLeaderboardForm">
            <summary>
            Contains a form show leaderboard.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveLeaderboardSelectionForm">
            <summary>
            Contains a form select leaderboard.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveLogonForm">
            <summary>
            OpenXLive logon form.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLivePromoteGamesForm">
            <summary>
            Contains a form show games.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveSocialConnectForm">
            <summary>
            Contains a form to connect social network.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveGamePage">
            <summary>
            The class for the XLiveGamePage for the OpenXLive UI.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.GamePage">
            <summary>
            The class for the GamePage UI object for Windows Phone game projects.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Page">
            <summary>
            Encapsulates content that can be drawn on the screen.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Page.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Page class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Page.LoadedInternal">
            <summary>
            Loaded content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Page.UnloadedInternal">
            <summary>
            Unloaded content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Page.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Page.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Page.SetContentVisibleCore(System.Boolean)">
            <summary>
            Sets the VisibleCore property for content.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.SetContentInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for content.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates page.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws page.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Form.Page._IsShown">
            <summary>
            Indicates whether the page has shown.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Page._IsClosed">
            <summary>
            Indicates whether the page has closed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Page.Show(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Shows a page.
            </summary>
            <param name="e"></param>
            <exception cref="T:System.InvalidOperationException">The page is closing or has been closed or has been shown.</exception>
        </member>
        <member name="M:OpenXLive.Form.Page.Close(System.ComponentModel.CancelEventArgs)">
            <summary>
            Close a page.
            </summary>
            <param name="e">A System.ComponentModel.CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenXLive.Form.Page.ForceClose">
            <summary>
            Force close a page and will not raise OpenXLive.Form.Page.Closing event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Page.RemovedFromJournal">
            <summary>
            This method is called when remove this page from the back stack.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Page.PageActivated(Microsoft.Phone.Shell.ActivatedEventArgs)">
            <summary>
            Called when the application is being made active.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.PageDeactivated(Microsoft.Phone.Shell.DeactivatedEventArgs)">
            <summary>
            Called when the application is being Deactivated.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.PageNavigateTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.PageNavigateFrom(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page is no longer the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.PageNavigatingFrom(OpenXLive.Form.NavigatingCancelEventArgs)">
            <summary>
            Called just before a page is no longer the active page.
            </summary>
            <param name="e">An object that contains the event data.</param>
        </member>
        <member name="M:OpenXLive.Form.Page.PageOrientationChanged(OpenXLive.Form.OrientationChangedEventArgs)">
            <summary>
            Called when display orientaion of game window have changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.OnActivated(OpenXLive.Form.PageActivatedEventArgs)">
            <summary>
            Raises the OpenXLive.Form.Page.Activated event.
            </summary>
            <param name="e">An OpenXLive.Form.PageActivatedEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenXLive.Form.Page.OnDeactivated(OpenXLive.Form.PageDeactivatedEventArgs)">
            <summary>
            Raises the OpenXLive.Form.Page.Deactivated event.
            </summary>
            <param name="e">An OpenXLive.Form.PageDeactivatedEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenXLive.Form.Page.OnClosed">
            <summary>
            Called when a page has closed and Raises the OpenXLive.Form.Page.Closed event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Page.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the OpenXLive.Form.Page.Closing event.
            </summary>
            <param name="e">A System.ComponentModel.CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenXLive.Form.Page.OnNavigatedFrom(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page is no longer the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.Page.OnNavigatingFrom(OpenXLive.Form.NavigatingCancelEventArgs)">
            <summary>
            Called just before a page is no longer the active page.
            </summary>
            <param name="e">An object that contains the event data.</param>
        </member>
        <member name="M:OpenXLive.Form.Page.OnRemovedFromJournal">
            <summary>
            This method is called on a game page after it has been removed from the journal
            through the OpenXLive.Form.NavigationService.RemoveBackEntry() method.
            It is also raise the the OpenXLive.Form.Page.Closed event but not raise the
            the OpenXLive.Form.Page.Closing event,
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Page.OnPageOrientationChanged(OpenXLive.Form.OrientationChangedEventArgs)">
            <summary>
            Called when Orientation property changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:OpenXLive.Form.Page.Activated">
            <summary>
            Occurs when the page is being made active after previously being put into a dormant state or tombstoned.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Page.Deactivated">
            <summary>
            Occurs when the page is being deactivated.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Page.Closed">
            <summary>
            Occurs when the page is about to close.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Page.Closing">
            <summary>
            Occurs directly when a page is being closed, and can be
            handled to cancel page closure.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Page.NavigatedFrom">
            <summary>
            Occurs when a page is no longer the active page.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Page.NavigatedTo">
            <summary>
            Occurs when a page becomes the active page.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Page.NavigatingFrom">
            <summary>
            Occurs just before a page is no longer the active page.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Page.OrientationChanged">
            <summary>
            This event is raised when the DisplayOrientation of the game window has changed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Page.CurrentOrientation">
            <summary>
            Gets the current display orientation, which reflects the physical orientation of the phone in the user's hand.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Page.SupportedOrientations">
            <summary>
            Gets or sets the supported orientations.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Page.Content">
            <summary>
            Gets or sets the value of the OpenXLive.Form.Page content property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.GamePage.#ctor">
            <summary>
            Initializes a new instance of the of the GamePage class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.GamePage.LoadedInternal">
            <summary>
            Loaded content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.GamePage.UnloadedInternal">
            <summary>
            Unloaded content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.GamePage.PageBackKeyPress(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the hardware Back button is pressed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.GamePage.OnBackKeyPress(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the OpenXLive.Form.GamePage.BackKeyPress event.
            </summary>
            <param name="e">A System.ComponentModel.CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenXLive.Form.GamePage.HandlePriorObjectGetsture(Microsoft.Xna.Framework.Input.Touch.GestureSample,System.Boolean@)">
            <summary>
            Handle prior object getsture.
            </summary>
            <param name="gestureSample"></param>
            <param name="handledGesture"></param>
        </member>
        <member name="M:OpenXLive.Form.GamePage.HandlePriorObjectTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation,System.Boolean@)">
            <summary>
            Handle prior object touch operation.
            </summary>
            <param name="touchLocation"></param>
            <param name="handledTouch"></param>
        </member>
        <member name="M:OpenXLive.Form.GamePage.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates a game page.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.GamePage.OnPriorDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called after OnDraw method. this method will draw ApplicationBar on the top layer.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="M:OpenXLive.Form.GamePage.OnEarliestDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called after OnDraw method. this method will draw element on the bottom layer.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="P:OpenXLive.Form.GamePage.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.GamePage.ApplicationBar">
            <summary>
            Gets or sets the application bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.GamePage.DisableTouch">
            <summary>
            Gets a value indicating whether disable touch.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.GamePage.ProgressIndicator">
            <summary>
            Gets or sets the ProgressIndicator.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.GamePage.BackKeyPress">
            <summary>
            This event is raised when the hardware Back button is pressed.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGamePage.#ctor">
            <summary>
            Initializes a new instance of OpenXLive.Forms.XLiveGamePage class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGamePage.OnClosed">
            <summary>
            Called when a page has closed
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGamePage.OnBackgroundChanged">
            <summary>
            Called when background changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGamePage.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update a XLiveGamePage.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGamePage.OnEarliestDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called after OnDraw method. this method will draw element on the top layer.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGamePage._BackgroundSourceRectangle">
            <summary>
            Indicates the source texels of the background.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGamePage.UpdateBackground">
            <summary>
            Update background rectangle.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGamePage.DrawBackground">
            <summary>
            Draw background.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGamePage.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the UIObject class.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="P:OpenXLive.Forms.XLiveGamePage.BackgroundVisible">
            <summary>
            Gets or sets a value indicates whether draw the background.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveGamePage.BackgroundLayerOpacity">
            <summary>
            Gets or sets the opacity of the layer on the background.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveGamePage.Background">
            <summary>
            Gets or sets the background of a XLiveGamePage.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveGamePage.BackgroundStretch">
            <summary>
            Gets or sets the stretch for the background.
            </summary>
        </member>
        <member name="T:OpenXLive.XLiveGuide">
            <summary>
            Guide.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveGuide.CheckLogin">
            <summary>
            Return a value indicating whether the player have logged in.
            </summary>
            <returns>ture: logged in, otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.XLiveGuide.Start">
            <summary>
            Start guide.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveGuide.Stop">
            <summary>
            Stop guide.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveGuide.Save">
            <summary>
            Save info to the isolated storage.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveGuide.Load">
            <summary>
            Load info from the isolated storage.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGuide.Guide">
            <summary>
            Gets the instance of XLiveGuide.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGuide.FirstStart">
            <summary>
            Gets or sets a value that indicates whether the user fist start the game.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGuide.FollowDeveloper">
            <summary>
            Gets or sets a value that indicates whether the follow developer mission have completed.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGuide.ShowLevelUpMessageBox">
            <summary>
            Gets or sets a value that indicates whether show level up message box when level up.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGuide.ShowNotificationMessageBox">
            <summary>
            Gets or sets a value that indicates whether show notification message box when notification come up.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGuide.StatusCategory">
            <summary>
            Gets or sets the category of timeline.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGuide.UserState.GameId">
            <summary>
            Gets or sets the game id.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGuide.UserState.Id">
            <summary>
            Gets or sets the id of the user.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGuide.UserState.FollowDeveloper">
            <summary>
            Gets or sets a value that indicates whether the follow developer mission have completed.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGuide.UserState.ShowLevelUpMessageBox">
            <summary>
            Gets or sets a value that indicates whether show level up message box when level up.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGuide.UserState.ShowNotificationMessageBox">
            <summary>
            Gets or sets a value that indicates whether show notification message box when notification come up.
            </summary>
        </member>
        <member name="T:OpenXLive.XLiveNotificationComponent">
            <summary>
            This is a game component that implements IUpdateable.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveNotificationComponent.RequestInterval">
            <summary>
            The interval of the timer.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveNotificationComponent._NotificationCache">
            <summary>
            The cache of notification.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveNotificationComponent.#ctor(Microsoft.Xna.Framework.Game)">
            <summary>
            
            </summary>
            <param name="game"></param>
            <exception cref="T:System.UnauthorizedAccessException">Invalid cross-thread access.</exception>
        </member>
        <member name="M:OpenXLive.XLiveNotificationComponent._Notification_GetListCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            Handling get list completed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.XLiveNotificationComponent.CheckPlayer(System.Object)">
            <summary>
            Check player.
            </summary>
            <param name="playerTicket"></param>
            <returns></returns>
        </member>
        <member name="F:OpenXLive.XLiveNotificationComponent._IsRequesting">
            <summary>
            Indicates whether is being requesting the notification list.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveNotificationComponent.Initialize">
            <summary>
            Allows the game component to perform any initialization it needs to before starting
            to run.  This is where it can query for any required services and load content.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveNotificationComponent.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game component to update itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:OpenXLive.XLiveNotificationComponent.GetList(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Gets notification list.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.XLiveNotificationComponent.ShowNotification(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Show notification.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.XLiveNotificationComponent._FollowDeveloperTask">
            <summary>
            Indicates the follow developer task.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveNotificationComponent.CheckFollowDeveloperTask">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveNotificationComponent.PopupFollowDeveloperTask(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Follow developer.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveNotificationComponent.Reset">
            <summary>
            Reset and clear cache.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveAchievementProfilePage">
            <summary>
            Achievement profile page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAchievementProfilePage.#ctor(OpenXLive.Features.Achievement)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveAchievementProfilePage class.
            </summary>
            <param name="achievement"></param>
            <exception cref="T:System.ArgumentNullException">achievement is null.</exception>
        </member>
        <member name="F:OpenXLive.Forms.XLiveAchievementProfilePage._PointIcon">
            <summary>
            Gets or sets the icon for point.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveAchievementProfilePage._Achievement">
            <summary>
            Current selected achievement.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAchievementProfilePage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAchievementProfilePage.GetProfile">
            <summary>
            Gets the profile of the game.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAchievementProfilePage.image_Tap(System.Object,OpenXLive.Form.InputEventArgs)">
            <summary>
            Show player details.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:OpenXLive.Forms.XLiveAchievementsPage">
            <summary>
            Achievements page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAchievementsPage.#ctor(OpenXLive.Features.GameSession)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveAchievementsPage class.
            </summary>
            <param name="session"></param>
            <exception cref="T:System.ArgumentNullException">session is null.</exception>
        </member>
        <member name="F:OpenXLive.Forms.XLiveAchievementsPage._PointIcon">
            <summary>
            Gets or sets the icon for point.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveAchievementsPage._LockIcon">
            <summary>
            Gets or sets the icon for lock.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAchievementsPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAchievementsPage.InitializeAchievements(OpenXLive.Features.GameSession)">
            <summary>
            Initialize achievement.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAchievementsPage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAchievementsPage.SearchAchievements">
            <summary>
            Search.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAchievementsPage.SetLoadingBarVisible(OpenXLive.Controls.XLiveDynamicLoadListBox,OpenXLive.Features.IPaging)">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
            <param name="loadListBox"></param>
            <param name="search"></param>
        </member>
        <member name="T:OpenXLive.Forms.AchievementTemplate">
            <summary>
            Achievement datatemplate.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.AchievementTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Forms.AchievementTemplate.PointIcon">
            <summary>
            Gets or sets the icon for point.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.AchievementTemplate.LockIcon">
            <summary>
            Gets or sets the icon for lock.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveAnnouncementProfilePage">
            <summary>
            Providers a page show an announcement.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAnnouncementProfilePage.#ctor(OpenXLive.Features.AnnouncementItem)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveAnnouncementProfilePage class.
            </summary>
            <param name="item"></param>
            <exception cref="T:OpenXLive.Features.AnnouncementItem">item is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAnnouncementProfilePage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveAnnouncementsPage">
            <summary>
            This page is used to list announcements.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAnnouncementsPage.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveAnnouncementsPage class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAnnouncementsPage.SetProgressIndicator">
            <summary>
            Set progress indicator.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAnnouncementsPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAnnouncementsPage.InitializeAnnouncement">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAnnouncementsPage.SetAnnouncementListBoxLoadingBarVisible">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAnnouncementsPage.GetAnnouncements">
            <summary>
            Gets the announcement list.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAnnouncementsPage.Refresh">
            <summary>
            Refresh.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveAnnouncementsPage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.AnnouncementTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Forms.XLiveFriendsPage">
            <summary>
            Providers a page show friends
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the XLiveFriendsPage class.
            </summary>
            <param name="refresh"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.Refresh">
            <summary>
            Refresh.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.SetApplicationBar">
            <summary>
            Add app bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.SetFriendsListBoxLoadingBarVisible">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.GetFriends">
            <summary>
            Gets friends.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.player_GetMyFriendsCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            Handle get friends completed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.RefreshFriends">
            <summary>
            Refresh friends.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.SetFollowingListBoxLoadingBarVisible">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.GetFollowing">
            <summary>
            Gets following.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.player_GetMyFollowingsCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            Handle get following completed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.RefreshFollowing">
            <summary>
            Refresh following.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.SetFollowersListBoxLoadingBarVisible">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.GetFollowers">
            <summary>
            Gets followers.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.player_GetMyFollowersCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            Handle get followers completed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.RefreshFollowers">
            <summary>
            Refresh followers.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.OnClosed">
            <summary>
            Called when a page has closed
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update a XLiveGamePage.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFriendsPage.Reset">
            <summary>
            Reset cache.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.FriendsTemplate">
            <summary>
            The template for friend.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.FriendsTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Forms.XLiveGameCenterPage">
            <summary>
            Game center page.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage.TIMELINE_MAXSIZE">
            <summary>
            The maximum count of the status in one timeline.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveGameCenterPage class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.OnBackgroundChanged">
            <summary>
            Called when background changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.SetProgressIndicator">
            <summary>
            Set progress indicator.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.SetApplicationBar">
            <summary>
            Add app bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.AddRefreshAndGroupButton">
            <summary>
            Add refresh and group button.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.RemoveRefreshAndGroupButton">
            <summary>
            Remove refresh and group button.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.player_LogoffCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            logoff completed, refresh UI.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.InitialAnimation">
            <summary>
            Initialize animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.BeginCollapseOnlinePlayerAnimation">
            <summary>
            Begin online player collpase animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.BeginExpandOnlinePlayerAnimation">
            <summary>
            Begin online player expand animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.UpdateMessageCount">
            <summary>
            Update message counter.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.UpdateFriendCount">
            <summary>
            Update friends counter.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage.starNoneTxture">
            <summary>
            The star texture.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._TxtGameName">
            <summary>
            Display game name.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._GameImage">
            <summary>
            Display game thumnail.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._RatePanel">
            <summary>
            Contains rate of the game.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._TxtRank">
            <summary>
            Display rank of the user in the current game.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._TxtBeaten">
            <summary>
            Display the number of the user have beaten in the current game.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._TxtOnlineNumber">
            <summary>
            Display online player number.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._TxtAchievementsNumber">
            <summary>
            Display achievements.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._TxtObtainedAchievementsNumber">
            <summary>
            Display obtained achievements.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._TxtAnnouncementsNumber">
            <summary>
            Display announcements number.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage._achievementsIamge_Tap(System.Object,OpenXLive.Form.InputEventArgs)">
            <summary>
            Show achievements page.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage._OnlinePlayerBack_Tap(System.Object,OpenXLive.Form.InputEventArgs)">
            <summary>
            Show online player page.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage._LeaderboardBack_Tap(System.Object,OpenXLive.Form.InputEventArgs)">
            <summary>
            Show leaderboard selection page.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._RecentGamesListBox">
            <summary>
            Contains recent and hot games.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.SearchFeatured">
            <summary>
            Search featured games.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.GetFeaturedGamesCount">
            <summary>
            Gets the hot game count in the cache. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.SetLoadingBarVisible(OpenXLive.Controls.XLiveDynamicLoadListBox,OpenXLive.Features.IPaging)">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
            <param name="loadListBox"></param>
            <param name="search"></param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._UserAvatar">
            <summary>
            Displayer avatar of current user.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._TxtUserTitle">
            <summary>
            Display user title.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._TxtUserLevel">
            <summary>
            Display user level.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.UpdateTaskInfo">
            <summary>
            Update the task tile.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.UpdateTaskCount">
            <summary>
            Update task count and show the recentest task.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.ShowFriendsPage">
            <summary>
            Show friends page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage._ChangePictureTapArea_Tap(System.Object,OpenXLive.Form.InputEventArgs)">
            <summary>
            Tap camera and change picture.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage._LogonButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handle logon button and logon.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.ChangePicture">
            <summary>
            Changed picture.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._ChoosePicStream">
            <summary>
            The stream of the new avatar.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.task_Completed(System.Object,Microsoft.Phone.Tasks.PhotoResult)">
            <summary>
            Choose picture completed.
            </summary>
            <param name="sender"></param>
            <param name="result"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.UploadPhotoCallback(OpenXLive.DialogResult)">
            <summary>
            Upload photo message box callback.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.GetNewestHomeTimeline">
            <summary>
            Gets the newst status.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.RefreshHomeTimeline">
            <summary>
            Refresh home timeline and clear the cache.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.GetHomeTimeline">
            <summary>
            Get home timeline.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameCenterPage._TouchIsValid">
            <summary>
            Indicates whether the touch operation is valid.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.OnPressedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Handling pressed operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Handling released operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.OnBackKeyPress(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the OpenXLive.Form.GamePage.BackKeyPress event.
            </summary>
            <param name="e">A System.ComponentModel.CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update page.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.LoadInfo">
            <summary>
            Load game information.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.player_GetMyFriendsCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            Get my friends completed, refresh UI.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.player_PlayerGetProfileCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            Get profile completed, refresh UI.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.UpdateGameInfo(OpenXLive.Features.GameProfile)">
            <summary>
            Update game information.
            </summary>
            <param name="profile"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.UpdateUserRating(System.Single)">
            <summary>
            Update user rating.
            </summary>
            <param name="rating"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.UpdatePlayerInfo(OpenXLive.Features.MyPlayer)">
            <summary>
            Update player infomation.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.UpdateFriendsPictureWall">
            <summary>
            Update the picture wall.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.AddRecentGames(OpenXLive.Features.MyPlayer)">
            <summary>
            Add recent games in the list.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.AddFeaturedGames(System.Collections.Generic.IList{OpenXLive.Features.MyGame})">
            <summary>
            Add featured games in the list.
            </summary>
            <param name="games"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.OnClosed">
            <summary>
            Called when a page has closed
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.CurrentSession_GameGetProfileCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            Get profile completed, refresh UI.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameCenterPage.Reset">
            <summary>
            Reset.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveGameCenterPage.MessageNotification">
            <summary>
            Gets or sets the new message notification.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveGameCenterPage.FriendNotification">
            <summary>
            Gets or sets the new friend notification.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveGameCenterPage.FollowerNotification">
            <summary>
            Gets or sets the new follower notification.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveGameProfilePage">
            <summary>
            Game profile page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameProfilePage.#ctor(OpenXLive.Features.MyGame)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveGameProfilePage class.
            </summary>
            <param name="game"></param>
            <exception cref="T:System.ArgumentNullException">game is null.</exception>
        </member>
        <member name="F:OpenXLive.Forms.XLiveGameProfilePage._Game">
            <summary>
            Current selected game.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameProfilePage._DownloadButton_Click(System.Object,System.EventArgs)">
            <summary>
            Navigate to marketplace.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameProfilePage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameProfilePage.GetProfile">
            <summary>
            Gets the profile of the game.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameProfilePage.image_Tap(System.Object,OpenXLive.Form.InputEventArgs)">
            <summary>
            Show player details.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameProfilePage.AddCurrentPlayer">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.GameType">
            <summary>
            The type of the games list page.
            The page will show the specifies type priority.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.GameType.Featured">
            <summary>
            Featured games.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.GameType.MonstOnline">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.GameType.Hot">
            <summary>
            The hot games.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.GameType.New">
            <summary>
            The newest games.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.GameType.Recent">
            <summary>
            The recent games of current player.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveGameListPage">
            <summary>
            This page list games.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameListPage.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveGamesListPage class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameListPage.#ctor(OpenXLive.Forms.GameType)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveGamesListPage class with specifies type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameListPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameListPage.InitializeGameSearch">
            <summary>
            Initialize game search.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameListPage.SearchFeatured">
            <summary>
            Search featured games.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameListPage.SearchMostDownload">
            <summary>
            Search most download games.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameListPage.SearchHot">
            <summary>
            Search hot games.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameListPage.SearchNew">
            <summary>
            Search new games.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameListPage.SearchRecent">
            <summary>
            Search recent games.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameListPage.SetRecentListBoxLoadingBarVisible">
            <summary>
            Sets the LoadingBarVisible of specifies recent games list box.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveGameListPage.SetLoadingBarVisible(OpenXLive.Controls.XLiveDynamicLoadListBox,OpenXLive.Features.IPaging)">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
            <param name="loadListBox"></param>
            <param name="search"></param>
        </member>
        <member name="T:OpenXLive.Forms.MyGameTempalte">
            <summary>
            The normal template in the recent games list box.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.MyGameTempalte.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Forms.NormalGameTempalte">
            <summary>
            The normal template in the games list box.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.NormalGameTempalte.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Forms.XLiveLeaderboardPage">
            <summary>
            Leaderboard page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.#ctor(OpenXLive.Features.GameSession,OpenXLive.Features.LeaderboardProfile)">
            <summary>
            Initializes a new instance of the XLiveLeaderboardPage class.
            </summary>
            <param name="session"></param>
            <param name="profile"></param>
            <exception cref="T:System.ArgumentNullException">sessin or profile is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.SetApplicationBar">
            <summary>
            Add app bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveLeaderboardPage._GlobalListBox">
            <summary>
            Global scroes listbox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.AddGlobalItem">
            <summary>
            Add global item.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveLeaderboardPage._DailyListBox">
            <summary>
            Daily scores listbox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.AddDailyItem">
            <summary>
            Add daily item.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveLeaderboardPage._WeeklyListBox">
            <summary>
            Weekly scores listbox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.AddWeeklyItem">
            <summary>
            Add weekly item.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveLeaderboardPage._FriendsListBox">
            <summary>
            Friends scores listbox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.AddFriendsItem">
            <summary>
            Add friends item.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage._ListBox_TapItem(System.Object,OpenXLive.Form.TapItemEventArgs)">
            <summary>
            Show player profile page.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.InitializeLeaderboard(OpenXLive.Features.GameSession,OpenXLive.Features.LeaderboardProfile)">
            <summary>
            Initialize leaderboard.
            </summary>
            <param name="session"></param>
            <param name="profile"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.SearchGlobal">
            <summary>
            Search global scroes.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.SearchDaily">
            <summary>
            Search daily scroes.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.SearchWeekly">
            <summary>
            Search weekly scroes.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.SearchFriends">
            <summary>
            Search friends scroes.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardPage.SetLoadingBarVisible(OpenXLive.Controls.XLiveDynamicLoadListBox,OpenXLive.Features.IPaging)">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
            <param name="loadListBox"></param>
            <param name="search"></param>
        </member>
        <member name="P:OpenXLive.Forms.XLiveLeaderboardPage.Profile">
            <summary>
            Gets the profile of this leaderboard.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveLeaderboardSelectionPage">
            <summary>
            Leaderboard selection page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardSelectionPage.#ctor">
            <summary>
            Initializes a new instance of the XLiveLeaderboardSelectionPage class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardSelectionPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLeaderboardSelectionPage._LeaderboardsSelector_TapItem(System.Object,OpenXLive.Form.TapItemEventArgs)">
            <summary>
            Select leaderboard and show leaderboard page.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:OpenXLive.Forms.LeaderboardTemplate">
            <summary>
            Template for leaderboard item.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.LeaderboardTemplate.LoadContentOverride(System.Object)">
            <summary>
            Creates the OpenXLive.Form.Controls.Control objects in the OpenXLive.Form.UIDataTemplate.
            </summary>
            <param name="dataContext">The data context of the template.</param>d
            <returns>The root OpenXLive.Form.Controls.Control of the OpenXLive.Form.UIDataTemplate.</returns>
        </member>
        <member name="T:OpenXLive.Forms.XLiveLoginPage">
            <summary>
            Logon page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveLoginPage class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.#ctor(OpenXLive.Forms.LoginType)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveLoginPage class.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.#ctor(System.EventHandler)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveLoginPage class.
            </summary>
            <param name="loginCompleted"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.#ctor(OpenXLive.Forms.LoginType,System.EventHandler)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveLoginPage class.
            </summary>
            <param name="type"></param>
            <param name="loginCompleted"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveLoginPage._TBoxEmail">
            <summary>
            Use to input email address.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveLoginPage._PBoxPassword">
            <summary>
            Use to input password.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.Login">
            <summary>
            Login.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveLoginPage._SNSLoginToken">
            <summary>
            The token used to connect sns.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.OnClosed">
            <summary>
            Called when a page has closed
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.FireLoginCompletedEvent">
            <summary>
            Raise login completed event.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.OnBackKeyPress(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the hardware Back button is pressed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.OnActivated(OpenXLive.Form.PageActivatedEventArgs)">
            <summary>
            Called when the application is being made active.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.VerifySocialLoginResult">
            <summary>
            Verify sns login result.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveLoginPage.CreateNewAccount">
            <summary>
            Create a new account.
            </summary>
        </member>
        <member name="E:OpenXLive.Forms.XLiveLoginPage._LoginCompleted">
            <summary>
            Occurs when this page closed.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.SNSProviderTemplate">
            <summary>
            The datatemplate of sns provider item.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.SNSProviderTemplate.LoadContentOverride(System.Object)">
            <summary>
            Creates the OpenXLive.Form.Controls.Control objects in the SNSProviderTemplate.
            </summary>
            <param name="dataContext">The data context of the template.</param>d
            <returns>The root OpenXLive.Form.Controls.Control of the SNSProviderTemplate.</returns>
        </member>
        <member name="T:OpenXLive.Forms.XLivePictureViewPage">
            <summary>
            Providers one page to view a picture.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLivePictureViewPage.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLivePictureView class.
            </summary>
            <param name="uri"></param>
            <exception cref="T:System.ArgumentNullException">uri is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLivePictureViewPage.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLivePictureView class.
            </summary>
            <param name="texture"></param>
            <exception cref="T:System.ArgumentNullException">texture is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLivePictureViewPage.SetApplicationBar">
            <summary>
            Add app bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLivePictureViewPage.OnPressedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for pressed operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Forms.XLivePictureViewPage.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLivePictureViewPage.OnPinchCore(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Handle pinch gestrue.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLivePictureViewPage.OnDoubleTapCore(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Handle OnDoubleTap gestrue.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLivePictureViewPage.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update a XLiveGamePage.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="T:OpenXLive.Forms.XLivePlayerMedalsPage">
            <summary>
            Provider a list show medals.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerMedalsPage.#ctor(OpenXLive.Features.Player)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLivePlayerMedalsPage class.
            </summary>
            <param name="player"></param>
            <exception cref="T:System.ArgumentNullException">player is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerMedalsPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerMedalsPage.InitializeMedals">
            <summary>
            Initialize source.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveMessagesPage">
            <summary>
            Providers a page show all the messages received from a player.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessagesPage.#ctor(OpenXLive.Features.MessageThread)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveMessagesPage class with a message thread.
            </summary>
            <param name="messageThread"></param>
            <exception cref="T:System.ArgumentNullException">messageThread is null.</exception>
        </member>
        <member name="F:OpenXLive.Forms.XLiveMessagesPage._CurrentThread">
            <summary>
            The message thread those messages belong to.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessagesPage.SetProgressIndicator">
            <summary>
            Set progress indicator.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessagesPage.InitializeContent">
            <summary>
            Initialize content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessagesPage.SendMessage">
            <summary>
            Send message.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessagesPage.SetLoadButtonVisible(OpenXLive.Controls.XLiveMessagesListBox,OpenXLive.Features.IPaging)">
            <summary>
            Sets the LoadButtonVisible of specifies XLiveMessagesListBox.
            </summary>
            <param name="messageListBox"></param>
            <param name="search"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessagesPage.RegisterGetMessagesEvent">
            <summary>
            Register GetMessagesCompleted event.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessagesPage.UnregisterGetMessagesEvent">
            <summary>
            Unregister GetMessagesCompleted event.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessagesPage.GetMessages">
            <summary>
            Gets messages in the current message thread.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessagesPage.Contains(OpenXLive.Features.Message)">
            <summary>
            Determines whether the cache contains a specified message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessagesPage.OnClosed">
            <summary>
            Called when a page has closed.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessagesPage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:OpenXLive.Forms.XLiveMessageThreadListPage">
            <summary>
            Providera a page show message thread of current player.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessageThreadListPage.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveMessageThreadListPage class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessageThreadListPage.SetProgressIndicator">
            <summary>
            Set progress indicator.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessageThreadListPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessageThreadListPage._MessageThreadListBox_TapItem(System.Object,OpenXLive.Form.TapItemEventArgs)">
            <summary>
            Select a message thread and show messages.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessageThreadListPage.RegisterGetThreadsEvent">
            <summary>
            Register GetMessageThreadCompleted event.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessageThreadListPage.UnregisterGetThreadsEvent">
            <summary>
            Unregister GetMessageThreadCompleted event.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessageThreadListPage.Refresth">
            <summary>
            Refresh threads.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessageThreadListPage.SetThreadsListBoxLoadingBarVisible">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessageThreadListPage.player_GetMessageThreadCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            Handle get message thread completed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessageThreadListPage.OnClosed">
            <summary>
            Called when a page has closed.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveMessageThreadListPage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:OpenXLive.Forms.XLiveOnlinePlayerPage">
            <summary>
            This page is used to list online players.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveOnlinePlayerPage.#ctor">
            <summary>
            Initializes a new instance of the XLiveOnlinePlayerPage class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveOnlinePlayerPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveOnlinePlayerPage._OnlineListBox_TapItem(System.Object,OpenXLive.Form.TapItemEventArgs)">
            <summary>
            Show palyer profile page.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveOnlinePlayerPage.RegisterOnlineEvent">
            <summary>
            Register GetOnlinePlayersCompleted event.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveOnlinePlayerPage.UnregisterOnlineEvent">
            <summary>
            Unregister GetOnlinePlayersCompleted event.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveOnlinePlayerPage.OnClosed">
            <summary>
            Called when a page has closed.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveOnlinePlayerPage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveOnlinePlayerPage.SearchOnlinePlayer">
            <summary>
            Search online player.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveOnlinePlayerPage.SetOnlineListBoxLoadingBarVisible">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.OnlinePlayerTemplate">
            <summary>
            The datatemplate in online player listbox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.OnlinePlayerTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Forms.OnlinePlayerTemplate.FriendIcon">
            <summary>
            Gets or sets the icon.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLivePlayerProfilePage">
            <summary>
            Player profile page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerProfilePage.#ctor(OpenXLive.Features.Player)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLivePlayerProfilePage class.
            </summary>
            <param name="player"></param>
            <exception cref="T:System.ArgumentNullException">player is null.</exception>
        </member>
        <member name="F:OpenXLive.Forms.XLivePlayerProfilePage._Player">
            <summary>
            Current selected player.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerProfilePage.DeleteFriendCallback(OpenXLive.DialogResult)">
            <summary>
            Delete friend callback.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerProfilePage.Follow">
            <summary>
            Follow this player.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerProfilePage.Unfollow">
            <summary>
            Unfollow this player.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerProfilePage._RecentGamesListBox_TapItem(System.Object,OpenXLive.Form.TapItemEventArgs)">
            <summary>
            Show game profile page.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerProfilePage.UpdateDetail(System.Boolean)">
            <summary>
            Update detail.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerProfilePage.UpdateFollowStateIcon">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerProfilePage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLivePlayerProfilePage.GetProfile">
            <summary>
            Gets the profile of the game.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.SearchType">
            <summary>
            The type of the search page.
            The search page will show the specifies type priority.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.SearchType.Player">
            <summary>
            Player search result.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.SearchType.Game">
            <summary>
            Game search result.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.ChosenSearchResultArgs">
            <summary>
            Providers a data for event when chosen a search result.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.ChosenSearchResultArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the ChosenSearchResultArgs class.
            </summary>
            <param name="result"></param>
        </member>
        <member name="P:OpenXLive.Forms.ChosenSearchResultArgs.Result">
            <summary>
            Gets the chosen result
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveSearchPage">
            <summary>
            Search players, games.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.#ctor(OpenXLive.Features.GameSession)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveSearchPage class.
            </summary>
            <exception cref="T:System.ArgumentNullException">session is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.#ctor(OpenXLive.Features.GameSession,OpenXLive.Forms.SearchType,System.EventHandler{OpenXLive.Forms.ChosenSearchResultArgs})">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveSearchPage class.
            </summary>
            <param name="session"></param>
            <param name="type"></param>
            <param name="chosenSearchResultEvent"></param>
            <exception cref="T:System.ArgumentNullException">session is null.</exception>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSearchPage._Session">
            <summary>
            The current session.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSearchPage._ChosenSearchResult">
            <summary>
            Occurs when choose a item in the search result.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.SetProgressIndicator">
            <summary>
            Set progress indicator.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.InitializeContent">
            <summary>
            Initialize content.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSearchPage._GamesListBox">
            <summary>
            Display games list.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.AddGamesItem">
            <summary>
            Add games item.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.SearchGames(System.String)">
            <summary>
            Search games.
            </summary>
            <param name="keyword"></param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSearchPage._PlayersListBox">
            <summary>
            Display player list.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.AddPlayerItem">
            <summary>
            Add player item.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.SearchPlayers(System.String)">
            <summary>
            Search players.
            </summary>
            <param name="keyword"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.InitializeSearch(OpenXLive.Features.GameSession)">
            <summary>
            Initialize search.
            </summary>
            <param name="session"></param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSearchPage._RefreshGames">
            <summary>
            Indicates whether need to refresh games list.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSearchPage._RefreshPlayers">
            <summary>
            Indicates whether need to refresh players list.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.RefresthSearch">
            <summary>
            Refresh search instance.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.SetLoadingBarVisible(OpenXLive.Controls.XLiveDynamicLoadListBox,OpenXLive.Features.IPaging)">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
            <param name="loadListBox"></param>
            <param name="search"></param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSearchPage._CurrentKeyword">
            <summary>
            The current keyword.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage._TBoxSearchKeyword_TextChanged(System.Object,OpenXLive.Form.PropertyChangedEventArgs{System.String})">
            <summary>
            Begin search when text changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.BeginSearch(System.String)">
            <summary>
            Begin search.
            </summary>
            <param name="keyword"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.OnClosed">
            <summary>
            Called when a page has closed
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSearchPage.GetRecommendedPlayer(OpenXLive.Features.GameSession)">
            <summary>
            Search recommended player.
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:OpenXLive.Forms.XLiveSendMessagePage">
            <summary>
            Providers a page used to send message.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSendMessagePage.#ctor(OpenXLive.Features.Player,System.String)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveSendMessagePage class with 
            a palyer and the message.
            </summary>
            <param name="sendTo">A player the message will send to.</param>
            <param name="message">The text message will be sent.</param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSendMessagePage._Message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSendMessagePage.SetProgressIndicator">
            <summary>
            Set progress indicator.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSendMessagePage._SendBar">
            <summary>
            Send message application bar.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSendMessagePage._SearchBar">
            <summary>
            Search player application bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSendMessagePage._BtnSend_Click(System.Object,System.EventArgs)">
            <summary>
            Click send button and send message.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSendMessagePage._AddButton_Click(System.Object,System.EventArgs)">
            <summary>
            Click add button and show choose friend panel.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSendMessagePage.SendMessageStrategy">
            <summary>
            Enable or disable send button.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSendMessagePage.ShowChooseFriendPanel">
            <summary>
            Show choose friend panel and choose a friend.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSendMessagePage.ShowSendMessagePanel">
            <summary>
            Show send message panel.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSendMessagePage.OnBackKeyPress(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the hardware Back button is pressed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSendMessagePage.SearchPlayer">
            <summary>
            Search player.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSendMessagePage.SendMessage">
            <summary>
            Send message.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSendMessagePage.NavigateToMessagesPage">
            <summary>
            Navigate to messages page.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.FriendChooseTemplate">
            <summary>
            Providers template of friend in the send message page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.FriendChooseTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Forms.XLiveSettingsPage">
            <summary>
            Providers a page contains preference settings.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSettingsPage.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveSettingsPage class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSettingsPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSettingsPage.OnClosed">
            <summary>
            Called when a page has closed
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.SoicalConnectCompletedArgs">
            <summary>
            Provides event data for the SocialConnectCompleted event.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.SoicalConnectCompletedArgs.#ctor(OpenXLive.Features.SNSContract)">
            <summary>
            Initializes a new instance of OpenXLive.Forms.SoicalConnectCompletedArgs with specifies contract.
            </summary>
            <param name="contract"></param>
        </member>
        <member name="P:OpenXLive.Forms.SoicalConnectCompletedArgs.Contract">
            <summary>
            Gets the contract the player had connected to.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveSocialConnectPage">
            <summary>
            This page used to connect a specifies sns provider.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSocialConnectPage.#ctor(OpenXLive.Features.SNSProvider,System.EventHandler{OpenXLive.Forms.SoicalConnectCompletedArgs})">
            <summary>
            Initializea a new instance of OpenXLive.Forms.XLiveSocialConnectPage class.
            </summary>
            <param name="provider">A SNSProvider used to connect</param>
            <param name="handler">Called when connect completed</param>
            <exception cref="T:System.ArgumentNullException">provider is null.</exception>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSocialConnectPage._Provider">
            <summary>
            The sns provider.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveSocialConnectPage._SNSLoginToken">
            <summary>
            The token used to connect sns.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSocialConnectPage.LoginSNS">
            <summary>
            Login SNS.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSocialConnectPage.ConnectSNS">
            <summary>
            Connect sns.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSocialConnectPage.BeginConnect">
            <summary>
            Begin connect.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSocialConnectPage.OnClosed">
            <summary>
            Called when a page has closed
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSocialConnectPage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSocialConnectPage.OnActivated(OpenXLive.Form.PageActivatedEventArgs)">
            <summary>
            Called when the application is being made active.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveSocialConnectPage.VerifySocialLoginResult">
            <summary>
            Verify sns login result.
            </summary>
        </member>
        <member name="E:OpenXLive.Forms.XLiveSocialConnectPage._SocialConnectCompleted">
            <summary>
            Occurs when connect completed.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveStatusContentPage">
            <summary>
            Providers a page to show status content, repost, comment etc...
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.#ctor(OpenXLive.Features.XLiveStatus)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveStatusContentPage class.
            </summary>
            <param name="status"></param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveStatusContentPage._Status">
            <summary>
            The current status.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.SetProgressIndicator">
            <summary>
            Set progress indicator.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.SetApplicationBar">
            <summary>
            Add app bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.AddRefreshButton">
            <summary>
            Add refresh button.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.RemoveRefreshButton">
            <summary>
            Remove refresh button.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.AddContentItem">
            <summary>
            Add content item.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.AddContentWithRepost">
            <summary>
            Add content item with repost.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.AddCommentsItem">
            <summary>
            Add commments item.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.AddRepostItem">
            <summary>
            Add repost item.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.SetCommentsListBoxLoadingBarVisible">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.GetComments">
            <summary>
            Gets comments.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage._Status_GetCommentsCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            Handle get comments completed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.SetRepostListBoxLoadingBarVisible">
            <summary>
            Sets the LoadingBarVisible of specifies XLiveDynamicLoadListBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.GetRepost">
            <summary>
            Gets repost.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.Delete">
            <summary>
            Delete this status.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.ShowProfile(OpenXLive.Features.XLiveStatus)">
            <summary>
            Show profile.
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.Reply(OpenXLive.Features.XLiveStatus)">
            <summary>
            Reply status.
            </summary>
            <param name="comment"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.Comment(OpenXLive.Features.XLiveStatus)">
            <summary>
            Comment status.
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.Repost(OpenXLive.Features.XLiveStatus)">
            <summary>
            Repost status.
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.DeleteCommentConfirm(OpenXLive.Features.XLiveStatus)">
            <summary>
            Delete comment comfirm box.
            </summary>
            <param name="comment"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.DeleteCommentDialogCallback(System.IAsyncResult)">
            <summary>
            Callback for the message box.
            </summary>
            <param name="asynchronousResult"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.DeleteComment(OpenXLive.Features.XLiveStatus)">
            <summary>
            Delete comment.
            </summary>
            <param name="comment"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.DeleteRepostConfirm(OpenXLive.Features.XLiveStatus)">
            <summary>
            Delete repost comfirm box.
            </summary>
            <param name="repost"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.DeleteRepostDialogCallback(System.IAsyncResult)">
            <summary>
            Callback for the message box.
            </summary>
            <param name="asynchronousResult"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveStatusContentPage.DeleteRepost(OpenXLive.Features.XLiveStatus)">
            <summary>
            Delete repost.
            </summary>
            <param name="repost"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveTaskPage.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveTaskPage class.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveTaskPage.SetProgressIndicator">
            <summary>
            Set progress indicator.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveTaskPage.InitializeContent">
            <summary>
            Initializes content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveTaskPage.InitializeTask">
            <summary>
            Initialize task.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveTaskPage._TaskListBox_TapItem(System.Object,OpenXLive.Form.TapItemEventArgs)">
            <summary>
            Select a task item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveTaskPage._ActivatedTask_GetActivatedTaskCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            Handle get activated task completed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveTaskPage._FinishedTask_GetFinishedTaskCompleted(System.Object,OpenXLive.AsyncEventArgs)">
            <summary>
            Handle get finished task completed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveTaskPage.Refresh">
            <summary>
            Refresh task.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveTaskPage.OnClosed">
            <summary>
            Called when a page has closed
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveTaskPage.OnNavigatedTo(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Called when a page becomes the active page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.TaskItemTemplate.LoadContentOverride(System.Object)">
            <summary>
            Load content.
            </summary>
            <param name="dataContext"></param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.Forms.UpdateStatusType">
            <summary>
            The type of the operation.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.UpdateStatusType.New">
            <summary>
            New status.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.UpdateStatusType.Comment">
            <summary>
            Comment a status.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.UpdateStatusType.Repost">
            <summary>
            Repost a status.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.UpdateStatusType.Reply">
            <summary>
            Reply a status.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveUpdateStatusPage">
            <summary>
            Providers a page to update status.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveUpdateStatusPage class.
            </summary>
            <param name="picStream"></param>
            <param name="content"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.String)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveUpdateStatusPage class.
            </summary>
            <param name="picTexture"></param>
            <param name="content"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.#ctor(OpenXLive.Features.XLiveStatus,OpenXLive.Forms.UpdateStatusType)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveUpdateStatusPage class.
            </summary>
            <param name="status"></param>
            <param name="type"></param>
            <exception cref="T:System.ArgumentNullException">status is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.#ctor(OpenXLive.Features.XLiveStatus,OpenXLive.Features.XLiveStatus)">
            <summary>
            Initializes a new instance of the OpenXLive.Forms.XLiveUpdateStatusPage class.
            </summary>
            <param name="status"></param>
            <param name="comment"></param>
            <exception cref="T:System.ArgumentNullException">status or comment is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.InitSNSProviders">
            <summary>
            Initialize content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.SetProgressIndicator">
            <summary>
            Set progress indicator.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveUpdateStatusPage._SendBar">
            <summary>
            Update status application bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.GetShareBody">
            <summary>
            Get body for share email or sms.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.GetContent(OpenXLive.Features.XLiveStatus)">
            <summary>
            Get body for share email or sms.
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="F:OpenXLive.Forms.XLiveUpdateStatusPage._OriginStatus">
            <summary>
            The original status used to comment and repost.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveUpdateStatusPage._PicStream">
            <summary>
            The stream of the picture will be shared.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveUpdateStatusPage._PicTexture">
            <summary>
            The texture of the picture will be shared.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveUpdateStatusPage._Content">
            <summary>
            The content.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.ChangePicture">
            <summary>
            Choose picture.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.task_Completed(System.Object,Microsoft.Phone.Tasks.PhotoResult)">
            <summary>
            Choose picture completed.
            </summary>
            <param name="sender"></param>
            <param name="result"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.AddSNSList(System.Collections.Generic.IList{OpenXLive.Features.SNSProvider})">
            <summary>
            Add SNS list.
            </summary>
            <param name="providers"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.GetSelectedSNSProvider">
            <summary>
            Return the selected sns provider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.UpdateStatus(System.Boolean)">
            <summary>
            Update status.
            </summary>
            <param name="retry"></param>
        </member>
        <member name="F:OpenXLive.Forms.XLiveUpdateStatusPage._CanRetry">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.SoicalConnectCompleted(System.Object,OpenXLive.Forms.SoicalConnectCompletedArgs)">
            <summary>
            Handle connet social completed event.
            </summary>
            <param name="o"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.LoginCompleted(System.Object,System.EventArgs)">
            <summary>
            Handle login completed event.
            </summary>
            <param name="o"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.IsIdentical(OpenXLive.Features.XLiveStatus)">
            <summary>
            Return a value indicating whether the publisher is same to the original publisher.
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.CommentStatus(System.String)">
            <summary>
            Commment status.
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.CommentOriginalStatus(System.String)">
            <summary>
            Comment to original status.
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.RepostStatus(System.String,System.Boolean)">
            <summary>
            Repost status.
            </summary>
            <param name="content"></param>
            <param name="appendOriginalContent"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveUpdateStatusPage.OnClosed">
            <summary>
            Called when a page has closed
            </summary>
        </member>
        <member name="T:OpenXLive.BackgroundStretch">
            <summary>
            Describes how background iamge is resized to fill its allocated space.
            </summary>
        </member>
        <member name="F:OpenXLive.BackgroundStretch.Tited">
            <summary>
            the background is clipped to fit in the form.
            </summary>
        </member>
        <member name="F:OpenXLive.BackgroundStretch.UniformToFill">
            <summary>
            The bakground is resized to fill the form while it preserves
            its native aspect ratio.
            </summary>
        </member>
        <member name="F:OpenXLive.BackgroundStretch.Fill">
            <summary>
            The background is resized to fill the form. The aspect ratio is not preserved.
            </summary>
        </member>
        <member name="T:OpenXLive.XLiveSettings">
            <summary>
             Contains properties that used to be OpenXLive.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveSettings.MessageTileDuration">
            <summary>
            The milliseconds of duration of a message tile.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveSettings.SubTitleColor">
            <summary>
            The color for the foreground of subtitle text.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveSettings.OpenXLiveGreenColor">
            <summary>
            The green color of OpenXLive.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveSettings.OpenXLiveBlueColor">
            <summary>
            The blue color of OpenXLive.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveSettings.OpenXLivePurpleColor">
            <summary>
            The purple color of OpenXLive.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveSettings.AppBarBackgroundColor">
            <summary>
            The background of application bar.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveSettings.ImageBackgroundColor">
            <summary>
            the background of a Image.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveSettings.GetGameVersion(Microsoft.Xna.Framework.Game)">
            <summary>
            Get the version of current game.
            </summary>
            <param name="game"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.XLiveSettings.Initialize(Microsoft.Xna.Framework.Game,OpenXLive.Features.GameSession)">
            <summary>
            Initializes the XLiveParameters.
            </summary>
            <param name="game">Current game.</param>
            <param name="gameSession">A game session of this game.</param>
            <exception cref="T:System.ArgumentNullException">game is null or gameSession is null.</exception>
        </member>
        <member name="M:OpenXLive.XLiveSettings.Current_Deactivated(System.Object,Microsoft.Phone.Shell.DeactivatedEventArgs)">
            <summary>
            Handling for PhoneApplicationService.Deactivated event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.XLiveSettings.Current_Activated(System.Object,Microsoft.Phone.Shell.ActivatedEventArgs)">
            <summary>
            Handling for PhoneApplicationService.Activated event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.XLiveSettings.SetServiceLanguageSetting">
            <summary>
            Set language.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveSettings._CurrentSession">
            <summary>
            Gets the current session of the current game.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveSettings.InitializeDefaultFont">
            <summary>
            Initialize default font family.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveSettings.ResetPlayer">
            <summary>
            Called this method when current player changed or signed out.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.SearchIcon">
            <summary>
            Search icon.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.ShareIcon">
            <summary>
            Share icon.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.AddIcon">
            <summary>
            Add icon.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.RefreshIcon">
            <summary>
            Refresh icon.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.SendIcon">
            <summary>
            Refresh icon.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.LoadingImage">
            <summary>
            loading image.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.CommentIcon">
            <summary>
            Comment icon.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.RepostIcon">
            <summary>
            Repost icon.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.Settings">
            <summary>
            Gets the parameter of OpenXLive.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.IsInitialized">
            <summary>
            Gets a value that indicates wheter the XLiveParameters has Initialized.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.Game">
            <summary>
            Gets current game.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.Content">
            <summary>
            Gets the current content manager of the OpenXLive.
            </summary>
            <exception cref="T:System.InvalidOperationException">The XLiveParameters has not been initialized.</exception>
        </member>
        <member name="P:OpenXLive.XLiveSettings.IsShowWarning">
            <summary>
            Gets or sets a value that indicates whether show a maessage box when encounter some error.
            </summary>
        </member>
        <member name="E:OpenXLive.XLiveSettings.BackgroundChanged">
            <summary>
            Occurs when background property changed.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.BackgroundStrech">
            <summary>
            Gets or sets the strech for the background.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.Background">
            <summary>
            Gets or sets the background image for the OpenXLive.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.OpenXLiveFont">
            <summary>
            Gets a OpenXLiveFont object of OpenXLvie.
            The OpenXLiveFont object provider a sprite font for OpenXLive.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveSettings.DefaultFont">
            <summary>
            Gets the default font family for OpenXLive.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveTaskParser.ShowFollowDeveloperTaskBox(OpenXLive.Features.TaskItem)">
            <summary>
            Show follow developer messagebox.
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:OpenXLive.XLiveTaskParser.Parser">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ApplicationBar">
            <summary>
            Represents an Application Bar in Windows Phone game.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.#ctor">
            <summary>
            Creates a new instance of the OpenXLive.Form.Controls.ApplicationBar class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.ApplicationBarItem_Click(System.Object,System.EventArgs)">
            <summary>
            Handling click event of ApplicationBarItem.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.LoadedInternal">
            <summary>
            Fire loaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.UnloadedInternal">
            <summary>
            Fire unloaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.SetButtonsVisibleCore(System.Boolean)">
            <summary>
            Sets the VisibleCore property for all the buttons.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.SetButtonsInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for all the buttons.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.SetMenusVisibleCore(System.Boolean)">
            <summary>
            Sets the VisibleCore property for all the menus.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.SetMenusInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for all the menus.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.LoadTexture(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Load texture with specifies GraphicsDevice;
            </summary>
            <param name="graphicsDevice">The GraphicsDevice.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.SetActualBackgroundColor">
            <summary>
            Sets the actual background color of a app bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.SetItemsColor">
            <summary>
            Sets items color.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.SetItemsFont">
            <summary>
            Sets items font.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBar.MenuItemContainers">
            <summary>
            The collection of menu item contianer.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.HandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample,System.Boolean@)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
            <param name="handledGesture"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.HandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation,System.Boolean@)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
            <param name="handledTouch"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBar._TouchIsValid">
            <summary>
            Indicates whether the touch operation is valid.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.RestoreState">
            <summary>
            Restores default state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.OnPressedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Handling pressed operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Handling released operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.HitTest(System.Int32,System.Int32)">
            <summary>
            Gets a valuet that indicate whether the Visual rectangle contains the sprecifies point.
            </summary>
            <param name="x">x-coordinate.</param>
            <param name="y">y-coordiante.</param>
            <returns></returns>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBar._LeftSideRect">
            <summary>
            Indicates the left side area that can touch to collapse or expand the application bar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBar._RightSideRect">
            <summary>
            Indicates the right side area that can touch to collapse or expand the application bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.OverflowHitTest(System.Int32,System.Int32)">
            <summary>
            Gets a valuet that indicate whether both side of the application bar contains the sprecifies point.
            </summary>
            <param name="x">x-coordinate.</param>
            <param name="y">y-coordinate.</param>
            <returns></returns>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBar._AppBarExpandedOffsetY">
            <summary>
            Indicates the y-offset when the app bar is expanded.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.ExpandAppBar">
            <summary>
            Expand the application bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.CollapseAppBar">
            <summary>
            Collaspe the application bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.CollapseAppBarWithAnimation">
            <summary>
            Collaspe the application bar instantly.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.ExpandContent">
            <summary>
            Expand content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.CollpaseContent">
            <summary>
            Collapse content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.FireStateChangedEvent">
            <summary>
            Raise StateChanged event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.UpdateAnimation(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the application bar animation;
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBar._VisualRect">
            <summary>
            Indicates the visual rectangle of app bar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBar._AppBarOffsetY">
            <summary>
            Indicates the y-offset of the app bar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBar._AppBarMenuItemOffsetY">
            <summary>
            Indicates the y-offset of the menu item in the app bar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBar._AppBarButtonOffsetY">
            <summary>
            Indicates the y-offset of the button in the app bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.SetRect">
            <summary>
            Sets the SizeRect of app bar and app bar item.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updata status.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBar._ActualBackgroundColor">
            <summary>
            Indicates the actual background of a app bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draw Application bar.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBar.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the UIObject class.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="E:OpenXLive.Form.Controls.ApplicationBar.StateChanged">
            <summary>
            Occurs when the user expands or collapses the application bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBar.State">
            <summary>
            Gets the state of a application bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBar.FontFamily">
            <summary>
            Gets or sets the FontFamily for the ApplicationBar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBar.BackgroundColor">
            <summary>
            Gets or sets the background color of the Application Bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBar.Opacity">
            <summary>
            Gets or sets the background opacity of the Application Bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBar.Buttons">
            <summary>
            Gets the collection of the buttons that appear on the Application Bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBar.DefaultSize">
            <summary>
            Gets the distance that the Application Bar extends into a page when the OpenXLive.Form.Controls.ApplicationBarMode
            property is set to OpenXLive.Form.Controls.ApplicationBarMode.Default.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBar.ForegroundColor">
            <summary>
            Gets or sets the foreground color of the Application Bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBar.IsMenuEnabled">
            <summary>
            Gets or sets a value that indicates whether the user can open the menu.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBar.MenuItems">
            <summary>
            Gets the collection of the menu items that appear on the Application Bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBar.MiniSize">
            <summary>
            Gets the distance that the Application Bar extends into a page when the OpenXLive.Form.Controls.ApplicationBarMode
            property is set to OpenXLive.Form.Controls.ApplicationBarMode.Minimized.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBar.Mode">
            <summary>
            Gets or sets the display mode of the Application Bar.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ApplicationBarIconButton">
            <summary>
            An Application Bar button with an icon.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Primitives.ApplicationBarItem">
            <summary>
            Represents a base class for the item in ApplicationBar, such as the OpenXLive.Form.Controls.ApplicationBarMenuItem,
            OpenXLive.Form.Controls.ApplicationBarIconButton.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Primitives.ApplicationBarItem class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.UnloadedInternal">
            <summary>
            Fire unloaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnTextChanged">
            <summary>
            Called when Text property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnForegroundColorChanged">
            <summary>
            Called when ForegroundColor property changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.DisabledForegroundColor">
            <summary>
            The foreground color when set the ApplicationBarItem IsEnabled to false.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnPressStateChanged">
            <summary>
            Called when IsPressed property is changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.RestoreState">
            <summary>
            Restores default state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnMovedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for move operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnPressedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for pressed operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for released operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnFontFamilyChanged">
            <summary>
            Called when FontFamily property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.HitTest(System.Int32,System.Int32)">
            <summary>
            Gets a valuet that indicate whether the Visual rectangle contains the sprecifies point.
            </summary>
            <param name="x">x-coordinate.</param>
            <param name="y">y-coordiante.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.OnClick">
            <summary>
            Raises the OpenXLive.Form.Controls.ApplicationBarItem.Click event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.FireClickEvent">
            <summary>
            Raises click event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.FireTouchDownEvent(OpenXLive.Form.InputEventArgs)">
            <summary>
            Raises TouchDown event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.IsEnabled">
            <summary>
            Gets or sets the enabled status of the ApplicationBarItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.Text">
            <summary>
            Gets or sets the text string that is displayed as a label for the ApplicationBarItem.
            The label is displayed when the user taps the ellipses symbol on the ApplicationBar.
            </summary>
            <exception cref="T:System.ArgumentException">Text contains multiple lines.</exception>
        </member>
        <member name="E:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.TouchDown">
            <summary>
            Occurs when the TouchLocationState is pressed while over a ApplicationBarItem.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.Click">
            <summary>
            Occurs when the user taps a ApplicationBarItem in the Application Bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.FontFamily">
            <summary>
            Gets or sets the FontFamily for the ApplicationBarItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.ForegroundColor">
            <summary>
            Gets or sets the foreground color of the ApplicationBarItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.Viewport">
            <summary>
            Gets or sets the viewport of a ApplicationBarItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ApplicationBarItem.IsPressed">
            <summary>
            Gets a value that indicates whether the ApplicationBarItem has pressed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.#ctor">
            <summary>
            Creates a new instance of the OpenXLive.Form.Controls.ApplicationBarIconButton class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Creates a new instance of the OpenXLive.Form.Controls.ApplicationBarIconButton 
            class with the sprecifes icon.
            </summary>
            <param name="iconTexture">The Texture2D of the icon to use for the button.</param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBarIconButton._ButtonAnimation">
            <summary>
            The animation for the application icon button.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.LoadTexture(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Load texture with specifies GraphicsDevice;
            </summary>
            <param name="graphicsDevice">The GraphicsDevice.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.UnloadedInternal">
            <summary>
            Fire unloaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.OnFontFamilyChanged">
            <summary>
            Called when Font property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.OnForegroundColorChanged">
            <summary>
            Called when ForegroundColor property changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBarIconButton._PressedOffset">
            <summary>
            Indicates the offset of the button when a icon button is pressed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.OnPressStateChanged">
            <summary>
            Called when IsPressed property is changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.OnTextChanged">
            <summary>
            Called when Text property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.UpdateProperty">
            <summary>
            Updates property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.BeginReleasedAnimation">
            <summary>
            Begins the animation of a application icon button when the button has released.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.SetCharElements">
            <summary>
            Sets the char element list.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates status.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws a ApplicationBarIconButton
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarIconButton.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBarIconButton.Icon">
            <summary>
            Gets or sets the texture of the icon in the ApplicationBarIconButton.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBarIconButton.BackgroundColor">
            <summary>
            Gets or sets the background color of the ApplicationBarIconButton.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBarIconButton.CanAnimateText">
            <summary>
            Gets or sets a value that indicates whether can animate the text when a applicaion icon button is pressed.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ApplicationBarItemCollection`1">
            <summary>
            Represents an ordered collection of OpenXLive.Form.Controls.Primitives.ApplicationBarItem objects.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.UIObjectCollection`1">
            <summary>
            Represents an ordered collection of OpenXLive.Form.UIObject child cotrols. 
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.FireCollectionChangedEvent">
            <summary>
            Raise CollectionChanged event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.#ctor(OpenXLive.Form.UIObject)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.UIObjectCollection class.
            </summary>
            <param name="parent">The parent of the collection.</param>
            <exception cref="T:System.ArgumentNullException">parent is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.CastArgs(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
            <exception cref="T:System.ArgumentException">value is not OpenXLive.Form.UIObject.</exception>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.Add(`0)">
            <summary>
            Adds the specified element to the OpenXLive.Form.Controls.UIObjectCollection. 
            </summary>
            <param name="value">The OpenXLive.Form.UIObject to add.</param>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.AddChild(`0)">
            <summary>
            Adds the specified element to the OpenXLive.Form.Controls.UIObjectCollection.
            </summary>
            <param name="value"></param>
            <returns>The index position of the added element.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.Clear">
            <summary>
            Removes all elements from a OpenXLive.Form.Controls.UIObjectCollection. 
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.ClearChildren">
            <summary>
            Removes all elements from a OpenXLive.Form.Controls.UIObjectCollection. 
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.Contains(`0)">
            <summary>
            Determines whether a specified element is in the OpenXLive.Form.Controls.UIObjectCollection.
            </summary>
            <param name="value">The element to find.</param>
            <returns>true if the specified OpenXLive.Form.UIObject is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.IndexOf(`0)">
            <summary>
            Returns the index position of a specified element in a OpenXLive.Form.Controls.UIObjectCollection. 
            </summary>
            <returns>The index position of the element.  -1 if the element is not in the collection.</returns>
            <param name="value">The element whose index position is required.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an element into a OpenXLive.Form.Controls.UIObjectCollection at the specified index position. 
            </summary>
            <param name="index">The index position where you want to insert the element.</param>
            <param name="value">The element to insert into the OpenXLive.Form.Controls.UIObjectCollection.</param>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.ValidateUIObject(`0)">
            <summary>
            Validates the argument.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.Remove(`0)">
            <summary>
            Removes the specified element from a OpenXLive.Form.Controls.UIObjectCollection. 
            </summary>
            <param name="value">The element to remove from the collection.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.RemoveChild(`0)">
            <summary>
            Removes the specified element from a OpenXLive.Form.Controls.UIObjectCollection. 
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the OpenXLive.Form.UIObject at the specified index. 
            </summary>
            <param name="index">The index of the OpenXLive.Form.UIObject that you want to remove.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.ClearParent(`0)">
            <summary>
            Clears the parent of an element when the element leaves a OpenXLive.Form.Controls.UIObjectCollection. 
            </summary>
            <param name="value">The OpenXLive.Form.UIObject whose parent is being cleared.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.SetParent(`0)">
            <summary>
            Sets the parent of an element in a OpenXLive.Form.Controls.UIObjectCollection. 
            </summary>
            <param name="value">The OpenXLive.Form.UIObject whose parent is set.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.UnloadedChild(`0)">
            <summary>
            Raise unloaded event of child.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.LoadedChild(`0)">
            <summary>
            Raise loaded event of child.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies a OpenXLive.Form.UIObject from a OpenXLive.Form.Controls.UIObjectCollection to an array, starting at a specified index position. 
            </summary>
            <param name="array">An array into which the collection is copied.</param>
            <param name="index">The index position of the element where copying begins.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies a OpenXLive.Form.UIObject from a OpenXLive.Form.Controls.UIObjectCollection to an array, starting at a specified index position. 
            </summary>
            <param name="array">An array of OpenXLive.Form.UIObject  objects.</param>
            <param name="index">The index position of the element where copying begins.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.System#Collections#IList#Add(System.Object)">
            <summary>
            This type or member is not intended to be used directly from your code.
            </summary>
            <returns>The position into which the new element was inserted.</returns>
            <param name="value">The object to add.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            This type or member is not intended to be used directly from your code.
            </summary>
            <returns>true if the object was found in the list; otherwise, false.</returns>
            <param name="value">The object to locate in the list.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            This type or member is not intended to be used directly from your code.
            </summary>
            <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1. </returns>
            <param name="value">The object to locate in the list.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            This type or member is not intended to be used directly from your code.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted. </param>
            <param name="value">The object to insert to the list.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            This type or member is not intended to be used directly from your code.
            </summary>
            <param name="value">The object to remove from the list.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the System.Collections.Generic.ICollection.
            </summary>
            <param name="item">The object to remove from the list.</param>
            <returns>
            true if item was successfully removed from the System.Collections.Generic.ICollection;
            otherwise, false. This method also returns false if item is not found in
            the original System.Collections.Generic.ICollection.
            </returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.UIObjectCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A System.Collections.Generic.IEnumerator that can be used to iterate through
            the collection.
            </returns>
        </member>
        <member name="E:OpenXLive.Form.Controls.UIObjectCollection`1.CollectionChanged">
            <summary>
            Occurs when one item was added to the collection, 
            or one item was removed from the collection,
            or one item were replaced in the collection,
            or the collection was cleared.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.UIObjectCollection`1.Parent">
            <summary>
            Gets the parent of the child in the collection.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.UIObjectCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the OpenXLive.Form.UIObject stored at the zero-based index position of the OpenXLive.Form.Controls.UIObjectCollection. 
            </summary>
            <param name="index">The index position of the OpenXLive.Form.UIObject.</param>
            <returns>A OpenXLive.Form.UIObject at the specified position.</returns>
        </member>
        <member name="P:OpenXLive.Form.Controls.UIObjectCollection`1.Count">
            <summary>
             Gets the number of elements contained in the System.Collections.ICollection.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.UIObjectCollection`1.IsSynchronized">
            <summary>
             Gets a value indicating whether access to the System.Collections.ICollection
             is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.UIObjectCollection`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the System.Collections.ICollection.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.UIObjectCollection`1.System#Collections#IList#IsFixedSize">
            <summary>
            This type or member is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.UIObjectCollection`1.System#Collections#IList#IsReadOnly">
            <summary>
            This type or member is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.UIObjectCollection`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            This type or member is not intended to be used directly from your code.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="P:OpenXLive.Form.Controls.UIObjectCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
            <summary>
            Gets a value indicating whether the System.Collections.Generic.ICollection is read-only.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.#ctor(OpenXLive.Form.Controls.ApplicationBar)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.ApplicationBarItemCollection class.
            </summary>
            <param name="parent">A OpenXLive.Form.Controls.ApplicationBar object.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.SetItemColor(OpenXLive.Form.Controls.Primitives.ApplicationBarItem,OpenXLive.Form.Controls.ApplicationBar)">
            <summary>
            Sets foreground color for ApplicationBarItem.
            </summary>
            <param name="item"></param>
            <param name="appBar"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.SetItemFont(OpenXLive.Form.Controls.Primitives.ApplicationBarItem,OpenXLive.Form.Media.FontFamily)">
            <summary>
            Sets FontFamily for ApplicationBarItem.
            </summary>
            <param name="item"></param>
            <param name="fontFamily"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.Add(`0)">
            <summary>
            Adds the specified element to the OpenXLive.Form.Controls.ApplicationBarItemCollection. 
            </summary>
            <param name="value">The OpenXLive.Form.Controls.Primitives.ApplicationBarItem to add.</param>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an element into a OpenXLive.Form.Controls.UIObjectCollection at the specified index position. 
            </summary>
            <param name="index">The index position where you want to insert the element.</param>
            <param name="value">The element to insert into the OpenXLive.Form.Controls.UIObjectCollection.</param>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.AddItem(`0)">
            <summary>
            Adds the specified element to the OpenXLive.Form.Controls.ApplicationBarItemCollection. 
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.Remove(`0)">
            <summary>
            Removes the specified element from a OpenXLive.Form.Controls.ApplicationBarItemCollection. 
            </summary>
            <param name="value">The element to remove from the collection.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the OpenXLive.Form.Controls.Primitives.ApplicationBarItem at the specified index. 
            </summary>
            <param name="index">The index of the OpenXLive.Form.Controls.Primitives.ApplicationBarItem that you want to remove.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.RemoveItem(`0)">
            <summary>
            Removes the specified element from a OpenXLive.Form.Controls.ApplicationBarItemCollection. 
            </summary>
            <param name="value">The element to remove from the collection.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.Clear">
            <summary>
            Removes all elements from a OpenXLive.Form.Controls.ApplicationBarItemCollection. 
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.ClearItem">
            <summary>
            Removes all elements from a OpenXLive.Form.Controls.ApplicationBarItemCollection. 
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBarItemCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the OpenXLive.Form.Controls.Primitives.ApplicationBarItem stored 
            at the zero-based index position of the OpenXLive.Form.Controls.UIObjectCollection. 
            </summary>
            <param name="index">The index position of the OpenXLive.Form.Controls.Primitives.ApplicationBarItem.</param>
            <returns>A OpenXLive.Form.Controls.Primitives.ApplicationBarItem at the specified position.</returns>
        </member>
        <member name="T:OpenXLive.Form.Controls.ApplicationBarMenuItem">
            <summary>
            An item that can be added to the menu of an OpenXLive.Form.Controls.ApplicationBar.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.#ctor">
            <summary>
             Creates a new instance of the OpenXLive.Form.Controls.ApplicationBarMenuItem class.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBarMenuItem._MenuAnimation">
            <summary>
            The animation for the application menu item.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.UnloadedInternal">
            <summary>
            Fire unloaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.OnFontFamilyChanged">
            <summary>
            Called when FontFamily property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.OnForegroundColorChanged">
            <summary>
            Called when ForegroundColor property changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBarMenuItem._PressedOffset">
            <summary>
            Indicates the offset of the menu when a menu item is pressed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.OnPressStateChanged">
            <summary>
            Called when IsPressed property is changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.OnTextChanged">
            <summary>
            Called when Text property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.UpdateProperty">
            <summary>
            Updates property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.BeginReleasedAnimation">
            <summary>
            Begins the animation of a application menu item when the menu item has released.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.SetCharElements">
            <summary>
            Sets the char element list.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates status.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItem.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws a ApplicationBarMenuItem
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="T:OpenXLive.Form.Controls.ApplicationBarMenuItemContainer">
            <summary>
            Represens a container for ApplicationBarMenuItem.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItemContainer.#ctor(OpenXLive.Form.Controls.ApplicationBarMenuItem)">
            <summary>
            Creates a new instance of the OpenXLive.Form.Controls.ApplicationBarMenuItemContainer class 
            with specifies ApplicationBarMenuItem.
            </summary>
            <param name="menuItem"></param>
            <exception cref="T:System.ArgumentNullException">The menuItem is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItemContainer.DetachMenuItem">
            <summary>
            Detach menu item.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItemContainer.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItemContainer.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.Control has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItemContainer.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItemContainer.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItemContainer.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update container.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarMenuItemContainer.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draw container.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBarMenuItemContainer.MenuItem">
            <summary>
            Gets the ApplicationBarMenuItem for the ApplicationBarMenuItemContainer.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ApplicationBarMode">
            <summary>
            Specifies the display mode of an Application Bar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBarMode.Default">
            <summary>
            The Application Bar default size. A row of icon buttons and an ellipsis appear.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBarMode.Minimized">
            <summary>
            The Application Bar minimized size. Only an ellipsis appears.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ApplicationBarState">
            <summary>
            Represents a state for ApplicationBar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBarState.Collapsed">
            <summary>
            Indicates the application bar has collasped.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ApplicationBarState.Expanded">
            <summary>
            Indicates the application bar has expanded.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ApplicationBarStateChangedEventArgs">
            <summary>
            Provides data for events that occur when the user expand or collapse the application bar.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ApplicationBarStateChangedEventArgs.#ctor(OpenXLive.Form.Controls.ApplicationBarState)">
            <summary>
            Creates a new instance of the OpenXLive.Form.Controls.ApplicationBarStateChangedEventArgs class.
            </summary>
            <param name="state">The state of the application bar.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.ApplicationBarStateChangedEventArgs.State">
            <summary>
            The state of application bar.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Border">
            <summary>
            Draws a border, background.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Primitives.BorderControl">
            <summary>
            Represents the base class for all the controls that contains a border.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.BorderControl.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Primitivess.BorderBase class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.BorderControl.OnBackgroundChanged">
            <summary>
            Called when Background property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.BorderControl.OnBorderBrushChanged">
            <summary>
            Called when BorderBrush property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.BorderControl.OnBorderThicknessChanged">
            <summary>
            Called when BorderThickness property changed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.BorderControl.BorderThickness">
            <summary>
            Gets or sets the border thickness of a BorderBase control.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.BorderControl.BorderBrush">
            <summary>
            Gets or sets the Color that is used to create the border.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.BorderControl.Background">
            <summary>
             Gets or sets a color that provides the background of the BorderBase control.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Border._CanDrawOuter">
            <summary>
            Indicates whether to draw the outer rectangle.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Border._CanDrawInner">
            <summary>
            Indicates whether to draw the background.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.#ctor">
            <summary>
            Initializes a new instance of the Border class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.LoadedInternal">
            <summary>
            Loaded child.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.UnloadedInternal">
            <summary>
            Unloaded child.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.SetChildEnabledCore(System.Boolean)">
            <summary>
            Sets the IsEnabledCore property for child.
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.SetChildInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for child.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.SetChildVisibleCore(System.Boolean)">
            <summary>
            Sets the VisibleCore property for child.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.Border._VisualRect">
            <summary>
            Indicates the visual rectangle of Border.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.UpdateInfo">
            <summary>
            Updates the essentail information.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.Border has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.OnBackgroundChanged">
            <summary>
            Called when Background property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.OnBorderThicknessChanged">
            <summary>
            Called when BorderThickness property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Border.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.Border.Child">
            <summary>
            Gets or sets the child control to draw the border around.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Border.Opacity">
            <summary>
            Gets or sets the degree of the border's opacity. The default value is 1.0.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Button">
            <summary>
            Represents a button control. This control have no TouchDown and TouchUp event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Button class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.OnFontFamilyChanged">
            <summary>
            Called when Font property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.OnFontSizeChanged">
            <summary>
            Called when FontSize property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.OnContentChanged(System.String,System.String)">
            <summary>
            Called when the value of the Content property changes.
            </summary>
            <param name="oldContent">The old value of the Content property.</param>
            <param name="newContent">The new value of the Content property.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.OnPressStateChanged">
            <summary>
            Called when IsPressed property is changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.UpdateProperty">
            <summary>
            Updates property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.Button has changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Button._VisualRect">
            <summary>
            Indicates the visual rectangle of Button.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws Button.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Button.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="P:OpenXLive.Form.Controls.Button.PressedBackground">
            <summary>
            Gets or sets the background when pressed. The default value is Color.White.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Button.PressedBorderBrush">
            <summary>
            Gets or sets the border color when pressed. The default value is Color.White.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Button.DisabledBorderBrush">
            <summary>
            Gets or sets the border color when button is disabled.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Button.PressedForeground">
            <summary>
            Gets or sets the text color when pressed. The default value is Color.Black.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Button.BorderThickness">
            <summary>
            Gets or sets the thickness of the button.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Button.BorderBrush">
            <summary>
            Gets or sets a color that describes the border background of a button.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Button.Background">
            <summary>
             Gets or sets a color that provides the background of the button.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Button.DisabledBackground">
            <summary>
             Gets or sets a color that provides the background of the button when button is disabled.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Button.DisabledForeground">
            <summary>
             Gets or sets a color that provides the background of the button when button is disabled.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Canvas">
            <summary>
            Defines an area within which you can explicitly position child objects by
            using coordinates that are relative to the area.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Panel">
            <summary>
            Provides a base class for all OpenXLive.Form.Controls.Panel control. Use
            OpenXLive.Form.Controls.Panel control to position and arrange child objects.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Panel class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.LoadedInternal">
            <summary>
            Loaded content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.SetChildrenEnabledCore(System.Boolean)">
            <summary>
            Sets the IsEnabledCore property for all the children.
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.SetChildrenInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for all the children.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.SetChildrenVisibleCore(System.Boolean)">
            <summary>
            Sets the VisibleCore property for all the children.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.ArrangeOverride(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Positions child control.
            </summary>
            <param name="visualRect">The visual rectangle of the Panel.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.Arrange">
            <summary>
            Positions child control.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panel._VisualRect">
            <summary>
            Indicates the visual rectangle of Panel.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates panel.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panel.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws panel.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="P:OpenXLive.Form.Controls.Panel.Children">
            <summary>
            Gets the collection of child control of the Panel.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Canvas.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Canvas class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Canvas.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.Canvas has changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Canvas._Offset">
            <summary>
            Indicates the offset of children.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Canvas.ArrangeOverride(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Positions child control.
            </summary>
            <param name="visualRect">The visual rectangle of the Panel.</param>
        </member>
        <member name="T:OpenXLive.Form.Controls.ChatBox">
            <summary>
            Represents a control that can be used to display chat message.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.ChatBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.SetDateTimeText">
            <summary>
            Sets the date time text.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.SetDateTimeTextHeight">
            <summary>
            Sets the height of the date time text.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.FireTextChangedEvent(System.String,System.String)">
            <summary>
            Raise TextChanged event.
            </summary>
            <param name="oldValue">The old text,</param>
            <param name="newValue">The new text.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.RestoreState">
            <summary>
            Restores default state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.TipsVisibleStrategy">
            <summary>
            Sets tips text visible.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.UpdateProperty">
            <summary>
            Updates inner control property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Released.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnMovedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Moved.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnTouchDown(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.ChatBox.TouchDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.Focus">
            <summary>
            Attempts to set the focus on the OpenXLive.From.Controls.ChatBox and display the software keyboard.
            </summary>
            <returns>
            true if focus was set to the OpenXLive.From.Controls.ChatBox, or focus was already on the control.
            false if the OpenXLive.From.Controls.ChatBox is not focusable.
            </returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.BeginShowKeyboardInput">
            <summary>
            Begins show keyboard input dialog box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.InputCallback(System.IAsyncResult)">
            <summary>
            Handles result of input.
            </summary>
            <param name="resutl"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnMaxHeightChanged">
            <summary>
            Called when MaxHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnMaxWidthChanged">
            <summary>
            Called when MaxWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnMinHeightChanged">
            <summary>
            Called when MinHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnMinWidthChanged">
            <summary>
            Called when MinWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnAutoHeightChanged">
            <summary>
            Called when AutoHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnAutoWidthChanged">
            <summary>
            Called when AutoHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnTextInput">
            <summary>
            Called before the OpenXLive.Form.Controls.ChatBox.TextInput event occurs.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnHeightChanged">
            <summary>
            Called when height property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.ChatBox has changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ChatBox._VisualRect">
            <summary>
            Indicates the visual rectangle of ChatBox.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ChatBox._TipsVisible">
            <summary>
            Indicates whether the tips text is visible.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws ChatBox.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.DrawBorder">
            <summary>
            Draw border.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.DrawTriangle">
            <summary>
            Draw triangle.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.Refresh">
            <summary>
            Refresh.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ChatBox.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="E:OpenXLive.Form.Controls.ChatBox.TextInput">
            <summary>
            Occurs when begin to input text.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.ChatBox.TextChanged">
            <summary>
            Occurs when content changes in the text box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.DateTime">
            <summary>
            Gets or sets the date time.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.DateTimeVisible">
            <summary>
            Gets or sets a value that indicates whether show the date time in the chat box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.IsReadOnly">
            <summary>
            Gets or sets the value that determines if the user can change the text in the chat box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.TriangleOrientation">
            <summary>
            Gets or sets the orientation of the triangle.
            The default value is ChatBoxTriangleOrientation.Bottom.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.PressedBackground">
            <summary>
            Gets or sets the background when pressed. The default value is Color.White.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.TipsForeground">
            <summary>
            Gets or sets the color of tips text.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.ReadOnlyForeground">
            <summary>
            Gets or sets the color of text if the chat box is readonly.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.DateTimeForeground">
            <summary>
            Gets or sets the color of date time text.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.Tips">
            <summary>
            Gets or sets the tips of the ChatBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.Background">
            <summary>
             Gets or sets a color that provides the background of the ChatBox control.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.KeyboardTitle">
            <summary>
            Gets or sets the title of keyboard input dialog box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.KeyboardDescription">
            <summary>
            Gets or sets the description of keyboard input dialog box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.FontFamily">
            <summary>
            Gets or sets the font family for the OpenXLive.Form.Controls.ChatBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.FontSize">
            <summary>
            Gets or sets the size of the text in this ChatBox. The defualt value is 25 (in pixels).
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.TipsFontSize">
            <summary>
            Gets or sets the size of the tips text in this ChatBox. The defualt value is 25 (in pixels).
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.DateTimeFontSize">
            <summary>
            Gets or sets the size of the date time text in this ChatBox. The defualt value is 18 (in pixels).
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.Text">
            <summary>
            Gets or sets the text contents of a OpenXLive.Form.Controls.ChatBox.
            </summary>
            <exception cref="T:System.ArgumentNullException">Text is set to null.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.TextAlignment">
            <summary>
            Gets or sets a value that indicates the horizontal alignment of text content. The default value is TextAlignment.Left.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.TextWrapping">
            <summary>
            Gets or sets how the OpenXLive.Form.Controls.ChatBox wraps text. The default value is TextWrapping.NoWrap.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ChatBox.IsPressed">
            <summary>
            Gets a value that indicates whether a OpenXLive.Form.Controls.ChatBox
            is currently in a pressed state.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ChatBoxTriangleOrientation">
            <summary>
            Specifies the orientation of the triangle in the chat box.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ChatBoxTriangleOrientation.Left">
            <summary>
            Left of the chat box.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ChatBoxTriangleOrientation.Top">
            <summary>
            Top of the chat box.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ChatBoxTriangleOrientation.Right">
            <summary>
            Right of the chat box.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ChatBoxTriangleOrientation.Bottom">
            <summary>
            Bottom of the chat box.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.CheckBox">
            <summary>
            Represents a control that a user can select (check) or clear (uncheck).
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.CheckBox.CheckAreaSize">
            <summary>
            Indicates the size of the check area.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.CheckBox.ContentLeftMargin">
            <summary>
            Indicates the left margin of the content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.CheckBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.LoadCheckIcon(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Load check icon texture with specifies GraphicsDevice;
            </summary>
            <param name="graphicsDevice">The GraphicsDevice.</param>
        </member>
        <member name="F:OpenXLive.Form.Controls.CheckBox._CheckIconPosition">
            <summary>
            Indicates the draw position of check icon.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.CheckBox._CheckBackPosition">
            <summary>
            Indicates the draw postion of background.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.CheckBox has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.UpdateContent">
            <summary>
            Updates the content.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.CheckBox._LineSize">
            <summary>
            Indicates the size of a line in the checkbox.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.ComputeLineSize">
            <summary>
            Computes the size of a line.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.OnFontFamilyChanged">
            <summary>
            Called when Font property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.OnFontSizeChanged">
            <summary>
            Called when FontSize property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.OnContentChanged(System.String,System.String)">
            <summary>
            Called when the value of the Content property changes.
            </summary>
            <param name="oldContent">The old value of the Content property.</param>
            <param name="newContent">The new value of the Content property.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.OnPressStateChanged">
            <summary>
            Called when IsPressed property is changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.UpdateProperty">
            <summary>
            Updates property.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.CheckBox._VisualRect">
            <summary>
            Indicates the visual rectangle of CheckBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates ChckeBox.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws CheckBox.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.CheckBox.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.CheckBox.TextTrimming">
            <summary>
            One of the OpenXLive.Form.Controls.TextTrimming values that specifies the text trimming
            behavior to employ. The default is OpenXLive.Form.Controls.TextTrimming.None.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.CheckBox.TextWrapping">
            <summary>
            Gets or sets how the OpenXLive.Form.Controls.CheckBox wraps text. The default value is TextWrapping.Wrap.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.CheckBox.PressedBackground">
            <summary>
            Gets or sets the background when pressed. The default value is Color.White.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.CheckBox.Background">
            <summary>
             Gets or sets a color that provides the background of the checkbox.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.CheckBox.IconColor">
            <summary>
            Gets or sets the color of the icon.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ContentControl">
            <summary>
            Represents a control with a single piece of control as content. 
            Controls such as OpenXLive.Form.Controls.ScrollViewer
            directly or indirectly inherit from this class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.ContentControl class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.LoadedInternal">
            <summary>
            Loaded content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.UnloadedInternal">
            <summary>
            Unloaded content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.SetContentEnabledCore(System.Boolean)">
            <summary>
            Sets the IsEnabledCore property for content.
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.SetContentInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for content.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.SetContentVisibleCore(System.Boolean)">
            <summary>
            Sets the VisibleCore property for content.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.OnContentChanged(OpenXLive.Form.Controls.Control,OpenXLive.Form.Controls.Control)">
            <summary>
            Called when the value of the OpenXLive.Form.Controls.ContentControl.Content
            property changes.
            </summary>
            <param name="oldContent">The old value of the OpenXLive.Form.Controls.ContentControl.Content property.</param>
            <param name="newContent">The new value of the OpenXLive.Form.Controls.ContentControl.Content property.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.ContentControl has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ContentControl._Offset">
            <summary>
            Indicates the offset of content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates content control.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContentControl.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws content control.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContentControl.Content">
            <summary>
            Gets or sets the value of the OpenXLive.Form.Controls.ContentControl content property.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ContextMenu">
            <summary>
             Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.#ctor">
            <summary>
            Initializes a new instance of the ContextMenu class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.MenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Handling click event of MenuItem.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.OnOpened">
            <summary>
            Raise opened event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.OnClosed">
            <summary>
            Raise closed event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.SetMenusVisibleCore(System.Boolean)">
            <summary>
            Sets the VisibleCore property for all the menus.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.SetMenusInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for all the menus.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.SetItemsFont">
            <summary>
            Sets items font.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.SetItemsForeground">
            <summary>
            Sets items foreground.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ContextMenu._TouchIsValid">
            <summary>
            Indicates whether the touch operation is valid.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.OnPressedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Handling pressed operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Handling released operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.HitTest(System.Int32,System.Int32)">
            <summary>
            Gets a valuet that indicate whether the Visual rectangle contains the sprecifies point.
            </summary>
            <param name="x">x-coordinate.</param>
            <param name="y">y-coordiante.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.Open">
            <summary>
            Open context menu.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.Close">
            <summary>
            Close context menu.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.InitialAnimation">
            <summary>
            Initial animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.UpdateAnimation(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the application bar animation;
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.GetPosition(System.Int32)">
            <summary>
            Return the position of a ContextMenu.
            </summary>
            <param name="contextMenuHeight"></param>
            <returns></returns>
        </member>
        <member name="F:OpenXLive.Form.Controls.ContextMenu._VisualRect">
            <summary>
            Indicates the visual rectangle of app bar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ContextMenu._ContextMenuCurrentHeight">
            <summary>
            Indicates the current height of the ContextMenu.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ContextMenu._ContextMenuCurrentWidth">
            <summary>
            Indicates the current width of the ContextMenu.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ContextMenu._ContextMenuHeight">
            <summary>
            The height of the ContextMenu.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ContextMenu._Ratio">
            <summary>
            The ratio of line when this menu is opening.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.SetSize">
            <summary>
            Sets the size of a ContextMenu.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.SetRect">
            <summary>
            Sets the SizeRect of ContextMenu.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updata status.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ContextMenu.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draw Application bar.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContextMenu.IsVisible">
            <summary>
            Determines if a ContextMenu is opened.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContextMenu.HoldPosition">
            <summary>
            Gets or sets the current position of hold gesture.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.ContextMenu.Closed">
            <summary>
            Occurs when a particular instance of a ContextMenu closes.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.ContextMenu.Opened">
            <summary>
            Occurs when a particular instance of a ContextMenu opens.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContextMenu.Items">
            <summary>
            Gets the collection of the MenuItem that inside the ContextMenu.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContextMenu.FontFamily">
            <summary>
            Gets or sets the FontFamily for the ContextMenu.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContextMenu.Foreground">
            <summary>
            Gets or sets the foreground color of the ContextMenu.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContextMenu.BorderBrush">
            <summary>
            Gets or sets the BorderBrush of a ContextMenu.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContextMenu.Background">
            <summary>
             Gets or sets a color that provides the background of a ContextMenu.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContextMenu.Owner">
            <summary>
            Gets the owning control for the ContextMenu.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContextMenu.IsOpen">
            <summary>
            Gets or sets a value indicating whether the ContextMenu is visible.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContextMenu.CanOpen">
            <summary>
            Gets a value indicating whether the ContextMenu can be opened.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ContextMenu.IsOpening">
            <summary>
            Gets a value indicating whether the ContextMenu is being opened.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ContextMenu.MenuOrientation">
            <summary>
            Rpresents the orientation of a ContextMneu expanded.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ContextMenu.MenuOrientation.TopToBottom">
            <summary>
            From top to bottom.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ContextMenu.MenuOrientation.BottomToTop">
            <summary>
            From bottom to top.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.MenuItem">
            <summary>
            Represents a selectable item inside a ContextMenu.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.#ctor">
            <summary>
            Initializes a new instance of the MenuItem class.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.MenuItem._ItemAnimation">
            <summary>
            The animation for the MenuItem.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.SetCharElements">
            <summary>
            Sets the char element list.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.MenuItem._DisabledForegroundColor">
            <summary>
            The foreground color when set the MenuItem IsEnabled to false.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.UpdateProperty">
            <summary>
            Updates property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.BeginReleasedAnimation">
            <summary>
            Begins the animation of a menu item when the menu item has released.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.MenuItem._PressedOffset">
            <summary>
            Indicates the offset of the menu when a menu item is pressed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.OnPressStateChanged">
            <summary>
            Called when IsPressed property is changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.RestoreState">
            <summary>
            Restores default state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.OnMovedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for move operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.OnPressedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for pressed operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for released operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.HitTest(System.Int32,System.Int32)">
            <summary>
            Gets a valuet that indicate whether the Visual rectangle contains the sprecifies point.
            </summary>
            <param name="x">x-coordinate.</param>
            <param name="y">y-coordiante.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.OnClick">
            <summary>
            Raises the OpenXLive.Form.Controls.ApplicationBarItem.Click event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.FireClickEvent">
            <summary>
            Raises click event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates status.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItem.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws a ApplicationBarMenuItem
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="E:OpenXLive.Form.Controls.MenuItem.Click">
            <summary>
            Occurs when the user taps a ApplicationBarItem in the Application Bar.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.MenuItem.FontFamily">
            <summary>
            Gets or sets the FontFamily for the ApplicationBarItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.MenuItem.IsEnabled">
            <summary>
            Gets or sets the enabled status of the MenuItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.MenuItem.Header">
            <summary>
            Gets or sets the text string that is displayed as a label for the MenuItem.
            </summary>
            <exception cref="T:System.ArgumentException">Text contains multiple lines.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.MenuItem.Foreground">
            <summary>
            Gets or sets the foreground color of the MenuItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.MenuItem.Viewport">
            <summary>
            Gets or sets the viewport of a MenuItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.MenuItem.IsPressed">
            <summary>
            Gets a value that indicates whether the ApplicationBarItem has pressed.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.MenuItemCollection">
            <summary>
            Represents an ordered collection of OpenXLive.Form.Controls.MenuItem objects.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItemCollection.#ctor(OpenXLive.Form.Controls.ContextMenu)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.MenuItemCollection class.
            </summary>
            <param name="parent">A OpenXLive.Form.Controls.ContextMenu object.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItemCollection.SetItemFont(OpenXLive.Form.Controls.MenuItem,OpenXLive.Form.Media.FontFamily)">
            <summary>
            Sets FontFamily for MenuItem.
            </summary>
            <param name="item"></param>
            <param name="fontFamily"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItemCollection.Add(OpenXLive.Form.Controls.MenuItem)">
            <summary>
            Adds the specified element to the OpenXLive.Form.Controls.MenuItemCollection. 
            </summary>
            <param name="value">The OpenXLive.Form.Controls.Primitives.ApplicationBarItem to add.</param>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItemCollection.Insert(System.Int32,OpenXLive.Form.Controls.MenuItem)">
            <summary>
            Inserts an element into a OpenXLive.Form.Controls.UIObjectCollection at the specified index position. 
            </summary>
            <param name="index">The index position where you want to insert the element.</param>
            <param name="value">The element to insert into the OpenXLive.Form.Controls.UIObjectCollection.</param>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItemCollection.AddItem(OpenXLive.Form.Controls.MenuItem)">
            <summary>
            Adds the specified element to the OpenXLive.Form.Controls.MenuItemCollection. 
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItemCollection.Remove(OpenXLive.Form.Controls.MenuItem)">
            <summary>
            Removes the specified element from a OpenXLive.Form.Controls.MenuItemCollection. 
            </summary>
            <param name="value">The element to remove from the collection.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the OpenXLive.Form.Controls.MenuItem at the specified index. 
            </summary>
            <param name="index">The index of the OpenXLive.Form.Controls.MenuItem that you want to remove.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItemCollection.RemoveItem(OpenXLive.Form.Controls.MenuItem)">
            <summary>
            Removes the specified element from a OpenXLive.Form.Controls.MenuItemCollection. 
            </summary>
            <param name="value">The element to remove from the collection.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItemCollection.Clear">
            <summary>
            Removes all elements from a OpenXLive.Form.Controls.MenuItemCollection. 
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.MenuItemCollection.ClearItem">
            <summary>
            Removes all elements from a OpenXLive.Form.Controls.MenuItemCollection. 
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.MenuItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the OpenXLive.Form.Controls.MenuItem stored 
            at the zero-based index position of the OpenXLive.Form.Controls.UIObjectCollection. 
            </summary>
            <param name="index">The index position of the OpenXLive.Form.Controls.MenuItem.</param>
            <returns>A OpenXLive.Form.Controls.MenuItem at the specified position.</returns>
        </member>
        <member name="T:OpenXLive.Form.Controls.ControlCollection">
            <summary>
            Represents an ordered collection of OpenXLive.Form.Controls.Control objects.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ControlCollection.#ctor(OpenXLive.Form.UIObject)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.ControlCollection class.
            </summary>
            <param name="parent">The parent of the collection.</param>
            <exception cref="T:System.ArgumentNullException">parent is null.</exception>
        </member>
        <member name="T:OpenXLive.Form.Controls.ControlTemplate">
            <summary>
            Defines the content that is applied as a control template.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ControlTemplate.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.ControlTemplate class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ControlTemplate.OnContentChanged(OpenXLive.Form.Controls.Control,OpenXLive.Form.Controls.Control)">
            <summary>
            Called when the value of the OpenXLive.Form.Controls.ControlTemplate.Content
            property changes.
            </summary>
            <param name="oldContent">The old value of the OpenXLive.Form.Controls.ControlTemplate.Content property.</param>
            <param name="newContent">The new value of the OpenXLive.Form.Controls.ControlTemplate.Content property.</param>
        </member>
        <member name="E:OpenXLive.Form.Controls.ControlTemplate.ContentChanged">
            <summary>
            Occurs when content property has changed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ControlTemplate.Content">
            <summary>
            Gets or sets the content that is contained within a control.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Image">
            <summary>
            Represents a control that displays an image in the JPEG or PNG file formats.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Image.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Image class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Image.LoadedInternal">
            <summary>
            Loaded image.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Image.UnloadedInternal">
            <summary>
            Restore image opetions.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Image.OnImageOpened">
            <summary>
            Called when image opened.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Image.OnImageFailed(System.Exception)">
            <summary>
            Called when image open failed.
            </summary>
            <param name="ex">The excetpion.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Image.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.Image has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Image.BeginLoadImage">
            <summary>
            Begin Load image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Image.SetDrawTexture">
            <summary>
            Set draw texture.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Image.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws image.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.Image._ImageSourceRect">
            <summary>
            A rectangle that specifies (in texels) the source texels from a texture.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Image._ImageDestinationRect">
            <summary>
            A rectangle that specifies (in screen coordinates) the destination for drawing the sprite.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Image._ActualOrigin">
            <summary>
            The origin of texture.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Image.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="E:OpenXLive.Form.Controls.Image.ImageFailed">
            <summary>
            Occurs when there is an error associated with image retrieval or format.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.Image.ImageOpened">
            <summary>
            Occurs when the image source is downloaded and decoded with no failure.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Image.Source">
            <summary>
            Gets or sets the source for the image.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Image.Stretch">
            <summary>
            Gets or sets a value that describes how an OpenXLive.Form.Controls.Image 
            should be stretched to fill the destination rectangle. The default value is Stretch.Fill.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Image.Origin">
            <summary>
            Gets or sets the center point of Image. X and Y is typically given as a value between 0 and 1.
            For example, (0.5,0.5) will represent center of the Image, 
            or (1,1) would represent the bottom right corner of the Image.
            The default value is (0,0).
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Image.Opacity">
            <summary>
            Gets or sets the degree of the iamge's opacity. The default value is 1.0.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Image.SpriteEffects">
            <summary>
            Gets or sets the mirroring options. The default value is SpriteEffects.None.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Image.Rotation">
            <summary>
            Gets or sets the rotation angle, it is a degrees value.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Image.Background">
            <summary>
             Gets or sets a color that provides the background of the Image.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ItemContainer">
            <summary>
            Represents a item in a ItemsControl.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemContainer.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.ItemContainer class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemContainer.LoadContent(System.Object)">
            <summary>
            Creates the OpenXLive.Form.Controls.Control objects in the ContentTemplate.
            </summary>
            <returns></returns>
            <param name="dataContext">The data context of the template.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemContainer.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            This object not support this method.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemContainer.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            This object not support this method.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemContainer.Update(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Vector2)">
            <summary>
            This is called before Draw method.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
            <param name="visualRect">The visual rectangle of the target ItemsControl.</param>
            <param name="offset">The offset of the item.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemContainer.OnUpdate(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Vector2)">
            <summary>
            This is called before Draw method.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
            <param name="visualRect">The visual rectangle of the target ItemsControl.</param>
            <param name="offset">The offset of the item.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemContainer.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Draw item.
            </summary>
            <param name="gameTime"></param>
            <param name="visualRect"></param>
            <param name="offset">The offset of the item.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ItemContainer.OnDraw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Draw item.
            </summary>
            <param name="gameTime"></param>
            <param name="visualRect">The visual rectangle of the target ItemsControl.</param>
            <param name="offset">The offset of the item.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemContainer.Item">
            <summary>
            Gets the item of the ItemContainer;
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemContainer.ItemChanged">
            <summary>
            Gets a value that indicates whether the size rectangle or items height has changed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemContainer.DataContext">
            <summary>
            Gets the data context of ItemContainer.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemContainer.ContentTemplate">
            <summary>
            Gets or sets the data template that is used to display the content of the
            OpenXLive.Form.ItemContainer.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ItemContainer.IsPressed">
            <summary>
            Gets a value that indicates whether the item is pressed.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Item">
            <summary>
            Represents a item in a ItemsControl.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Item.#ctor(Microsoft.Xna.Framework.Rectangle,System.Single)">
            <summary>
            Initialize a new instance of Item.
            </summary>
            <param name="sizeRect">The size rectangle of Item.</param>
            <param name="itemsHeight">The height contains the first to the current Item.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Item.Equals(System.Object)">
            <summary>
            Compares this structure to another for equality.
            </summary>
            <returns>true if the two objects are equal; otherwise, false.</returns>
            <param name="obj">The object to compare.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Item.Equals(OpenXLive.Form.Controls.Item)">
            <summary>
            Compares this structure to another structure for equality.
            </summary>
            <param name="item">An instance of to compare for equality.</param>
            <returns>true if the two instances of are equal; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Item.GetHashCode">
            <summary>
            Returns the hash code of the structure.
            </summary>
            <returns>A hash code for this instance of Item.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Item.op_Equality(OpenXLive.Form.Controls.Item,OpenXLive.Form.Controls.Item)">
            <summary>
            Compares the value of two structures for equality.
            </summary>
            <param name="t1">The first structure to compare.</param>
            <param name="t2">The other structure to compare.</param>
            <returns>true if the two instances of are equal; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Item.op_Inequality(OpenXLive.Form.Controls.Item,OpenXLive.Form.Controls.Item)">
            <summary>
            Compares two structures for inequality. 
            </summary>
            <param name="t1">The first structure to compare.</param>
            <param name="t2">The other structure to compare.</param>
            <returns>true if the two instances of are not equal; otherwise, false.</returns>
        </member>
        <member name="P:OpenXLive.Form.Controls.Item.SizeRect">
            <summary>
            Gets or sets the size rectangle of Item.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Item.ItemsHeight">
            <summary>
            Gets or sets the height contains the first to the current Item.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Line">
            <summary>
            Draws a straight line between two points.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Line.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Line class.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Line._CanAdjustSize">
            <summary>
            Indicate whether can adjust the height and the width of the line.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Line._CanAdjustPosition">
            <summary>
            Indicate whether can adjust the position of the line.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Line.InitializeLine">
            <summary>
            Initialize line.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Line.OnHeightChanging(System.Single)">
            <summary>
            Called when height property is changing.
            </summary>
            <param name="newValue">The new height.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Line.OnWidthChanging(System.Single)">
            <summary>
            Called when width property is changing.
            </summary>
            <param name="newValue">The new width.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Line.OnPositionChanging(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Called when position property is changing.
            </summary>
            <param name="newPosition">The new position.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="F:OpenXLive.Form.Controls.Line._VisualRect">
            <summary>
            Indicates the visual rectangle of Line.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Line.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Line.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draw line.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="P:OpenXLive.Form.Controls.Line.StartPoint">
            <summary>
            Gets or sets the start point of the OpenXLive.Form.Controls.Line.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Line.EndPoint">
            <summary>
            Gets or sets the end point of the OpenXLive.Form.Controls.Line.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Line.Thickness">
            <summary>
            Gets or sets the width of the OpenXLive.Form.Controls.Line.
            The default value is 1.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton">
            <summary>
            Represents a switch that can be toggled between two states.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Primitivess.ToggleSwitchButton class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.RestoreState">
            <summary>
            Restores default state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnWidthChanging(System.Single)">
            <summary>
            Called when width property is changing.
            </summary>
            <param name="newValue">The new width.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnHeightChanging(System.Single)">
            <summary>
            Called when width property is changing.
            </summary>
            <param name="newValue">The new width.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.UpdateProperty">
            <summary>
            Updates property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnTouchDown(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the TouchDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnHorizontalDragCore(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Provides class handling for HorizontalDrag operation.
            </summary>
            <param name="gestureSample">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Released.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnClick">
            <summary>
            Occurs when the OpenXLive.Form.Controls.Primitives.ToggleButton is clicked.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton._ToggleManually">
            <summary>
            Indicating whether toggle the switch by manual.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnToggle">
            <summary>
            Toggle the value of IsChecked property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.SwitchStrategy">
            <summary>
            A strategy determines whether change state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.BeginSwitchOnAnimation">
            <summary>
            Begin on animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.BeginSwitchOffAnimation">
            <summary>
            Begin off animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.BeginSwitchAnimation">
            <summary>
            Begin switch animation.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton._ThumbPositionX">
            <summary>
            The thumb x-realated position.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton._VisualRect">
            <summary>
            Indicates the visual rectangle of ChatBox.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws a ToggleSwitchButton control.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.SwitchForeground">
            <summary>
            Gets or sets the switch foreground.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.SwitchBackground">
            <summary>
            Gets or sets the switch background.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.DisabledForeground">
            <summary>
            Gets or sets the foreground when ToggleSwitchButton is disabled.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.DisabledSwitchForeground">
            <summary>
            Gets or sets the switch foreground when ToggleSwitchButton is disabled.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.ToggleSwitchButton.DisabledSwitchBackground">
            <summary>
            Gets or sets the switch background when ToggleSwitchButton is disabled.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Hyperlink">
            <summary>
            Provides an inline-level text element that provides facilities for hosting hyperlinks.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.TextElement">
            <summary>
            Represents a discrete section of formatted or unformatted text.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElement.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.TextElement class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElement.FireResetElementEvent">
            <summary>
            Raise ResetElement event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElement.GetForegroundOverride">
            <summary>
            Gets the actual foreground.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElement.SplitLineBreak">
            <summary>
            Split the line break in the current text.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElement.GetTextDecorationOverride">
            <summary>
            Gets the actual TextDecoration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElement.RestoreProperty">
            <summary>
            Restore the property to default.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElement.OnForceVisibleChanged">
            <summary>
            Called when ForceVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElement.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElement.OnTapCore(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Provides class handling for tap operation.
            </summary>
            <param name="gestureSample">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElement.OnTap(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.TextElement.Tap event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElement.HitTest(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets a value that indicate whether the Visual rectangle contains the sprecifies point.
            </summary>
            <param name="point">The specifies point.</param>
            <returns></returns>
        </member>
        <member name="E:OpenXLive.Form.Controls.TextElement.ResetElement">
            <summary>
            Occurs when text property changed or ForceVisible property changed.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.TextElement.Tap">
            <summary>
            Occurs when a Tap gesture is committed while over this TextElement.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextElement.Viewport">
            <summary>
            Gets or sets the viewport of a OpenXLive.Form.Controls.TextElement.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextElement.Offset">
            <summary>
            Gets or sets the offset of a OpenXLive.Form.Controls.TextElement.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextElement.ForegroundInternal">
            <summary>
            Gets or sets the foreground of a TextElement.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextElement.Foreground">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextElement.Text">
            <summary>
            Gets or sets the text contents of a OpenXLive.Form.Controls.TextElement.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextElement.TextWithoutLineBreak">
            <summary>
            Gets the text without line break.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextElement.LengthWithoutLineBreak">
            <summary>
            Gets the length of the text without line break.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextElement.TextDecorationInternal">
            <summary>
            Gets or sets the TextDecoration of a TextElement.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextElement.TextDecoration">
            <summary>
            Gets or sets a value that specifies the text decorations that are applied to the text.
            The default value is TextDecoration.None.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextElement.CharElements">
            <summary>
            Gets the collection of CharElement in a TextElement.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.Hyperlink class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.OnVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.FireClickEvent">
            <summary>
            Raises click event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.OnClick">
            <summary>
            Raises the OpenXLive.Form.Controls.Hyperlink.Click event and navigate to a URI.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.OnPressedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for pressed operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Released.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.OnMovedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Moved.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.Hyperlink._IsPressed">
            <summary>
            Indicates whether a OpenXLive.Form.Controls.Hyperlink
            is currently in a pressed state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.RestoreState">
            <summary>
            Restores default state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.GetForegroundOverride">
            <summary>
            Gets the actual foreground.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Hyperlink.GetTextDecorationOverride">
            <summary>
            Gets the actual TextDecoration.
            </summary>
            <returns></returns>
        </member>
        <member name="E:OpenXLive.Form.Controls.Hyperlink.Click">
            <summary>
            Occurs when clicked on a Hyperlink.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Hyperlink.PressedForeground">
            <summary>
            Gets or sets the text color when pressed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Hyperlink.PressedTextDecoration">
            <summary>
            Gets or sets a value that specifies the text decorations when pressed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Hyperlink.NavigateUri">
            <summary>
            Gets or sets a URI to navigate to when the Hyperlink is activated.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.TextDecoration">
            <summary>
            Specifies the text decorations that are applied to the text in a TextBlock.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextDecoration.None">
            <summary>
            Specifies an normal text
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextDecoration.Underline">
            <summary>
            Specifies an underlined text
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.TextElementCollection">
            <summary>
            Represents an ordered collection of OpenXLive.Form.ControlsTextElement. child cotrols. 
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.#ctor(OpenXLive.Form.Controls.TextBlock)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.TextElementCollection class.
            </summary>
            <param name="parent">A OpenXLive.Form.Controls.TextBlock object.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.FireElementResetEvent">
            <summary>
            Raise ElementReset event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.Add(OpenXLive.Form.Controls.TextElement)">
            <summary>
            Adds the specified element to the OpenXLive.Form.Controls.TextElementCollection. 
            </summary>
            <param name="value">The OpenXLive.Form.Controls.TextElement to add.</param>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.Insert(System.Int32,OpenXLive.Form.Controls.TextElement)">
            <summary>
            Inserts an element into a OpenXLive.Form.Controls.TextElementCollection at the specified index position. 
            </summary>
            <param name="index">The index position where you want to insert the element.</param>
            <param name="value">The element to insert into the OpenXLive.Form.Controls.TextElementCollection.</param>
            <exception cref="T:System.ArgumentNullException">value is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.AddMonitor(OpenXLive.Form.Controls.TextElement)">
            <summary>
            Monitor a specifies element.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.AttachProperty(OpenXLive.Form.Controls.TextElement)">
            <summary>
            Attach Property.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.Remove(OpenXLive.Form.Controls.TextElement)">
            <summary>
            Removes the specified element from a OpenXLive.Form.Controls.TextElementCollection. 
            </summary>
            <param name="value">The element to remove from the collection.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the OpenXLive.Form.Controls.TextElement at the specified index. 
            </summary>
            <param name="index">The index of the OpenXLive.Form.Controls.TextElement that you want to remove.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.RemoveMonitor(OpenXLive.Form.Controls.TextElement)">
            <summary>
            Remove monitor.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.UnattachProperty(OpenXLive.Form.Controls.TextElement)">
            <summary>
            Unattache property.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.Clear">
            <summary>
            Removes all elements from a OpenXLive.Form.Controls.TextElementCollection. 
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextElementCollection.RemoveMonitor">
            <summary>
            Remove all the monitor.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.TextElementCollection.ElementReset">
            <summary>
            Occurs when text property or visible property of a TextElement have changed;
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ToggleSwitch">
            <summary>
            Represents a switch that can be toggled between two states.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.ToggleSwitch class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.UpdateAutoSizeValue">
            <summary>
            Updates auto size value.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.FireCheckdEvent">
            <summary>
            Raises Checked event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.FireUncheckedEvent">
            <summary>
            Raises Unchecked event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.FireClickEvent">
            <summary>
            Raises click event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.UpdateProperty">
            <summary>
            Updates property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.UpdateContent">
            <summary>
            Updates content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.OnMaxHeightChanged">
            <summary>
            Called when MaxHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.OnMaxWidthChanged">
            <summary>
            Called when MaxWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.TextBox has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.Refresh">
            <summary>
            Refresh UI.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ToggleSwitch._VisualRect">
            <summary>
            Indicates the visual rectangle of ToggleSwitch.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when update status.
            </summary>
            <param name="gameTime">Time passed since the last call to Update.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ToggleSwitch.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when this contorl draw itself.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="E:OpenXLive.Form.Controls.ToggleSwitch.Checked">
            <summary>
            Occurs when an OpenXLive.Form.Controls.ToggleSwitch is checked.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.ToggleSwitch.Unchecked">
            <summary>
            Occurs when an OpenXLive.Form.Controls.ToggleSwitch is unchecked.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.ToggleSwitch.Click">
            <summary>
            Occurs when an OpenXLive.Form.Controls.ToggleSwitch is clicked.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.IsChecked">
            <summary>
            Gets or sets whether the OpenXLive.Form.Controls.ToggleSwitch is checked.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.Header">
            <summary>
            Gets or sets the header text.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.SwitchOnContent">
            <summary>
            Gets or sets the content when switch on.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.SwitchOffContent">
            <summary>
            Gets or sets the content when switch off.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.FontFamily">
            <summary>
            Gets or sets the FontFamily for the OpenXLive.Form.Controls.ToggleSwitch.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.HeaderForeground">
            <summary>
            Gets or sets the foreground of header text.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.DisabledHeaderForeground">
            <summary>
            Gets or sets the foreground of header text when ToggleSwitch is disabled.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.ContentForeground">
            <summary>
            Gets or sets the foreground of content text.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.DisabledContentForeground">
            <summary>
            Gets or sets the foreground of content text when ToggleSwitch is disabled.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.SwitchForeground">
            <summary>
            Gets or sets the switch foreground.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.SwitchBackground">
            <summary>
            Gets or sets the switch background.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.DisabledForeground">
            <summary>
            Gets or sets the foreground when ToggleSwitchButton is disabled.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.DisabledSwitchForeground">
            <summary>
            Gets or sets the switch foreground when ToggleSwitchButton is disabled.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ToggleSwitch.DisabledSwitchBackground">
            <summary>
            Gets or sets the switch background when ToggleSwitchButton is disabled.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.OrientedSize">
            <summary>
            The OrientedSize structure is used to abstract the growth direction from
            the layout algorithms of WrapPanel.  When the growth direction is
            oriented horizontally (ex: the next element is arranged on the side of
            the previous element), then the Width grows directly with the placement
            of elements and Height grows indirectly with the size of the largest
            element in the row.  When the orientation is reversed, so is the
            directional growth with respect to Width and Height.
            </summary>
            <QualityBand>Mature</QualityBand>
        </member>
        <member name="F:OpenXLive.Form.Controls.OrientedSize._orientation">
            <summary>
            The orientation of the structure.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.OrientedSize._direct">
            <summary>
            The size dimension that grows directly with layout placement.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.OrientedSize._indirect">
            <summary>
            The size dimension that grows indirectly with the maximum value of
            the layout row or column.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.OrientedSize.#ctor(OpenXLive.Form.Controls.Orientation)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.OrientedSize.#ctor(OpenXLive.Form.Controls.Orientation,System.Single,System.Single)">
            <summary>
            Initializes a new OrientedSize structure.
            </summary>
            <param name="orientation">Orientation of the structure.</param>
            <param name="width">Un-oriented width of the structure.</param>
            <param name="height">Un-oriented height of the structure.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.OrientedSize.Orientation">
            <summary>
            Gets the orientation of the structure.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.OrientedSize.Direct">
            <summary>
            Gets or sets the size dimension that grows directly with layout
            placement.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.OrientedSize.Indirect">
            <summary>
            Gets or sets the size dimension that grows indirectly with the
            maximum value of the layout row or column.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.OrientedSize.Width">
            <summary>
            Gets or sets the width of the size.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.OrientedSize.Height">
            <summary>
            Gets or sets the height of the size.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.WrapPanel">
            <summary>
            Positions child elements sequentially from left to right or top to
            bottom.  When elements extend beyond the panel edge, elements are
            positioned in the next row or column.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.WrapPanel.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:OpenXLive.Form.Controls.WrapPanel" /> class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.WrapPanel.ArrangeOverride(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Positions child control.
            </summary>
            <param name="visualRect">The visual rectangle of the Panel.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.WrapPanel.ArrangeLine(Microsoft.Xna.Framework.Rectangle,System.Int32,System.Int32,System.Nullable{System.Single},System.Single,System.Single)">
            <summary>
            Arrange a sequence of elements in a single line.
            </summary>
            <param name="visualRect"></param>
            <param name="lineStart">
            Index of the first element in the sequence to arrange.
            </param>
            <param name="lineEnd">
            Index of the last element in the sequence to arrange.
            </param>
            <param name="directDelta">
            Optional fixed growth in the primary direction.
            </param>
            <param name="indirectOffset">
            Offset of the line in the indirect direction.
            </param>
            <param name="indirectGrowth">
            Shared indirect growth of the elements on this line.
            </param>
        </member>
        <member name="P:OpenXLive.Form.Controls.WrapPanel.ItemHeight">
            <summary>
            Gets or sets the height of the layout area for each item that is
            contained in a <see cref="T:OpenXLive.Form.Controls.WrapPanel" />.
            </summary>
            <value>
            The height applied to the layout area of each item that is contained
            within a <see cref="T:OpenXLive.Form.Controls.WrapPanel" />.  The
            default value is <see cref="F:System.Single.NaN" />.
            </value>
        </member>
        <member name="P:OpenXLive.Form.Controls.WrapPanel.ItemWidth">
            <summary>
            Gets or sets the width of the layout area for each item that is
            contained in a <see cref="T:OpenXLive.Form.Controls.WrapPanel" />.
            </summary>
            <value>
            The width that applies to the layout area of each item that is
            contained in a <see cref="T:OpenXLive.Form.Controls.WrapPanel" />.
            The default value is <see cref="F:System.Single.NaN" />.
            </value>
        </member>
        <member name="P:OpenXLive.Form.Controls.WrapPanel.Orientation">
            <summary>
            Gets or sets the direction in which child elements are arranged.
            </summary>
            <value>
            One of the <see cref="T:OpenXLive.Form.Controls.Orientation" />
            values.  The default is
            <see cref="F:OpenXLive.Form.Controls.Orientation.Horizontal" />.
            </value>
        </member>
        <member name="T:OpenXLive.Form.Media.CharElement">
            <summary>
            Represents a char in a line.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.CharElement.#ctor(System.Char,OpenXLive.Form.Media.FontWrapper,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            
            </summary>
            <param name="character"></param>
            <param name="wrapper"></param>
            <param name="rect"></param>
            <exception cref="T:System.ArgumentNullException">wrapper is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Media.CharElement.UpdateActualRect">
            <summary>
            Update the actual rectangle.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.CharElement.Character">
            <summary>
            Gets or sets the character.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.CharElement.CharacterString">
            <summary>
            Gets the character as a string.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.CharElement.FontWrapper">
            <summary>
            Gets or sets the sprite font wrapper of the char element.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.CharElement.Offset">
            <summary>
            Gets or sets the offsets of the char element.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.CharElement.Rect">
            <summary>
            Gets or sets the rectangle of the char element.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.CharElement.ActualRect">
            <summary>
            Gets the actual rectangle of the char element with the offset.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.CharElement.LineSpacing">
            <summary>
            Gets or sets the vertical distance (in pixels) between the base lines of two consecutive lines of text. 
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.CharElement.TextElement">
            <summary>
            Gets or sets the owner of the char element.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.FontWrapper">
            <summary>
            Providers a wrapper for a sprite font.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.FontWrapper.#ctor(Microsoft.Xna.Framework.Graphics.SpriteFont)">
            <summary>
            
            </summary>
            <param name="font"></param>
        </member>
        <member name="M:OpenXLive.Form.Media.FontWrapper.GetIndexForCharacter(System.Char)">
            <summary>
            Get the index of the specifes character in the character list.
            </summary>
            <param name="character">The specifes character.</param>
            <returns>The index.</returns>
        </member>
        <member name="M:OpenXLive.Form.Media.FontWrapper.Contains(System.Char)">
            <summary>
            Determins wheter the characters in the sprite font contains the specifes character.
            </summary>
            <param name="character"></param>
            <returns>true if value is found in the characters; otherwise, false.</returns>
        </member>
        <member name="P:OpenXLive.Form.Media.FontWrapper.Font">
            <summary>
            Gets a sprite font.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.FontWrapper.FontSize">
            <summary>
            Gets or sets the font size.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.FontWrapper.FontScale">
            <summary>
            Gets or sets the scale of a sprite font.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.FontFamily">
            <summary>
            Represents a family of related fonts.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.FontFamily.#ctor(Microsoft.Xna.Framework.Graphics.SpriteFont)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.FontFamily class
            with a specified sprite font.
            </summary>
            <param name="font"></param>
            <exception cref="T:System.ArgumentNullException">font is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Media.FontFamily.#ctor(System.Collections.Generic.IList{Microsoft.Xna.Framework.Graphics.SpriteFont})">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.FontFamily class
            with the specified sprite font list.
            </summary>
            <param name="list"></param>
            <exception cref="T:System.ArgumentNullException">list is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">list is empty.</exception>
            <exception cref="T:System.ArgumentException">list contains null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Media.FontFamily.SetFontScale(System.Single)">
            <summary>
            Set the scale for earch sprite font.
            </summary>
            <param name="fontSize"></param>
        </member>
        <member name="M:OpenXLive.Form.Media.FontFamily.GetFontWrappers(System.Single)">
            <summary>
            Return a FontWrapper list width specifies font size.
            </summary>
            <param name="fontSize">The font size.</param>
            <exception cref="T:System.ArgumentException">The fontSize is System.Float.NaN, or less than or equal to zero.</exception>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Media.FontFamily.MeasureString(System.String,System.Single)">
            <summary>
            Return the width and the height of a string as a Vector2.
            </summary>
            <param name="text">The string to measure.</param>
            <param name="fontSize">The font size.</param>
            <exception cref="T:System.ArgumentException">The fontSize is System.Float.NaN, or less than or equal to zero.</exception>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Media.FontFamily.MeasureString(System.Text.StringBuilder,System.Single)">
            <summary>
            Return the width and the height of a string as a Vector2.
            </summary>
            <param name="text">The string to measure.</param>
            <param name="fontSize">The font size.</param>
            <exception cref="T:System.ArgumentException">The fontSize is System.Float.NaN, or less than or equal to zero.</exception>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Form.Media.FontFamily.FontCollection">
            <summary>
            Gets the sprite font collection.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.ImagingCache">
            <summary>
            Providers cache for ImageSource.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.ImagingCache.AddToImageCache(System.Uri,OpenXLive.Form.Media.ImageSource)">
            <summary>
            Add a ImageSource to the cache.
            </summary>
            <param name="uri"></param>
            <param name="iamge"></param>
        </member>
        <member name="M:OpenXLive.Form.Media.ImagingCache.CheckImageCache(System.Uri)">
            <summary>
            
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Media.ImagingCache.RemoveFromImageCache(System.Uri)">
            <summary>
            
            </summary>
            <param name="uri"></param>
        </member>
        <member name="M:OpenXLive.Form.Media.ImagingCache.AddToCache(System.Uri,OpenXLive.Form.Media.ImageSource,System.Collections.Generic.List{OpenXLive.Form.Media.ImagingCache.CacheItem})">
            <summary>
            Add cache.
            </summary>
            <param name="uri"></param>
            <param name="image"></param>
            <param name="cache"></param>
        </member>
        <member name="M:OpenXLive.Form.Media.ImagingCache.RemoveFromCache(System.Uri,System.Collections.Generic.List{OpenXLive.Form.Media.ImagingCache.CacheItem})">
            <summary>
            Remove cache.
            </summary>
            <param name="uri"></param>
            <param name="cache"></param>
        </member>
        <member name="M:OpenXLive.Form.Media.ImagingCache.CheckCache(System.Uri,System.Collections.Generic.List{OpenXLive.Form.Media.ImagingCache.CacheItem})">
            <summary>
            Check cache and return the image cache if exist.
            </summary>
            <param name="uri"></param>
            <param name="cache"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Media.ImagingCache.CacheItem.#ctor(System.Uri,System.WeakReference)">
            <summary>
            
            </summary>
            <param name="uri"></param>
            <param name="reference"></param>
            <exception cref="T:System.ArgumentNullException">uri is null or reference is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.MessageBoxContainer.RaiseUserClosedEvent">
            <summary>
            Fire closed event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageBoxContainer.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.MessageBoxContainer.UserClosed">
            <summary>
            Occurs when the the user click a button and close the template message box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.MessageBoxContainer.Template">
            <summary>
            Gets the template of the message box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.MessageBoxContainer.Result">
            <summary>
            Gets the result.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.MessageBoxContainer.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.MessageBoxContainer.Index">
            <summary>
            Gets a index of buttons that user selected.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.RichMessageBoxContainer.#ctor(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String,OpenXLive.Form.TemplateMessageBoxButton,System.Object)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.TemplateMessageBoxContainer class with specifies content.
            </summary>
            <param name="fontFamily"></param>
            <param name="template">The content template of the template message box.</param>
            <param name="caption">The title of the template message box.</param>
            <param name="button">A value that indicates the button or buttons to display.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null or caption is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.RichMessageBoxContainer.#ctor(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String,System.Collections.Generic.IEnumerable{System.String},System.Object)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.TemplateMessageBoxContainer class with specifies content.
            </summary>
            <param name="fontFamily"></param>
            <param name="template">The content template of the template message box.</param>
            <param name="caption">The title of the template message box.</param>
            <param name="button">Captions for message box buttons. The maximum number of buttons is two.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null or button is null or caption is null.</exception>
            <exception cref="T:System.ArgumentException">The lenght of button is less than zero or great than 2 or The string in the button is null or empty or the string is greate than 256 characters long.</exception>
        </member>
        <member name="M:OpenXLive.Form.RichMessageBoxContainer.InitializeContainer(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String)">
            <summary>
            Initialize the container.
            </summary>
            <param name="fontFamily"></param>
            <param name="template"></param>
            <param name="caption"></param>
        </member>
        <member name="M:OpenXLive.Form.RichMessageBoxContainer.UserClose">
            <summary>
            Click a button and close this template message box.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.RichMessageBoxContainer.LoadedInternal">
            <summary>
            Fire loaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.RichMessageBoxContainer.UnloadedInternal">
            <summary>
            Fire unloaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.RichMessageBoxContainer.SetContentInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for template content.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.RichMessageBoxContainer.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.RichMessageBoxContainer.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.RichMessageBoxContainer.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when update status.
            </summary>
            <param name="gameTime">Time passed since the last call to Update.</param>
        </member>
        <member name="M:OpenXLive.Form.RichMessageBoxContainer.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when this contorl draw itself.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="T:OpenXLive.Form.OrientationChangedEventArgs">
            <summary>
            Provides data to the OrientationChanged event of the Page.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.OrientationChangedEventArgs.#ctor(Microsoft.Xna.Framework.DisplayOrientation)">
            <summary>
            Creates a new instance of the OpenXLive.Form.OrientationChangedEventArgs class.
            </summary>
            <param name="orientation">A member of the Microsoft.Xna.Framework.DisplayOrientation enumeration indicating the device orientation associated with the event.</param>
        </member>
        <member name="P:OpenXLive.Form.OrientationChangedEventArgs.Orientation">
            <summary>
            A member of the Microsoft.Xna.Framework.DisplayOrientation enumeration indicating
            the device orientation associated with this event.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.TemplateMessageBoxContainer">
            <summary>
             The container of a tempalte message box.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxContainer.#ctor(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String,OpenXLive.Form.TemplateMessageBoxButton,System.Object)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.TemplateMessageBoxContainer class with specifies content.
            </summary>
            <param name="fontFamily"></param>
            <param name="template">The content template of the template message box.</param>
            <param name="caption">The title of the template message box.</param>
            <param name="button">A value that indicates the button or buttons to display.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null or caption is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxContainer.#ctor(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String,System.Collections.Generic.IEnumerable{System.String},System.Object)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.TemplateMessageBoxContainer class with specifies content.
            </summary>
            <param name="fontFamily"></param>
            <param name="template">The content template of the template message box.</param>
            <param name="caption">The title of the template message box.</param>
            <param name="button">Captions for message box buttons. The maximum number of buttons is two.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null or button is null or caption is null.</exception>
            <exception cref="T:System.ArgumentException">The lenght of button is less than zero or great than 2 or The string in the button is null or empty or the string is greate than 256 characters long.</exception>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxContainer.InitializeContainer(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String)">
            <summary>
            Initialize the container.
            </summary>
            <param name="fontFamily"></param>
            <param name="template"></param>
            <param name="caption"></param>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxContainer.UserClose">
            <summary>
            Click a button and close this template message box.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxContainer.LoadedInternal">
            <summary>
            Fire loaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxContainer.UnloadedInternal">
            <summary>
            Fire unloaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxContainer.SetContentInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for template content.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxContainer.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxContainer.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxContainer.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when update status.
            </summary>
            <param name="gameTime">Time passed since the last call to Update.</param>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxContainer.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when this contorl draw itself.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="P:OpenXLive.Form.TemplateMessageBoxContainer.Background">
            <summary>
             Gets or sets a color that provides the background of the MessageTileContainer.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.TemplateMessageBoxResult">
            <summary>
            Represents a user's response to a template message box.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.TemplateMessageBoxResult.None">
            <summary>
            The template message box returns no result.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.TemplateMessageBoxResult.OK">
            <summary>
            The user clicked the OK button.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.TemplateMessageBoxResult.Cancel">
            <summary>
            The user clicked the Cancel button or pressed back key.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.TemplateMessageBoxResult.Retry">
            <summary>
            The user clicked the Retry button.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.TemplateMessageBoxResult.Yes">
            <summary>
            The user clicked the Yes button.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.TemplateMessageBoxResult.No">
            <summary>
            The user clicked the No button.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.TemplateMessageBox">
            <summary>
            Providers methods to show a message box contains custom content.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.TemplateMessageBox.IsVisibleInternal">
            <summary>
            Determines if a message tile is active.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBox.Show(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String)">
            <summary>
            Show a tempalte mesage box.
            </summary>
            <param name="fontFamily">The FontFamily of the tempalte message box.</param>
            <param name="template">The control tempalte of the template message box</param>
            <param name="caption">The title of the template message box.</param>
            <exception cref="T:System.ArgumentNullException">font is null or template is null or caption is null.</exception>
            <exception cref="T:System.ArgumentException">The content of the template is null.</exception>
            <returns>Return true, if the template message box shown; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBox.Show(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String,OpenXLive.Form.TemplateMessageBoxButton,OpenXLive.Form.TemplateMessageBoxCallback)">
            <summary>
            Show a tempalte mesage box.
            </summary>
            <param name="fontFamily">The FontFamily of the tempalte message box.</param>
            <param name="template">The control tempalte of the template message box</param>
            <param name="caption">The title of the template message box.</param>
            <param name="button">A value that indicates the button or buttons to display.</param>
            <param name="callback">Method to be called once the template message box is closed.</param>
            <exception cref="T:System.ArgumentNullException">font is null or template is null or caption is null.</exception>
            <exception cref="T:System.ArgumentException">The content of the template is null.</exception>
            <returns>Return true, if the template message box shown; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBox.Show(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String,OpenXLive.Form.TemplateMessageBoxButton,OpenXLive.Form.TemplateMessageBoxCallback,System.Object)">
            <summary>
            Show a tempalte mesage box.
            </summary>
            <param name="fontFamily">The FontFamily of the tempalte message box.</param>
            <param name="template">The control tempalte of the template message box</param>
            <param name="caption">The title of the template message box.</param>
            <param name="button">A value that indicates the button or buttons to display.</param>
            <param name="callback">Method to be called once the template message box is closed.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null or template is null or caption is null.</exception>
            <exception cref="T:System.ArgumentException">The content of the template is null.</exception>
            <returns>Return true, if the template message box shown; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBox.Show(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String,OpenXLive.Form.TemplateMessageBoxButton,System.Nullable{Microsoft.Xna.Framework.Color},OpenXLive.Form.TemplateMessageBoxCallback,System.Object)">
            <summary>
            Show a tempalte mesage box.
            </summary>
            <param name="fontFamily">The FontFamily of the tempalte message box.</param>
            <param name="template">The control tempalte of the template message box</param>
            <param name="caption">The title of the template message box.</param>
            <param name="button">A value that indicates the button or buttons to display.</param>
            <param name="background">The background of the template message box.</param>
            <param name="callback">Method to be called once the template message box is closed.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null or template is null or caption is null.</exception>
            <exception cref="T:System.ArgumentException">The content of the template is null.</exception>
            <returns>Return true, if the template message box shown; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBox.Show(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{Microsoft.Xna.Framework.Color},OpenXLive.Form.TemplateMessageBoxCallback,System.Object)">
            <summary>
            Show a tempalte mesage box.
            </summary>
            <param name="fontFamily">The FontFamily of the tempalte message box.</param>
            <param name="template">The control tempalte of the template message box</param>
            <param name="caption">The title of the template message box.</param>
            <param name="button">A value that indicates the button or buttons to display.</param>
            <param name="background">The background of the template message box.</param>
            <param name="callback">Method to be called once the template message box is closed.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null or template is null or button is null or caption is null.</exception>
            <exception cref="T:System.ArgumentException">
            The content of the template is null, 
            The lenght of button is less than zero or great than 2 or The string in the button is null or empty or the string is greate than 256 characters long.
            </exception>
            <returns>Return true, if the template message box shown; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBox.ShowRich(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String,OpenXLive.Form.TemplateMessageBoxButton,OpenXLive.Form.TemplateMessageBoxCallback,System.Object)">
            <summary>
            Show a rich tempalte mesage box.
            </summary>
            <param name="fontFamily">The FontFamily of the tempalte message box.</param>
            <param name="template">The control tempalte of the template message box</param>
            <param name="caption">The title of the template message box.</param>
            <param name="button">A value that indicates the button or buttons to display.</param>
            <param name="callback">Method to be called once the template message box is closed.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null or template is null or caption is null.</exception>
            <exception cref="T:System.ArgumentException">The content of the template is null.</exception>
            <returns>Return true, if the template message box shown; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBox.ShowRich(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Controls.ControlTemplate,System.String,System.Collections.Generic.IEnumerable{System.String},OpenXLive.Form.TemplateMessageBoxCallback,System.Object)">
            <summary>
            Show a tempalte mesage box.
            </summary>
            <param name="fontFamily">The FontFamily of the tempalte message box.</param>
            <param name="template">The control tempalte of the template message box</param>
            <param name="caption">The title of the template message box.</param>
            <param name="button">A value that indicates the button or buttons to display.</param>
            <param name="callback">Method to be called once the template message box is closed.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null or template is null or button is null or caption is null.</exception>
            <exception cref="T:System.ArgumentException">
            The content of the template is null, 
            The lenght of button is less than zero or great than 2 or The string in the button is null or empty or the string is greate than 256 characters long.
            </exception>
            <returns>Return true, if the template message box shown; otherwise, false.</returns>
        </member>
        <member name="P:OpenXLive.Form.TemplateMessageBox.IsVisible">
            <summary>
            Determines if a template message box is active or a Guide user interface screen is active.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.TextTrimming">
            <summary>
            Describes how text is trimmed when it overflows the edge of its containing box.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextTrimming.None">
            <summary>
            Text is not trimmed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextTrimming.WordEllipsis">
            <summary>
            Text is trimmed at a word boundary. An ellipsis (...) is drawn in place of
            remaining text.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Dispatcher">
            <summary>
            Provides services for access UIObject for a thread.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Dispatcher.#ctor(System.Threading.SynchronizationContext)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Dispatcher class.
            </summary>
            <param name="syncContext"></param>
            <exception cref="T:System.ArgumentNullException">syncContext is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Dispatcher.BeginInvoke(System.Action)">
            <summary>
            Executes the specified delegate asynchronously on the thread the OpenXLive.Form.Dispatcher is associated with.
            </summary>
            <param name="a"></param>
            <exception cref="T:System.ArgumentNullException">a is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Dispatcher.InvokeActionCore(System.Object)">
            <summary>
            Invoke action.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:OpenXLive.Form.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
            <summary>
            Executes the specified delegate asynchronously with the specified array of
            arguments on the thread the OpenXLive.Form.Dispatcher is associated with.
            </summary>
            <param name="d">A delegate to a method that takes multiple arguments.</param>
            <param name="args">An array of objects to pass as arguments to the specified method.</param>
            <exception cref="T:System.ArgumentNullException">a is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.Dispatcher.InvokeDelegateCore(System.Object)">
            <summary>
            Invoke delegate.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:OpenXLive.Form.Dispatcher.CheckAccess">
            <summary>
            Determines whether the calling thread is the thread associated with this
            OpenXLive.Form.Dispatcher.
            </summary>
            <returns>
            true if the calling thread is the thread associated with this OpenXLive.Form.Dispatcher;
            otherwise, false.
            </returns>
        </member>
        <member name="T:OpenXLive.Form.Dispatcher.DelegateCore">
            <summary>
            Contains information of a delegate.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Dispatcher.DelegateCore.#ctor(System.Delegate,System.Object[])">
            <summary>
            Initializes a new instance of the DelegateCore class.
            </summary>
            <param name="d"></param>
            <param name="args"></param>
            <exception cref="T:System.ArgumentNullException">d is null.</exception>
        </member>
        <member name="F:OpenXLive.Form.Dispatcher.DelegateCore.Delegate">
            <summary>
            Gets the delegate.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Dispatcher.DelegateCore.Args">
            <summary>
            Gets the args.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Dispatcher.DelegateCore.DynamicInvoke">
            <summary>
            Dynamically invokes (late-bound) the method represented by the current delegate.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.TapItemEventArgs">
            <summary>
            Provides data for TapItem event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.TapItemEventArgs.#ctor(System.Object,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Initializes a new instance of InputEventArgs with specifies item.
            </summary>
            <param name="item">The curent taped item.</param>
            <param name="position">The position of input operation.</param>
        </member>
        <member name="P:OpenXLive.Form.TapItemEventArgs.Item">
            <summary>
            Gets the item that was taped.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.TapItemEventArgs.Position">
            <summary>
            Gets the position of the input position.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.BitmapSource">
            <summary>
            Provides a source object for properties that use a bitmap.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.BitmapSource.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Media.Imaging.BitmapSource class.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.BitmapSource.Texture">
            <summary>
            Gets a Texture2D.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.ControlBitmap">
            <summary>
            Provides a OpenXLive.Form.Media.ControlBitmap that contains the capture of a specifies control.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.ControlBitmap.#ctor(OpenXLive.Form.UIObject)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Media.ControlBitmap class using the provided ui object.
            </summary>
            <param name="ui">The UIObject to be rendered within the bitmap.</param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <exception cref="T:System.InvalidOperationException">ui have not loaded.</exception>
        </member>
        <member name="M:OpenXLive.Form.Media.ControlBitmap.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Media.ControlBitmap
            class using the provided dimensions.
            </summary>
            <param name="pixelWidth">The width of the bitmap.</param>
            <param name="pixelHeight">The height of the bitmap.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">pixelWidth or pixelHeight is zero or less.</exception>
        </member>
        <member name="F:OpenXLive.Form.Media.ControlBitmap._UI">
            <summary>
            The UIObject to be rendered within the bitmap.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.ControlBitmap._PixelWidth">
            <summary>
            The width of the bitmap.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.ControlBitmap._PixelHeight">
            <summary>
            The height of the bitmap.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.ControlBitmap.Invalidate">
            <summary>
            Requests a draw or redraw of the entire bitmap.
            </summary>
            <exception cref="T:System.InvalidOperationException">The ui object is invalid.</exception>
        </member>
        <member name="M:OpenXLive.Form.Media.ControlBitmap.Render(OpenXLive.Form.UIObject)">
            <summary>
            Renders a ui object within the bitmap.
            </summary>
            <param name="ui">The UIObject to be rendered within the bitmap.</param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
            <exception cref="T:System.InvalidOperationException">ui have not loaded.</exception>
        </member>
        <member name="T:OpenXLive.Form.Media.ImageCreateOptions">
            <summary>
            Specifies initialization options for a image source.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.ImageCreateOptions.None">
            <summary>
            No options are specified.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.ImageCreateOptions.DelayCreation">
            <summary>
            Causes a OpenXLive.Form.Media.ImageSource object to delay initialization
            until it is necessary. This is useful when dealing with collections of images.
            This is the default value of the OpenXLive.Form.Media.ImageSource.CreateOptions
            property.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.ImageCreateOptions.IgnoreImageCache">
            <summary>
            Loads images without using an existing image cache. This option should only
            be selected when images in a cache need to be refreshed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.ImageCreateOptions.BackgroundCreation">
            <summary>
            Causes object to delay initialization until it is necessary., uses image
            cache for same URIs, downloads images in background and decodes them in background.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.MessageTile">
            <summary>
            Providers methods to show a message tile on the top of the page.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTile.Clear">
            <summary>
            Clear message tile.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTile.Show(OpenXLive.Form.Media.FontFamily,System.String)">
            <summary>
            Show a message tile on the top of a page.
            </summary>
            <param name="fontFamily">The FontFamily.</param>
            <param name="message">The message on the tile.</param>
            <exception cref="T:System.ArgumentNullException">font is null.</exception>
            <returns>Return true, if the message tile shown; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.MessageTile.Show(OpenXLive.Form.Media.FontFamily,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Show a message tile on the top of a page.
            </summary>
            <param name="fontFamily">The FontFamily.</param>
            <param name="message">The message on the tile.</param>
            <param name="duration">The duration that will be shown.</param>
            <exception cref="T:System.ArgumentNullException">font is null.</exception>
            <returns>Return true, if the message tile shown; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.MessageTile.Show(OpenXLive.Form.Media.FontFamily,System.String,OpenXLive.Form.Media.BitmapSource)">
            <summary>
            Show a message tile on the top of a page.
            </summary>
            <param name="fontFamily">The FontFamily.</param>
            <param name="message">The message on the tile.</param>
            <param name="image">The image on the tile.</param>
            <exception cref="T:System.ArgumentNullException">font is null.</exception>
            <returns>Return true, if the message tile shown; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.MessageTile.Show(OpenXLive.Form.Media.FontFamily,System.String,OpenXLive.Form.MessageTileCallback,System.Object)">
            <summary>
            Show a message tile on the top of a page.
            </summary>
            <param name="fontFamily">The FontFamily.</param>
            <param name="message">The message on the tile.</param>
            <param name="callback">Method to be called once the message tile is closed.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null.</exception>
            <returns>Return true, if the message tile shown; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.MessageTile.Show(OpenXLive.Form.Media.FontFamily,System.String,OpenXLive.Form.Media.BitmapSource,OpenXLive.Form.MessageTileCallback,System.Object)">
            <summary>
            Show a message tile on the top of a page.
            </summary>
            <param name="fontFamily">The FontFamily.</param>
            <param name="message">The message on the tile.</param>
            <param name="image">The image on the tile.</param>
            <param name="callback">Method to be called once the message tile is closed.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null.</exception>
            <returns>Return true, if the message tile shown; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.MessageTile.Show(OpenXLive.Form.Media.FontFamily,System.String,OpenXLive.Form.Media.BitmapSource,System.Nullable{Microsoft.Xna.Framework.Color},System.Nullable{Microsoft.Xna.Framework.Color},System.Nullable{System.TimeSpan},OpenXLive.Form.MessageTileCallback,System.Object)">
            <summary>
            Show a message tile on the top of a page.
            </summary>
            <param name="fontFamily">The FontFamily.</param>
            <param name="message">The message on the tile.</param>
            <param name="image">The image on the tile.</param>
            <param name="background">The background of the tile.</param>
            <param name="foreground">The foreground of the tile.</param>
            <param name="duration">The duration that will be shown.</param>
            <param name="callback">Method to be called once the message tile is closed.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <exception cref="T:System.ArgumentNullException">font is null.</exception>
            <returns>Return true, if the message tile shown; otherwise, false.</returns>
        </member>
        <member name="T:OpenXLive.Form.MessageTileContainer">
            <summary>
            The container of a message title.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.#ctor(OpenXLive.Form.Media.FontFamily,System.String,System.Object)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.MessageTileContainer class with specifies message.
            </summary>
            <param name="fontFamily">The FontFamily.</param>
            <param name="message">The message.</param>
            <param name="state">User-created object uniquely identifying this request.</param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.#ctor(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Media.BitmapSource,System.String,System.Object,OpenXLive.Form.MessageTileCallback)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.MessageTileContainer class with specifies image and message.
            </summary>
            <param name="fontFamily">The FontFamily.</param>
            <param name="image">The image.</param>
            <param name="message">The message</param>
            <param name="state">User-created object uniquely identifying this request.</param>
            <param name="callback">Method to be called once the message tile is closed.</param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.InitializeContainer(OpenXLive.Form.Media.FontFamily,OpenXLive.Form.Media.BitmapSource,System.String)">
            <summary>
            Initialize the container.
            </summary>
            <param name="fontFamily">The FontFamily.</param>
            <param name="image"></param>
            <param name="messge"></param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.LoadedInternal">
            <summary>
            Fire loaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.UnloadedInternal">
            <summary>
            Fire unloaded event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.MessageTileContainer._State">
            <summary>
            Indicating the state of a message tile.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.MessageTileContainer._AsyncState">
            <summary>
            Indicating a user-defined object that qualifies or contains information.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.HandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample,System.Boolean@)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
            <param name="handledGesture"></param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.HandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation,System.Boolean@)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
            <param name="handledTouch"></param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.HitTest(System.Int32,System.Int32)">
            <summary>
            Gets a value that indicate whether the Visual rectangle contains the sprecifies point.
            </summary>
            <param name="x">x-coordinate.</param>
            <param name="y">y-coordiante.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.Validate">
            <summary>
            Validates whether the touch operation is valid currently.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.OnFlickCore(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Provides class handling for flick operation.
            </summary>
            <param name="gestureSample">The data for the gesture operation.</param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.OnTapCore(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Provides class handling for tap operation.
            </summary>
            <param name="gestureSample">The data for the gesture operation.</param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.RestoreState">
            <summary>
            Restores default state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.OnMovedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Moved.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.OnPressedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for pressed operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling for released operation.
            </summary>
            <param name="touchLocation">The data for the touch operation.</param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.RaiseClosedEvent">
            <summary>
            Fire closed event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.RaiseMessageTileCallback">
            <summary>
            Raise message tile callback.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.BeginShowAnimation">
            <summary>
            Show this message.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.BeginCloseAnimation">
            <summary>
            Close this message.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.Show">
            <summary>
            Show message tile.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.Close">
            <summary>
            Close this message tile.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when update status.
            </summary>
            <param name="gameTime">Time passed since the last call to Update.</param>
        </member>
        <member name="M:OpenXLive.Form.MessageTileContainer.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when this contorl draw itself.
            </summary>
            <param name="gameTime">Time passed since the last call to Draw.</param>
        </member>
        <member name="E:OpenXLive.Form.MessageTileContainer.Closed">
            <summary>
            Occurs when the message tile is closed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.MessageTileContainer.Background">
            <summary>
             Gets or sets a color that provides the background of the MessageTileContainer.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.MessageTileContainer.Foreground">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.MessageTileContainer.Duration">
            <summary>
            Gets or sets the duration of the message tile.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.MessageTileCallback">
            <summary>
            References a method to be called when a message tile is closed.
            </summary>
            <param name="result">The async result of the message tile.</param>
        </member>
        <member name="T:OpenXLive.Form.MessageTileAsyncResult">
            <summary>
            Represents the status of a message tile.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.MessageTileAsyncResult.#ctor(OpenXLive.Form.MessageTileState,System.Object)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.MessageTileAsyncResult class.
            </summary>
            <param name="asyncState">The user-defined object</param>
            <param name="state"></param>
        </member>
        <member name="P:OpenXLive.Form.MessageTileAsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.MessageTileAsyncResult.State">
            <summary>
            Gets the state of a message tile.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.MessageTileState">
            <summary>
            Providers a state of a message tile.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.MessageTileState.None">
            <summary>
            A message tile is closed automatically.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.MessageTileState.Tap">
            <summary>
            A message tile is closed by tap operation.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.MessageTileState.Flick">
            <summary>
            A message tile is closed by flick operation.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.BackEntryRemovedEventArgs">
            <summary>
            Provides data when removing back entries from the back navigation history.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.BackEntryRemovedEventArgs.#ctor(OpenXLive.Form.GamePage)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.BackEntryRemovedEventArgs class
            </summary>
            <param name="page"></param>
        </member>
        <member name="P:OpenXLive.Form.BackEntryRemovedEventArgs.Page">
            <summary>
            Gets the page of the target has been removed from the back stack.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.NavigatingCancelEventArgs">
            <summary>
            Provides data for the OpenXLive.Form.Page.OnNavigatingFrom(OpenXLive.Form.NavigatingCancelEventArgs)
            method and the OpenXLive.Form.NavigationService.Navigating event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigatingCancelEventArgs.#ctor(OpenXLive.Form.GamePage,OpenXLive.Form.GamePage,OpenXLive.Form.NavigationMode)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.NavigatingCancelEventArgs
            class, based on page.
            </summary>
            <param name="from">A page being navigated from.</param>
            <param name="to">A page being navigated to.</param>
            <param name="mode">A value that indicates the type of navigation that is occurring.</param>
        </member>
        <member name="P:OpenXLive.Form.NavigatingCancelEventArgs.To">
            <summary>
            Gets the page of the target being navigated to.
            This value will be null only if called OpenXLive.Form.NavigationService.Exit() successfully.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigatingCancelEventArgs.From">
            <summary>
            Gets the page of the target being navigated from.
            This value will be null only on the fist call to OpenXLive.Form.NavigationService.Navigate(OpenXLive.Form.Page).
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigatingCancelEventArgs.NavigationMode">
            <summary>
            Gets a value that indicates the type of navigation that is occurring.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.NavigationEventArgs">
            <summary>
            Provides data for navigation methods and event handlers that cannot cancel
            the navigation request.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationEventArgs.#ctor(OpenXLive.Form.GamePage,OpenXLive.Form.GamePage,OpenXLive.Form.NavigationMode)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.NavigationEventArgs
            class, based on page.
            </summary>
            <param name="from">A page has been navigated from.</param>
            <param name="to">A page has been navigated to.</param>
            <param name="mode">A value that indicates the type of navigation that is occurring.</param>
        </member>
        <member name="P:OpenXLive.Form.NavigationEventArgs.To">
            <summary>
            Gets the page of the target has been navigated to.
            This value will be null only if there is only one page in the back navigation history.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationEventArgs.From">
            <summary>
            Gets the page of the target has been navigated from.
            This value will be null only on the fist call to OpenXLive.Form.NavigationService.Navigate(OpenXLive.Form.Page).
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationEventArgs.NavigationMode">
            <summary>
            Gets a value that indicates the type of navigation that is occurring.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.NavigationMode">
            <summary>
            Specifies the type of navigation that is occurring.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.NavigationMode.New">
            <summary>
            Navigating to new page. This value is used when the OpenXLive.Form.NavigationService.Navigate(OpenXLive.Form.Page)
            method is called.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.NavigationMode.Back">
            <summary>
            Navigating to the most recent page in the back navigation history. This
            value is used when the OpenXLive.Form.NavigationService.GoBack()
            method is called.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.NavigationService">
            <summary>
            Provides methods, properties, and events to support navigate game page.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.NavigationService._PageService">
            <summary>
            The instance of PageService used to navigate game page.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.NavigationService._Component">
            <summary>
            The instance of NavigationComponent.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.NavigationService class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationService._PageService_Exited(System.Object,System.EventArgs)">
            <summary>
            Handling exited event for PageService.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.FireNavigatingEvent(OpenXLive.Form.NavigatingCancelEventArgs)">
            <summary>
            Raise Navigating event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.FireNavigatedEvent(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Raise Navigated event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.FireBackEntryRemovedEvent(OpenXLive.Form.BackEntryRemovedEventArgs)">
            <summary>
            Raise BackEntryRemoved event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.FireVisibleChangedEvent">
            <summary>
            Raise VisibleChanged event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Initialize(Microsoft.Xna.Framework.Game)">
            <summary>
            Initializes the NavigationService.
            </summary>
            <param name="game"></param>
            <exception cref="T:System.ArgumentNullException">game is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">cross-thread access.</exception>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Authenticate">
            <summary>
            Authenticate.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Current_Deactivated(System.Object,Microsoft.Phone.Shell.DeactivatedEventArgs)">
            <summary>
            Handling for PhoneApplicationService.Deactivated event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Current_Activated(System.Object,Microsoft.Phone.Shell.ActivatedEventArgs)">
            <summary>
            Handling for PhoneApplicationService.Activated event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:OpenXLive.Form.NavigationService._IsActivated">
            <summary>
            Indicating whether the Activated method has been called.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Activated(Microsoft.Phone.Shell.ActivatedEventArgs)">
            <summary>
            Activated navigation service.
            </summary>
            <remarks>This method is internal for compatibility with the old version for XLiveFormManager.</remarks>
            <param name="e"></param>
        </member>
        <member name="F:OpenXLive.Form.NavigationService._IsDeactivated">
            <summary>
            Indicating whether the Deactivated method has been called.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Deactivated(Microsoft.Phone.Shell.DeactivatedEventArgs)">
            <summary>
            Deactivated navigation service.
            </summary>
            <remarks>This method is internal for compatibility with the old version for XLiveFormManager.</remarks>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Window_OrientationChanged(System.Object,System.EventArgs)">
            <summary>
            Handling orientation changed event of a game window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:OpenXLive.Form.NavigationService._DeviceManager">
            <summary>
            The graphics device manager of current game.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.ComponentStrategy">
            <summary>
            Add component to the game if have not added.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Verify">
            <summary>
            Verifies the operation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.IsActivePage(OpenXLive.Form.GamePage)">
            <summary>
            Returns a value indicating whether the specified game page is the active page.
            </summary>
            <param name="page">The specified game page.</param>
            <returns>true if the specified game page is the active page; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Navigate(OpenXLive.Form.GamePage)">
            <summary>
            Navigates to the specifies game page.
            </summary>
            <param name="gamePage">The game page that will be shown.</param>
            <returns>Returns System.Boolean. True if navigate to the specefies page successfully; otherwise, false.</returns>
            <remarks>This method will set Visible to true.</remarks>
            <exception cref="T:System.InvalidOperationException">The NavigationService has not been initialized.</exception>
            <exception cref="T:System.ArgumentNullException">gamePage is null.</exception>
            <exception cref="T:System.InvalidOperationException">gamePage is closing or has been closed or has been shown.</exception>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.RemoveBackEntry">
            <summary>
            This method is used to remove the most recent entry from the back stack.
            If you want to remove more than one item, you call this method multiple times.
            </summary>
            <returns>true, remove success;false, there are no more entries to remove</returns>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.GoBack">
            <summary>
            Navigates to the most recent game page in the back navigation history, or throws
            an exception if no game page exists in back navigation.
            </summary>
            <exception cref="T:System.InvalidOperationException">no game page exists in back navigation.</exception>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Show">
            <summary>
            Show game page.
            </summary>
            <remarks>This method will set Visible to true.</remarks>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Hide">
            <summary>
            Hide game page and return game.
            </summary>
            <remarks>This method will set Visible to false.</remarks>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Capture(OpenXLive.Form.UIObject)">
            <summary>
            Capture a ui object.
            </summary>
            <param name="ui"></param>
            <exception cref="T:System.InvalidOperationException">The NavigationService has not been initialized.</exception>
            <exception cref="T:System.ArgumentNullException">ui is null.</exception>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.Capture(OpenXLive.Form.UIObject,System.Int32,System.Int32)">
            <summary>
            Capture a ui object.
            </summary>
            <param name="ui"></param>
            <param name="pixelWidth">The width of the capture result.</param>
            <param name="pixelHeight">The height of the capture result.</param>
            <exception cref="T:System.InvalidOperationException">The NavigationService has not been initialized.</exception>
            <exception cref="T:System.ArgumentNullException">ui is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">pixelWidth or pixelHeight is zero or less.</exception>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.ShowMessageTile(OpenXLive.Form.MessageTileContainer)">
            <summary>
            Show a message tile.
            </summary>
            <param name="messageTile">The message tile will be shown.</param>
            <exception cref="T:System.ArgumentNullException">messageTile is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.ClearMessageTile">
            <summary>
            Clear all the messge tile.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.ShowTemplateMessageBox(OpenXLive.Form.MessageBoxContainer,OpenXLive.Form.TemplateMessageBoxCallback)">
            <summary>
            Show a specifies template messagebox.
            </summary>
            <param name="templateMessageBox"></param>
            <param name="callback"></param>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.CloseContextMenu">
            <summary>
            Clear all the context menu.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationService.OpenContextMenu(OpenXLive.Form.Controls.ContextMenu)">
            <summary>
            Open a specifies a context menu.
            </summary>
            <param name="menu"></param>
        </member>
        <member name="E:OpenXLive.Form.NavigationService.BackEntryRemoved">
            <summary>
            This event is raised during a OpenXLive.Form.Page.RemoveBackEntry()
            operation or during a normal back navigation after the OpenXLive.Form.NavigationService.Navigated
            event has been raised.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.NavigationService.Navigating">
            <summary>
            Occurs when a new navigation is requested.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.NavigationService.Navigated">
            <summary>
            Occurs when the page that is being navigated to has been navigated.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.NavigationService.VisibleChanged">
            <summary>
            Occurs when the visible property has changed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.DeviceManager">
            <summary>
            Gets the graphics device manager of current game.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.SyncContext">
            <summary>
            Gest the Synchronization Context
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.CurrentOrientation">
            <summary>
            Gets the current display orientation, which reflects the physical orientation of the phone in the user's hand.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.Service">
            <summary>
            Gets the OpenXLive.Form.NavigationService object.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.Game">
            <summary>
            Gets the instance of the current game.
            </summary>
            <exception cref="T:System.InvalidOperationException">The NavigationService has not been initialized.</exception>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.Visible">
            <summary>
            Gets a value that indicates whether the game page is shown on the foreground.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.SpriteBatch">
            <summary>
            Gets the sprite batch of the OpenXLive.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.Dispatcher">
            <summary>
            Gets the OpenXLive.Form.Dispatcher.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.BackEntryCount">
            <summary>
            Gets the count of the game page in the back entry.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.CanGoBack">
            <summary>
            Gets a value that indicates whether there is at least one game page in the back
            navigation history.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.CurrentPage">
            <summary>
            Gets the active game page that is currently displyed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.NavigationService.IsInitialized">
            <summary>
            Gets a value that indicates wheter the NavigationService has Initialized.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.NavigationComponent">
            <summary>
            This is a game component that implements IUpdateable.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.#ctor(Microsoft.Xna.Framework.Game,OpenXLive.Form.PageService)">
            <summary>
            Initialize a new instance of OpenXLive.Form.Controls.NavigationComponent class.
            </summary>
            <param name="game"></param>
            <param name="pageService"></param>
        </member>
        <member name="F:OpenXLive.Form.NavigationComponent._IsExiting">
            <summary>
            Indicating current game is being exiting.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.NavigationComponent._CurrentMessageTile">
            <summary>
            The current message tile.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.ClearMessageTile">
            <summary>
            Clear the message tile.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.ShowMessageTile(OpenXLive.Form.MessageTileContainer)">
            <summary>
            Show message tile.
            </summary>
            <param name="messageTile"></param>
            <exception cref="T:System.ArgumentNullException">messageTile is null.</exception>
        </member>
        <member name="F:OpenXLive.Form.NavigationComponent._TemplateMessageBox">
            <summary>
            The current template message box.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.ClearTemplateMessageBox">
            <summary>
            Clear the message tile.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.ShowTemplateMessageBox(OpenXLive.Form.MessageBoxContainer,OpenXLive.Form.TemplateMessageBoxCallback)">
            <summary>
            Show template message box.
            </summary>
            <param name="templateMessageBox"></param>
            <param name="callback"></param>
            <exception cref="T:System.ArgumentNullException">templateMessageBox is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.RaiseTemplateMessageBoxCallback">
            <summary>
            Raise template message box callback.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.NavigationComponent._ContextMenu">
            <summary>
            The current context menu.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.CloseContextMenu">
            <summary>
            Close context menu.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.OpenContextMenu(OpenXLive.Form.Controls.ContextMenu)">
            <summary>
            Open a specifies context menu.
            </summary>
            <param name="menu">The ContextMenu that will be opend.</param>
            <exception cref="T:System.ArgumentNullException">menu is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.Capture(OpenXLive.Form.UIObject)">
            <summary>
            Capture a ui object.
            </summary>
            <param name="ui"></param>
            <exception cref="T:System.ArgumentNullException">ui is null.</exception>
            <exception cref="T:System.InvalidOperationException">ui have not loaded.</exception>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.Capture(OpenXLive.Form.UIObject,System.Int32,System.Int32)">
            <summary>
            Capture a ui object.
            </summary>
            <param name="ui"></param>
            <param name="pixelWidth">The width of the capture result.</param>
            <param name="pixelHeight">The height of the capture result.</param>
            <exception cref="T:System.ArgumentNullException">ui is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">pixelWidth or pixelHeight is zero or less.</exception>
            <exception cref="T:System.InvalidOperationException">ui have not loaded.</exception>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.OnVisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the Visible property changes. Raises the VisibleChanged event.
            </summary>
            <param name="sender">The DrawableGameComponent.</param>
            <param name="args">Arguments to the VisibleChanged event.</param>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.Initialize">
            <summary>
            Allows the game component to perform any initialization it needs to before starting
            to run.  This is where it can query for any required services and load content.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.NavigationComponent._ClearTouch">
            <summary>
            Indicating whether should clear touch history.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.NavigationComponent._ClearGesture">
            <summary>
            Inidcating whether should clear gesture history.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game component to update itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:OpenXLive.Form.NavigationComponent.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the game component to draw itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="T:OpenXLive.Form.PageActivatedEventArgs">
            <summary>
            Provides data for OpenXLive.Form.Controls.Page.Activated events.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageActivatedEventArgs.#ctor">
            <summary>
            Creates a new instance of the  OpenXLive.Form.Controls.PageActivatedEventArgs class.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.PageActivatedEventArgs.IsApplicationInstancePreserved">
            <summary>
            Indicates whether the application instance was preserved.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.PageDeactivatedEventArgs">
            <summary>
            Provides data for the OpenXLive.Form.Controls.Page.Deactivated event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageDeactivatedEventArgs.#ctor">
            <summary>
            Creates a new instance of the  OpenXLive.Form.Controls.PageDeactivatedEventArgs class.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.PageService">
            <summary>
             Provides a service used to navigate game page.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageService.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.PageService class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageService.FireExitedEvent">
            <summary>
            Raise exited event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageService.FireNavigatingEvent(OpenXLive.Form.NavigatingCancelEventArgs)">
            <summary>
            Raise Navigating event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.PageService.FireNavigatedEvent(OpenXLive.Form.NavigationEventArgs)">
            <summary>
            Raise Navigated event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.PageService.FireBackEntryRemovedEvent(OpenXLive.Form.BackEntryRemovedEventArgs)">
            <summary>
            Raise BackEntryRemoved event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.PageService.Activated(Microsoft.Phone.Shell.ActivatedEventArgs)">
            <summary>
            Called when the game is being made active.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.PageService.Deactivated(Microsoft.Phone.Shell.DeactivatedEventArgs)">
            <summary>
            Called when the game is being Deactivated.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenXLive.Form.PageService.HandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Handle user gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.PageService.HandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Handle touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.PageService.BackKeyPress">
            <summary>
            Called when back key press.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.PageService._BackStack">
            <summary>
            The stack of instances of game page.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageService.LoadedActivePage">
            <summary>
            Raise loaded event of current active page.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageService.UnloadedActivePage">
            <summary>
            Raise unloaded event of current active page.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageService.IsActivePage(OpenXLive.Form.GamePage)">
            <summary>
            Returns a value indicating whether the specified game page is the active page.
            </summary>
            <param name="page">The specified game page.</param>
            <returns>true if the specified game page is the active page; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.PageService.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the service to update itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:OpenXLive.Form.PageService.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Allows the service to draw itself.
            </summary>
            <param name="gameTime">Provides a snapshot of timing values.</param>
        </member>
        <member name="M:OpenXLive.Form.PageService.Navigate(OpenXLive.Form.GamePage)">
            <summary>
            Navigates to the specifies game page.
            </summary>
            <param name="gamePage">The game page that will be shown.</param>
            <returns>Returns System.Boolean. True if navigate to the specefies page successfully; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">gamePage is null.</exception>
            <exception cref="T:System.InvalidOperationException">gamePage is closing or has been closed or has been shown.</exception>
        </member>
        <member name="M:OpenXLive.Form.PageService.RemoveBackEntry">
            <summary>
            This method is used to remove the most recent entry from the back stack.
            If you want to remove more than one item, you call this method multiple times.
            </summary>
            <returns>true, remove success;false, there are no more entries to remove</returns>
        </member>
        <member name="M:OpenXLive.Form.PageService.GoBack">
            <summary>
            Navigates to the most recent game page in the back navigation history, or throws
            an exception if no game page exists in back navigation.
            </summary>
            <exception cref="T:System.InvalidOperationException">no game page exists in back navigation.</exception>
        </member>
        <member name="M:OpenXLive.Form.PageService.CloseCurrentPage">
            <summary>
            Close current game page.
            </summary>
            <returns>true: closed; false: user canceled or there is no page.</returns>
        </member>
        <member name="F:OpenXLive.Form.PageService._DeviceParameters">
            <summary>
            The parameters of current game.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageService.ReserveGameParameters">
            <summary>
            Reserve the parameters of current game.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageService.RestoreGameParemeters">
            <summary>
            Restore the paremeters of current game.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageService.SetGraphics">
            <summary>
            Set graphic device to support specifies orientations of a page.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PageService.OrientationChange(OpenXLive.Form.OrientationChangedEventArgs)">
            <summary>
            Called when the display orientation changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:OpenXLive.Form.PageService.Exited">
            <summary>
            Occurs when all the page have been closed.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.PageService.BackEntryRemoved">
            <summary>
            This event is raised during a OpenXLive.Form.Page.RemoveBackEntry()
            operation or during a normal back navigation after the OpenXLive.Form.NavigationService.Navigated
            event has been raised.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.PageService.Navigating">
            <summary>
            Occurs when a new navigation is requested.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.PageService.Navigated">
            <summary>
            Occurs when the page that is being navigated to has been navigated.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.PageService.CurrentPage">
            <summary>
            Gets the game page that is currently displyed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.PageService.BackEntryCount">
            <summary>
            Gets the count of the game page in the back entry.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.PageService.CanGoBack">
            <summary>
            Gets a value that indicates whether there is at least one game page in the back
            navigation history.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.PageService.DeviceManager">
            <summary>
            Gets or sets the graphics device manager of the current game.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.PageService.DeviceManagerParameters">
            <summary>
            Contains parameters of graphics device manager of current game.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.PageService.DeviceManagerParameters.DefaultGestures">
            <summary>
            The supported gesture of page.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.PageService.DeviceManagerParameters.IsFullScreen">
            <summary>
            Gets or sets a value that indicates whether the device should start in full-screen mode.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.PageService.DeviceManagerParameters.PreferredBackBufferHeight">
            <summary>
            Gets or sets the preferred back-buffer height.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.PageService.DeviceManagerParameters.PreferredBackBufferWidth">
            <summary>
            Gets or sets the preferred back-buffer width.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.PageService.DeviceManagerParameters.SupportedOrientations">
            <summary>
            Gets or sets the display orientations that are available if automatic rotation and scaling is enabled.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.PageService.DeviceManagerParameters.EnabledGestures">
            <summary>
            Gets or sets the gestures that are enabled for the touch panel.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Panorama">
            <summary>
            Specifies a panoramic view of items that can be panned side-to-side.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama.TitleFontSize">
            <summary>
            The font size of the title of the panorama.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama.HeaderFontSize">
            <summary>
            The font size of the header of the panorama item.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama.ItemOutcrop">
            <summary>
            The outcrop of a panorama item.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama.ItemMargin">
            <summary>
            The margin of each panorama item.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama.LeftMargin">
            <summary>
            The left margin of the Panorama header.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama.TopMarin">
            <summary>
            The top margin of the Panorama.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama.ItemChildrenTopOffset">
            <summary>
            The distance to the top.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama.MiniBackgroundOffsetPerFlick">
            <summary>
            The minimum offset of the background when flick the panorama.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama.MaxBackgroundOffsetPerFlick">
            <summary>
            The maximum offset of the background when flick the panorama.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.#ctor">
            <summary>
            Initializes a new instance of the Panorama class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.DisableOtherItemInput">
            <summary>
            Disable IsInputVisible for other item.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.OnVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetItemsEnabledCore(System.Boolean)">
            <summary>
            Sets IsEnabledCore property of all the PanoramaItem.
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetItemsVisibleCore(System.Boolean)">
            <summary>
            Sets VisibleCore property of all the PanoramaItem.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetItemsInputVisibleCore(System.Boolean)">
            <summary>
            Sets IsInputVisibleCore property of all the PanoramaItem.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._BackgroundAnimation">
            <summary>
            A animation used to animate background.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._ItemAnimation">
            <summary>
            A animation used to animate PanoramaItem.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._BackgroundOffsetPerFlick">
            <summary>
            Indicates the background offset when flick the panorama.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._BackgroundOffset">
            <summary>
            Indicates the horizontal offset of the background.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._PreviousIndex">
            <summary>
            Previous selected index.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._ItemViewport">
            <summary>
            Indicates the content viewport of each PanoramaItem.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._TouchIsValid">
            <summary>
            Gets a value that indicates wheter the touch operation is valid.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._IsTouchAndMoved">
            <summary>
            Gets a value that indicates whether touch the control and finger moved.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._CurrentHeaderHorizontalOffset">
            <summary>
            The horizontal offset in current horizontal drap operation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.ReleaseTouchOperation">
            <summary>
            Invalid touch operation and begin animation.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._AnimateItem">
            <summary>
            The PanoramaItem that is being animated.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._LeftAnimateItem">
            <summary>
            The PanoramaItem left side of _AnimateItem.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._RightAnimateItem">
            <summary>
            The PanoramaItem right side of _AnimateItem.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.UpdateAnimation(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the animation.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.UpdateItem(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updatas PanoramaItem.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetAnimateItem">
            <summary>
            Sets the panorama item that will be drawn in the screen.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._OrderChanged">
            <summary>
            Indicates whether the order has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.ChangeAnimateItemOrder">
            <summary>
            Changes order.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetLeftDrawIndex">
            <summary>
            Sets the index of PivotItem collection that will be drown on the left screen.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetItemFontFamily">
            <summary>
            Sets the FontFamily for each pivot item.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetItemHeaderRect">
            <summary>
            Sets the position and size information of eache PivotItem.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._ItemScrollStaste">
            <summary>
            Indicates the PanoramaItem scrolling state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.BeginRestoreItemAnimation">
            <summary>
            Animates current item to the initial position.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.BeginItemAnimation(System.Single,System.Single)">
            <summary>
            Begins PivotItem animation.
            </summary>
            <param name="from">Starting value</param>
            <param name="to">Ending value</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.BeginRestoreBackgroundAnimation">
            <summary>
            Animates background to the initial position.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.BeginLeftToRightBackgroundAnimation">
            <summary>
            Begins background animation from left to right.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.BeginRightToLeftBackgroundAnimation">
            <summary>
            Begins background animation from right to left.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._ItemsOffset">
            <summary>
            Indicates the horizontal offset of the PanoramaItem.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.DrawBackground(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws background.
            </summary>
            <param name="visualRect"></param>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.DrawItem(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws PanoramaItem.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._TitleCharElements">
            <summary>
            Indicates the char element list of the title.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetTitleCharElements">
            <summary>
            Sets the char elements of title.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._LeftDrawIndex">
            <summary>
            The index of PanoramaItem collection that will be drown on the left screen.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.TryGetLeftIndex(System.Int32,System.Int32@)">
            <summary>
            Gets the left index.
            </summary>
            <param name="refIndex"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.TryGetRightIndex(System.Int32,System.Int32@)">
            <summary>
            Gets the right index.
            </summary>
            <param name="refIndex"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.ValidatePanoramaItemIndex(System.Int32)">
            <summary>
            Validate the index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.Validate">
            <summary>
            Validates whether the touch operation is valid currently.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.GetTouchedIndex(System.Int32,System.Int32)">
            <summary>
            Gets touched index of PanoramaItem collection.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._SelectedChanged2">
            <summary>
            Indicates whether the selected item has changed.
            This field is use to adjust background animation.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Panorama._SelectedChanged">
            <summary>
            Indicates whether the selected item has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetSelectedIndex(System.Int32)">
            <summary>
            Sets the selected index in PanoramaItem collection.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetSelectedItem(OpenXLive.Form.Controls.PanoramaItem)">
            <summary>
            Sets the selected PanoramaItem.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.ManualChangeSelectedIndexStrategy">
            <summary>
            When selected index changed manually, upadate panorama. 
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.OnSelectionChanged(System.Int32,System.Int32)">
            <summary>
            Raise SelectionChanged event.
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetBackgroundRects">
            <summary>
            Sets the rectangle of background.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetBackgroundFlickOffset">
            <summary>
            Sets the background flick offset.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.SetItemViewport">
            <summary>
            Sets the viewport of PanoramaItem.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.Panorama has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Panorama.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="E:OpenXLive.Form.Controls.Panorama.SelectionChanged">
            <summary>
            Occurs when the currently selected item changes.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Panorama.FontFamily">
            <summary>
            Gets or sets a FontFamily.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Panorama.Background">
            <summary>
             Gets or sets a texture2D that provides the background of the Panorama.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Panorama.BackgroundLayerOpacity">
            <summary>
            Gets or sets the opacity of the layer on the background.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Panorama.Title">
            <summary>
            Gets or sets the title to be optionally set above the headers.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Panorama.SelectedIndex">
            <summary>
            Gets or sets the index of the selected  PanoramaItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Panorama.SelectedItem">
            <summary>
            Gets or sets the selected PanoramaItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Panorama.Items">
            <summary>
            Gets the collection of PanoramaItem of the Pivot.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Panorama.ItemViewport">
            <summary>
            Gets the viewport of each PanoramaItem.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.PanoramaItem">
            <summary>
            Represents an item in a Panorama control.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.#ctor">
            <summary>
            Initializes a new instance of the PanoramaItem class.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PanoramaItem._CanAdjustSize">
            <summary>
            Indicates whether can adjust the sizeRect.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PanoramaItem._HeaderContent">
            <summary>
            Indicates the content of header.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.GetHeaderContent">
            <summary>
            Gets content of header.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.AdjustSize">
            <summary>
            Adjust the size of panoramaitem.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.AdjustTransform">
            <summary>
            Ajust the translate transform value.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.OnHeightChanging(System.Single)">
            <summary>
            Called when height property is changing.
            </summary>
            <param name="newValue">The new height.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.OnWidthChanging(System.Single)">
            <summary>
            Called when width property is changing.
            </summary>
            <param name="newValue">The new width.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.OnPositionChanging(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Called when position property is changing.
            </summary>
            <param name="newPosition">The new position.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.OnTanslateTransformChanging(System.Single,System.Single)">
            <summary>
            Called when translate transform property is changing.
            </summary>
            <param name="x">the distance to translate along the x-axis</param>
            <param name="y">The distance to translate along the y-axis</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates PanoramaItem control.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.UpdateHeader(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Draw header
            </summary>
            <param name="gameTime"></param>
            <param name="viewport"></param>
            <param name="position"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws PanoramaItem control.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PanoramaItem.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PanoramaItem class.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="P:OpenXLive.Form.Controls.PanoramaItem.Offset">
            <summary>
            Gets or sets the offset of PanoramaItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PanoramaItem.ItemVisualRectangle">
            <summary>
            Gets or sets the visual rectangle of PanoramaItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PanoramaItem.OriginalHeaderViewport">
            <summary>
            Gets or sets the original header viewport of PanoramaItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PanoramaItem.CurrentHeaderViewport">
            <summary>
            Gets or sets the current header viewport of PanoramaItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PanoramaItem.FontFamily">
            <summary>
            Gets or sets a FontFamily.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PanoramaItem.Header">
            <summary>
            Gets or sets the header for the PanoramaItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PanoramaItem.HeaderTemplate">
            <summary>
            Gets or sets the template for the Header property.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.DefaultPanoramaItemHeaderTemplate">
            <summary>
            The default data template of panorama item.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.DefaultPanoramaItemHeaderTemplate.LoadContentOverride(System.Object)">
            <summary>
            Creates the OpenXLive.Form.Controls.Control objects in the OpenXLive.Form.Controls.DataTemplate.
            </summary>
            <param name="dataContext">The data context of the template.</param>
            <returns>The root OpenXLive.Form.Controls.Control of the OpenXLive.Form.Controls.DataTemplate.</returns>
        </member>
        <member name="T:OpenXLive.Form.Controls.PanoramaItemScrollState">
            <summary>
            PanoramaItem  scroll state.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PanoramaItemScrollState.Restore">
            <summary>
            Animates to the initial position.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PanoramaItemScrollState.LeftToRight">
            <summary>
            From left to right.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PanoramaItemScrollState.RightToLeft">
            <summary>
            From right to left.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.PasswordBox">
            <summary>
            Represents a control for entering passwords.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.PasswordBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.InitializesDefaultProperty">
            <summary>
            Initializes the default property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.LoadPasswordChar(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Load password char texture with specifies GraphicsDevice;
            </summary>
            <param name="graphicDevice">The GraphicsDevice.</param>
        </member>
        <member name="F:OpenXLive.Form.Controls.PasswordBox._ActualPasswordCharScale">
            <summary>
            Indicate the scale of password char texture.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PasswordBox._PasswordCharMargin">
            <summary>
            Indicates the margin of password char.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PasswordBox._PassworLenght">
            <summary>
            Indicates the lenght of password.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.FirePasswordChangedEvent(System.String,System.String)">
            <summary>
            Raise PasswordChanged event.
            </summary>
            <param name="oldValue">The old text,</param>
            <param name="newValue">The new text.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.PasswordBox._IsPressed">
            <summary>
            Gets a value that indicates whether a OpenXLive.Form.Controls.PasswordBox
            is currently in a pressed state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.RestoreState">
            <summary>
            Restores default state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Released.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnMovedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Moved.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnTouchDown(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.PasswordBox.TouchDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.Focus">
            <summary>
            Attempts to set the focus on the OpenXLive.From.Controls.PasswordBox and display the software keyboard.
            </summary>
            <returns>
            true if focus was set to the OpenXLive.From.Controls.PasswordBox, or focus was already on the control.
            false if the OpenXLive.From.Controls.PasswordBox is not focusable.
            </returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.BeginShowKeyboardInput">
            <summary>
            Begins show keyboard input dialog box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.InputCallback(System.IAsyncResult)">
            <summary>
            Handles result of input.
            </summary>
            <param name="resutl"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnPasswordInput">
            <summary>
            Called before the OpenXLive.Form.Controls.PassworBox.TextInput event occurs.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnBackgroundChanged">
            <summary>
            Called when Background property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnBorderBrushChanged">
            <summary>
            Called when BorderBrush property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnBorderThicknessChanged">
            <summary>
            Called when BorderThickness property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnHeightChanged">
            <summary>
            Called when height property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.PasswordBox has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.TipsVisibleStrategy">
            <summary>
            Sets tips text visible.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.UpdateProperty">
            <summary>
            Updates inner control property.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PasswordBox._VisualRect">
            <summary>
            Indicates the visual rectangle of PassworBox.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PasswordBox._TipsVisible">
            <summary>
            Indicates whether the tips text is visible.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws PsswordBox.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.PasswordBox.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="E:OpenXLive.Form.Controls.PasswordBox.PasswordInput">
            <summary>
            Occurs when begin to input password.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.PasswordBox.PasswordChanged">
            <summary>
            Occurs when password changes in the passowrd box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PasswordBox.PressedBorderBrush">
            <summary>
            Gets or sets the border color when pressed. The default value is Color.White.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PasswordBox.PressedBackground">
            <summary>
            Gets or sets the background when pressed. The default value is Color.White.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PasswordBox.TipsForeground">
            <summary>
            Gets or sets the color of tips text.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PasswordBox.Tips">
            <summary>
            Gets or sets the tips of the PsswordBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PasswordBox.KeyboardTitle">
            <summary>
            Gets or sets the title of keyboard input dialog box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PasswordBox.KeyboardDescription">
            <summary>
            Gets or sets the description of keyboard input dialog box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PasswordBox.FontFamily">
            <summary>
            Gets or sets the FontFamily for the OpenXLive.Form.Controls.PasswordBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PasswordBox.FontSize">
            <summary>
            Gets or sets the size of the text in this PassowrdBox. The defualt value is 25 (in pixels).
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.PasswordBox.TipsFontSize">
            <summary>
            Gets or sets the size of the tips text in this PassowrdBox. The defualt value is 25 (in pixels).
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.PasswordBox.Password">
            <summary>
            Gets or sets the text contents of a OpenXLive.Form.Controls.PasswordBox.
            </summary>
            <exception cref="T:System.ArgumentNullException">Text is set to null.</exception>
        </member>
        <member name="T:OpenXLive.Form.Controls.HeaderScrollState">
            <summary>
            Pivot header scroll state.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.HeaderScrollState.LeftToRight">
            <summary>
            From left to right.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.HeaderScrollState.RightToLeft">
            <summary>
            From right to left.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.PivotItemScrollState">
            <summary>
            PivotItem scroll state.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PivotItemScrollState.Restore">
            <summary>
            Animates to the initial position.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PivotItemScrollState.LeftToRight">
            <summary>
            From left to right.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PivotItemScrollState.RightToLeft">
            <summary>
            From right to left.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Pivot">
            <summary>
            The Pivot control provides a quick way to manage the views.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot.TitleFontSize">
            <summary>
            The font size of the title of the pivot.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot.HeaderFontSize">
            <summary>
            The font size of the header of the pivot item.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot.LeftMargin">
            <summary>
            The left margin of the Pivot.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot.TopMarin">
            <summary>
            The top margin of the Pivot.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot.UnselectedItemOpacity">
            <summary>
            The header opacity of unselected PivotItem.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot.ItemChildrenTopOffset">
            <summary>
            The distance to the top.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.#ctor">
            <summary>
            Initializes a new instance of Pivot class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.DisableOtherItemInput">
            <summary>
            Disable IsInputVisibleCore for other item.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.OnVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.SetItemsEnabledCore(System.Boolean)">
            <summary>
            Sets IsEnabledCore property of all the PivotItem.
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.SetItemsVisibleCore(System.Boolean)">
            <summary>
            Sets VisibleCore property of all the PivotItem.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.SetItemsInputVisibleCore(System.Boolean)">
            <summary>
            Sets IsInputVisibleCore property of all the PivotItem.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._HeaderOpacityAnimation">
            <summary>
            A animation used to animate header opacity.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._HeaderAnimation">
            <summary>
            A animation used to aniamte header.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._ItemAnimation">
            <summary>
            A animation used to animate PivotItem.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._PreviousIndex">
            <summary>
            Previous selected index.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._SelectedChanged">
            <summary>
            Indicates whether the selected item has changed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._TouchIsValid">
            <summary>
            Gets a value that indicates wheter the touch operation is valid.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._IsTouchAndMoved">
            <summary>
            Gets a value that indicates whether touch the control and finger moved.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._CurrentHeaderHorizontalOffset">
            <summary>
            The horizontal offset in current horizontal drap operation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.ReleaseTouchOperation">
            <summary>
            Invalid touch operation and begin animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.Validate">
            <summary>
            Validates whether the touch operation is valid currently.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.GetTouchedIndex(System.Int32,System.Int32)">
            <summary>
            Gets touched index of PivotItem collection.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.BeginHeaderRightToLeftAnimation">
            <summary>
            Begins header animation from right to left.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.BeginHeaderLeftToRightAnimation">
            <summary>
            Begins header animation from left to right.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.BeginRestoreItemAnimation">
            <summary>
            Animates current item to the initial position.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.BeginItemAnimation(System.Single,System.Single)">
            <summary>
            Begins PivotItem animation.
            </summary>
            <param name="from">Starting value</param>
            <param name="to">Ending value</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.TryGetLeftIndex(System.Int32@)">
            <summary>
            Gets the left index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.TryGetRightIndex(System.Int32@)">
            <summary>
            Gets the right index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._AnimateItem">
            <summary>
            The PivotItem that is being animated.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._HeaderScrollState">
            <summary>
            Indicates the header scrolling state.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._ItemScrollStaste">
            <summary>
            Indicates the PivotItem scrolling state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.UpdateHeaderAnimation(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the header animation.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.UpdateItemAnimation(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the PivotItem animation.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.UpdateItem(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updatas PivotItem.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.SetItemHeaderRect">
            <summary>
            Sets the position and size information of eache PivotItem.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._HeadersOffset">
            <summary>
            Indicates the horizontal offset of the headers.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._ItemsOffset">
            <summary>
            Indicates the horizontal offset of the PivotItem.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.DrawItem(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws PivotItem.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._LastItemOpacity">
            <summary>
            Opacity of the last right item.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._HideRightSelectedItem">
            <summary>
            Indicates whether hide the selected item in the right side.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._LeftDrawIndex">
            <summary>
            The index of PivotItem collection that will be drown on the left screen.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.SetLeftDrawIndex">
            <summary>
            Sets the index of PivotItem collection that will be drown on the left screen.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.SetItemFontFamily">
            <summary>
            Sets the FontFamily for each pivot item.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Pivot._TitleCharElements">
            <summary>
            Indicates the char element list of the title.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.SetTitleCharElements">
            <summary>
            Sets the char elements of title.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.DrawTitle(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draw title.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.ValidatePivotItemIndex(System.Int32)">
            <summary>
            Validate the index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.SetSelectedIndex(System.Int32)">
            <summary>
            Sets the selected index in PivotItem collection.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.SetSelectedItem(OpenXLive.Form.Controls.PivotItem)">
            <summary>
            Sets the selected PivotItem.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.ManualChangeSelectedIndexStrategy">
            <summary>
            When selected index changed manually, upadate pivot. 
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.GetLeftInterval">
            <summary>
            Gets the interval form right to left between previous index and selected index.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.GetRightInterval">
            <summary>
            Gets the interval form left to right between previous index and selected index.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.OnSelectionChanged(System.Int32,System.Int32)">
            <summary>
            Raise SelectionChanged event.
            </summary>
            <param name="newIndex"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.SetItemViewport">
            <summary>
            Sets the viewport of eatch PivotItem.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.Pivot has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Pivot.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="E:OpenXLive.Form.Controls.Pivot.SelectionChanged">
            <summary>
            Occurs when the currently selected item changes.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Pivot.FontFamily">
            <summary>
            Gets or sets a FontFamily.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Pivot.Title">
            <summary>
            Gets or sets the title to be optionally set above the headers.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Pivot.SelectedIndex">
            <summary>
            Gets or sets the index of the selected  PivotItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Pivot.SelectedItem">
            <summary>
            Gets or sets the selected PivotItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Pivot.Items">
            <summary>
            Gets the collection of PivotItem of the Pivot.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.Pivot.ItemViewport">
            <summary>
            Gets the viewport of each PivotItem.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.PivotItem">
            <summary>
            PivotItem is the container for items in the Pivot control.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PivotItem.#ctor">
            <summary>
            Initializes a new instance of the PivotItem.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.PivotItem._CanAdjustSize">
            <summary>
            Indicates whether can adjust the sizeRect.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PivotItem.SetHeaderCharElements">
            <summary>
            Sets the char element list.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PivotItem.AdjustSize">
            <summary>
            Adjust the size of panoramaitem.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PivotItem.AdjustTransform">
            <summary>
            Ajust the translate transform value.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.PivotItem.OnHeightChanging(System.Single)">
            <summary>
            Called when height property is changing.
            </summary>
            <param name="newValue">The new height.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.PivotItem.OnWidthChanging(System.Single)">
            <summary>
            Called when width property is changing.
            </summary>
            <param name="newValue">The new width.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.PivotItem.OnPositionChanging(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Called when position property is changing.
            </summary>
            <param name="newPosition">The new position.</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.PivotItem.OnTanslateTransformChanging(System.Single,System.Single)">
            <summary>
            Called when translate transform property is changing.
            </summary>
            <param name="x">the distance to translate along the x-axis</param>
            <param name="y">The distance to translate along the y-axis</param>
            <returns>A return value indicating whether the new value should be applied.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.PivotItem.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the PivotItem class.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; 
            false to release only unmanaged resources.
            </param>
        </member>
        <member name="P:OpenXLive.Form.Controls.PivotItem.Offset">
            <summary>
            Gets or sets the offset of PivotItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PivotItem.ItemVisualRectangle">
            <summary>
            Gets or sets the visual rectangle of PivotItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PivotItem.OriginalHeaderRect">
            <summary>
            Gets or sets the original position and size information of PivotItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PivotItem.CurrentHeaderRect">
            <summary>
            Gets or sets the current position and size information of PivotItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PivotItem.FontFamily">
            <summary>
            Gets or sets a FontFamily.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PivotItem.Header">
            <summary>
            Gets or sets the header for the PivotItem.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PivotItem.HeaderSize">
            <summary>
            Gets the size of the header text.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.PivotItem.HeaderCharElements">
            <summary>
            Gets the char element list.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Primitives.RangeBase">
            <summary>
            Represents an control that has a value within a specific range, such as the OpenXLive.Form.Controls.ProgressBar.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.RangeBase.#ctor">
            <summary>
            Initializes a new instance of RangeBase class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.RangeBase.OnMaximumChanged(System.Single,System.Single)">
            <summary>
            Called when the RangeBase.Maximum property changes.
            </summary>
            <param name="oldMaximum">Old value of the RangeBase.Maximum property.</param>
            <param name="newMaximum">New value of the RangeBase.Maximum property.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.RangeBase.OnMinimumChanged(System.Single,System.Single)">
            <summary>
            Called when the RangeBase.Minimum property changes.
            </summary>
            <param name="oldMinimum">Old value of the RangeBase.Minimum property.</param>
            <param name="newMinimum">New value of the RangeBase.Minimum property.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.Primitives.RangeBase.OnValueChanged(System.Single,System.Single)">
            <summary>
            Raises the RangeBase.ValueChanged routed event.
            </summary>
            <param name="oldValue">Old value of the RangeBase.Value property.</param>
            <param name="newValue">New value of the RangeBase.Value property.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.RangeBase.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the Value of a RangeBase control. The default value is 1.
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, less than zero,  or System.Float.IsInfinity(System.Float) is true.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.RangeBase.Maximum">
            <summary>
            Gets or sets the highest possible RangeBase.Value of the range control. The dedault value is 1.
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or System.Float.IsInfinity(System.Float) is true.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.RangeBase.Minimum">
            <summary>
            Gets or sets the RangeBase.Minimum possible Value of the range element. The default value is 0.
            </summary>    
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or System.Float.IsInfinity(System.Float) is true.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.RangeBase.SmallChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the Value of a RangeBase control. The default value is 0.1.
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, less than zero, or System.Float.IsInfinity(System.Float) is true. </exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.Primitives.RangeBase.Value">
            <summary>
            Gets or sets the current setting of the range control, which may be coerced.
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or System.Float.IsInfinity(System.Float) is true.</exception>
        </member>
        <member name="E:OpenXLive.Form.Controls.Primitives.RangeBase.ValueChanged">
            <summary>
            Occurs when the range value changes.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.RadioButton">
            <summary>
            Represents a button that allows a user to select a single option from a group of options.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.RadioButton.CheckAreaSize">
            <summary>
            Indicates the size of the check area.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.RadioButton.ContentLeftMargin">
            <summary>
            Indicates the left margin of the content.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.RadioButton.CheckedScale">
            <summary>
            Indicates the check icon scale when checked.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.Register(System.String,OpenXLive.Form.Controls.RadioButton)">
            <summary>
            Register the radio button to the groups.
            </summary>
            <param name="groupName"></param>
            <param name="radioButton"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.Unregister(OpenXLive.Form.Controls.RadioButton)">
            <summary>
            Unregister the radio button from the groups.
            </summary>
            <param name="radioButton"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.PurgeDead(OpenXLive.Form.Controls.RadioButton)">
            <summary>
            Purges dead radio button or specifies radio button.
            </summary>
            <param name="radioButton"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.UpdateGroups">
            <summary>
            Updates groups.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.Uncheck">
            <summary>
            Uncheck radio button.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.RadioButton class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.LoadRadioIcon(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Load check icon texture with specifies GraphicsDevice;
            </summary>
            <param name="graphicsDevice">The GraphicsDevice.</param>
        </member>
        <member name="F:OpenXLive.Form.Controls.RadioButton._CheckIconPosition">
            <summary>
            Indicates the draw position of check icon.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.RadioButton._CheckBackPosition">
            <summary>
            Indicates the draw postion of background.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.RadioButton has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.UpdateContent">
            <summary>
            Updates the content.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.RadioButton._LineSize">
            <summary>
            Indicates the size of a line in the checkbox.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.ComputeLineSize">
            <summary>
            Computes the size of a line.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.OnFontFamilyChanged">
            <summary>
            Called when Font property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.OnFontSizeChanged">
            <summary>
            Called when FontSize property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.OnContentChanged(System.String,System.String)">
            <summary>
            Called when the value of the Content property changes.
            </summary>
            <param name="oldContent">The old value of the Content property.</param>
            <param name="newContent">The new value of the Content property.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.OnPressStateChanged">
            <summary>
            Called when IsPressed property is changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.UpdateProperty">
            <summary>
            Updates property.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.OnClick">
            <summary>
            Occurs when the OpenXLive.Form.Controls.RadioButton is clicked.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.OnToggle">
            <summary>
            Toggle the value of IsChecked property.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.RadioButton._VisualRect">
            <summary>
            Indicates the visual rectangle of RadioButton.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates ChckeBox.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws CheckBox.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.RadioButton.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.RadioButton.GroupName">
            <summary>
            Gets or sets the name that specifies which OpenXLive.Form.Controls.RadioButton 
            controls are mutually exclusive.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.RadioButton.TextTrimming">
            <summary>
            One of the OpenXLive.Form.Controls.TextTrimming values that specifies the text trimming
            behavior to employ. The default is OpenXLive.Form.Controls.TextTrimming.None.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.RadioButton.TextWrapping">
            <summary>
            Gets or sets how the OpenXLive.Form.Controls.RadioButton wraps text. The default value is TextWrapping.Wrap.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.RadioButton.PressedBackground">
            <summary>
            Gets or sets the background when pressed. The default value is Color.White.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.RadioButton.Background">
            <summary>
             Gets or sets a color that provides the background of the checkbox.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.RadioButton.IconColor">
            <summary>
            Gets or sets the color of the icon.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.RadioButton.GroupItem.WeakRef">
            <summary>
            Gets the weak reference of RadioButton.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.RadioButton.GroupItem.GroupName">
            <summary>
            Gets the group name of the RadioButton.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ScrollViewer">
            <summary>
            Represents a scrollable area that can contain other visible controls.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.ScrollViewer class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.OnVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.InputHandleStartegy">
            <summary>
            Sets strategy for input event handling.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.StopScrollMonitor">
            <summary>
            Stops scroll monitor.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.StartScrollMonitor">
            <summary>
            Starts scroll monitor.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._IsReleased">
            <summary>
            Indicates whether the touch operation is released.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._Offset">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._VisualRect">
            <summary>
            Indicates the visual rectangle of ScrollViewer.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.Update(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Update all the children.
            </summary>
            <param name="gameTime"></param>
            <param name="offset">The translate offset of all the children.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws ScrollViewer.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._HideOrShowScrollBarDuration">
            <summary>
            The duration time when the opacity of vertical scrollbar from 100 to 0 or 0 to 100.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._BeginHideVerticalBar">
            <summary>
            Indicate whether hide vertical scrollbar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._BeginShowVerticalBar">
            <summary>
            Indicate whehter show verical scrollbar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._LastVerticalOffset">
            <summary>
            The previous VericalOffset of ScrollMonitor.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._VerticalScrollBarOpacity">
            <summary>
            Indicates the opacity of vertical scrollbar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._IsVerticalScrollBarVisible">
            <summary>
            Indicates whether the scrollbar is visible.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._ScrollBarVerticalOffset">
            <summary>
            Indicates the vertical offset of vertical scrollbar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._VerticalScrollBarHeight">
            <summary>
            Indicates the height of vertical scrollbar.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.UpdateVerticalScrollBar(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates vertical scroll bar.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.DrawVerticalScrollBar">
            <summary>
            Draw vertical ScrollBar,
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._BeginHideHorizontalBar">
            <summary>
            Indicate whether hide Horizontal scrollbar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._BeginShowHorizontalBar">
            <summary>
            Indicate whehter show Horizontal scrollbar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._LastHorizontalOffset">
            <summary>
            The previous HorizontalOffset of ScrollMonitor.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._HorizontalScrollBarOpacity">
            <summary>
            Indicates the opacity of Horizontal scrollbar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._IsHorizontalScrollBarVisible">
            <summary>
            Indicates whether the scrollbar is visible.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._ScrollBarHorizontalOffset">
            <summary>
            Indicates the Horizontal offset of Horizontal scrollbar.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollViewer._HorizontalScrollBarWidth">
            <summary>
            Indicates the height of vertical scrollbar.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.UpdateHorizontalScrollBar(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates horizontal scroll bar.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.DrawHorizontalScrollBar">
            <summary>
            Draw horizontal ScrollBar,
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.EnableContentInputVisible">
            <summary>
            Enable user input for content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.DisableContentInputVisible">
            <summary>
            Disable user input for content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Single)">
            <summary>
            Scrolls the content that is within the OpenXLive.Form.Controls.ScrollViewer
            to the specified horizontal offset position with animation.
            </summary>
            <param name="offset">The position that the content scrolls to.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.JumpToHorizontalOffset(System.Single)">
            <summary>
            Scrolls the content that is within the OpenXLive.Form.Controls.ScrollViewer
            to the specified horizontal offset position without animation.
            </summary>
            <param name="offset">The position that the content scrolls to.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.ScrollToVerticalOffset(System.Single)">
            <summary>
            Scrolls the content that is within the OpenXLive.Form.Controls.ScrollViewer
            to the specified vertical offset position with animation.
            </summary>
            <param name="offset">The position that the content scrolls to.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.JumpToVerticalOffset(System.Single)">
            <summary>
            Scrolls the content that is within the OpenXLive.Form.Controls.ScrollViewer
            to the specified vertical offset position without animation.
            </summary>
            <param name="offset">The position that the content scrolls to.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ScrollViewer.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.ScrollViewer.VerticalScrollBarVisible">
            <summary>
            Gets or sets the value of the OpenXLive.Form.Controls.ScrollViewer.VerticalScrollBarVisible.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ScrollViewer.HorizontalScrollBarVisible">
            <summary>
            Gets or sets the value of the OpenXLive.Form.Controls.ScrollViewer.HorizontalScrollBarVisible.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ScrollViewer.VerticalOffset">
            <summary>
             Gets a value that contains the vertical offset of the scrolled content.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ScrollViewer.HorizontalOffset">
            <summary>
             Gets a value that contains the horizontal offset of the scrolled content.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ScrollViewer.DisableMonitorContent">
            <summary>
            Gets or sets whether monitor the content.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ScrollViewer.ExtentHeight">
            <summary>
            The vertical size of all the content for display in the OpenXLive.Form.Controls.ScrollViewer.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ScrollViewer.ExtentWidth">
            <summary>
            The horizontal size of all the content for display in the OpenXLive.Form.Controls.ScrollViewer.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ScrollBarVisible">
            <summary>
            Specifies the visible of scrollbar in ScrollViewer.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollBarVisible.Disabled">
            <summary>
            Disable scroll.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollBarVisible.Auto">
            <summary>
            Scrollbar appears when the viewport cannot display all of the content.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollBarVisible.Visible">
            <summary>
            Support scrolling and show scrollbar automatically.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.ScrollBarVisible.Hidden">
            <summary>
            Support scrolling but hide scrollbar.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.Orientation">
            <summary>
            Defines the different orientations that a StackPanel can have.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Orientation.Vertical">
            <summary>
            The control should be vertically oriented.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.Orientation.Horizontal">
            <summary>
            The control should be horizontally oriented.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.StackPanel">
            <summary>
            Arranges child control into a single line that can be oriented horizontally
            or vertically.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.StackPanel.#ctor">
            <summary>
            Initializes a new instance of the System.Windows.Controls.StackPanel class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.StackPanel.ArrangeOverride(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Positions child control.
            </summary>
            <param name="visualRect">The visual rectangle of the Panel.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.StackPanel.Orientation">
            <summary>
            Gets or sets Orientation property to specify how controls within a StackPanel are stacked.
            The default is OpenXLive.Form.Controls.Orientation.Vertical.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.LineStackingStrategy">
            <summary>
            Describes the mechanism by which a line box is determined for each line.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.LineStackingStrategy.Default">
            <summary>
            The stack height is LineSpacing of SpriteFont. This is the default.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.LineStackingStrategy.LineHeight">
            <summary>
            The stack height is determined by the block line-height property value.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.TextAlignment">
            <summary>
            Specifies whether text is centered, left-aligned, or right-aligned.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextAlignment.Left">
            <summary>
            Text is aligned to the left edge of the container.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextAlignment.Center">
            <summary>
            Text is centered within the container.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextAlignment.Right">
            <summary>
            Text is aligned to the right edge of the container.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.TextBlock">
            <summary>
            Provides a lightweight control for displaying small amounts of text.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.TextBlock class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.SetTextElementInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for all the TextElement.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.SetTextElementVisibleCore(System.Boolean)">
            <summary>
            Sets the VisibleCore property for all the TextElement.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.SetTextElementForegroundInternal">
            <summary>
            Sets the ForegroundInternal property for all the TextElement.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.SetTextElementTextDecorationInternal">
            <summary>
            Sets the TextDecorationInternal property for all the TextElement.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextBlock._ActualText">
            <summary>
            The actual text in the TextBlock.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.SetFontWrappers">
            <summary>
            Updates font wrapper collection.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnMaxWidthChanged">
            <summary>
            Called when MaxWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnMinWidthChanged">
            <summary>
            Called when MinWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnAutoWidthChanged">
            <summary>
            Called when AutoWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnAutoHeightChanged">
            <summary>
            Called when AutoHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.HitTest(System.String,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets a value that indicate whether hit the specifies string.
            </summary>
            <param name="hitString">The sepecifies string.</param>
            <param name="point">The hit point.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.ComputeText">
            <summary>
            Computes the actual text and return the available text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.ResetTextElement">
            <summary>
            Clear collceion of CharElement in all the TextElement within a TextBlock.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextBlock._FontWrappers">
            <summary>
            The list of the font wrappers.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextBlock._Lines">
            <summary>
            Indicates all lines of the TextBlock.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextBlock._LineStackingHeight">
            <summary>
            The height of all lines.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextBlock._LineStackingWidth">
            <summary>
            The maximum width of all lines.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextBlock._DrawText">
            <summary>
            The actual string that will draw on the TextBlock.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.SetLines">
            <summary>
            Parse text.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.GetWrapStringArray(System.Collections.Generic.IList{System.String})">
            <summary>
            Gets a wrapped string array.
            </summary>
            <param name="array">String array.</param>
            <returns>The string array that has wrapped.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.HasUnknownChar(System.String)">
            <summary>
            Return a value that indicate whether the specifies word contains unknown char.
            </summary>
            <param name="word">The specifies word.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.GetWrapStringArray(System.String,System.Nullable{System.Single},System.Single@)">
            <summary>
            Gets a wrapped string array.
            </summary>
            <param name="word">A string.</param>
            <param name="remainWidth">The remain width of a line.</param>
            <param name="lastLineWidth">The width of last line.</param>
            <returns>The string array that has wrapped.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.GetKnownString(System.String,System.Int32,System.Int32@)">
            <summary>
            Gets the first known string in a word form the specifies index.
            </summary>
            <param name="word"></param>
            <param name="startKnownCharIndex"></param>
            <param name="endKnownCharIndex"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.IsKnownLetterChar(System.Char)">
            <summary>
            Return a value that indicate whether the specifies char is known char.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.GetMaxLineWidth">
            <summary>
            Gets the max string width in the lines.
            </summary>
            <returns>The max width.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.GetMaxLineWidth(System.Collections.Generic.IList{OpenXLive.Form.Controls.TextBlock.Line})">
            <summary>
            Gets the maximum width in the specifies lines.
            </summary>
            <param name="lines">The specifies lines.</param>
            <returns>The maximum width.</returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.AlignStringArray">
            <summary>
            Aligns string array.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.GetTrimmedString(System.String)">
            <summary>
            Return a string that had trimmed.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.GetTrimmedIndex(System.Collections.Generic.IList{System.String},System.Single,System.Single,System.Single)">
            <summary>
            Return an index that should be trimmed.
            </summary>
            <param name="array">String array.</param>
            <param name="lineHeight">The LineHeight.</param>
            <param name="yOffset">The offset of y-axis.</param>
            <param name="charHeight">The height of a char in SpriteFont.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.ContainsIndex(System.Collections.Generic.IList{System.Int32},System.Int32)">
            <summary>
            Return a value indicates whether the specifies list contains the specifies index.
            </summary>
            <param name="trimmedIndexList"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.MeasureString(System.String)">
            <summary>
            Return the width and the height of a string as a Vector2.
            </summary>
            <param name="text">The string to measure.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.MeasureString(System.String,System.Boolean)">
            <summary>
            Return the width and the height of a string as a Vector2.
            </summary>
            <param name="text">The string to measure.</param>
            <param name="NotComputeLastWhiteSpace">True: the line width will not contains the last white space; otherwise, false.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.GetCharElements(System.String,System.Single,System.Single,System.Single@)">
            <summary>
            Return a char element collection in a string.
            </summary>
            <param name="text">The string of a line.</param>
            <param name="yOffset">The offset of y-axis.</param>
            <param name="charHeight">The height of a char in SpriteFont.</param>
            <param name="lineWidth">The width of the specifies line.</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.GenerateLines(System.Collections.Generic.IList{System.String},System.Single,System.Single,System.Single)">
            <summary>
            Generates lines.
            </summary>
            <param name="array">String array.</param>
            <param name="lineHeight">The LineHeight.</param>
            <param name="yOffset">The offset of y-axis.</param>
            <param name="charHeight">The height of a char in SpriteFont.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.LeftAlignStringArray">
            <summary>
            Aligns string array to left.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.CenterAlignStringArray">
            <summary>
            Aligns string array to center.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.RightAlignStringArray">
            <summary>
            Aligns string array to right.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when update status.
            </summary>
            <param name="gameTime">Time passed since the last call to Update.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws TextBlock.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBlock.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.Opacity">
            <summary>
            Gets or sets the degree of the textblock's opacity. The default value is 1.0.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.FontFamily">
            <summary>
            Gets or sets the font family for the OpenXLive.Form.Controls.TextBlock.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.FontSize">
            <summary>
            Gets or sets the size of the text in this TextBlock. The defualt value is 20 (in pixels).
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.Text">
            <summary>
            Gets or sets the text contents of a OpenXLive.Form.Controls.TextBlock.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.TextAlignment">
            <summary>
            Gets or sets a value that indicates the horizontal alignment of text content. The default value is TextAlignment.Left.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.TextTrimming">
            <summary>
            One of the OpenXLive.Form.Controls.TextTrimming values that specifies the text trimming
            behavior to employ. The default is OpenXLive.Form.Controls.TextTrimming.None.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.TextWrapping">
            <summary>
            Gets or sets how the OpenXLive.Form.Controls.TextBlock wraps text. The default value is TextWrapping.NoWrap.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.TextDecoration">
            <summary>
            Gets or sets a value that specifies the text decorations that are applied to the text in a TextBlock.
            The default value is TextDecoration.None.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.LineStackingStrategy">
            <summary>
             Gets or sets a value that indicates how a line box is determined for each line of text in the OpenXLive.Form.Controls.TextBlock.
             The default value is LineStackingStrategy.Default.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.LineHeight">
            <summary>
            Gets or sets the height of each line of content. The default value is 0.
            </summary>
            <exception cref="T:System.ArgumentException">OpenXLive.Form.Controls.TextBlock.LineHeight is set to a non-positive value.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.TextElementCollection">
            <summary>
            Gets the collection of TextElement within a TextBlock.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.TextBlock.Line">
            <summary>
            Represents a line in the TextBlock.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.Line.ActualText">
            <summary>
            Gets or sets the actual text of the line.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.Line.Text">
            <summary>
            Gets or sets the text of the line.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.Line.Width">
            <summary>
            Gets or sets the width of the line.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.Line.Height">
            <summary>
            Gets or sets the height of the line.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.Line.YOffset">
            <summary>
            Gets or setss the offset of y-axis.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.Line.LineSpacing">
            <summary>
            Gets or sets the vertical distance (in pixels) between the base lines of two consecutive lines of text. 
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.Line.Rect">
            <summary>
            Gets or sets the rectangle of the line.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBlock.Line.CharElements">
            <summary>
            Gets the list of the char element in a line.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.TextWrapping">
            <summary>
            Specifies whether text wraps when it reaches the edge of its container.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextWrapping.NoWrap">
            <summary>
            No line wrapping is performed.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextWrapping.Wrap">
            <summary>
            Line breaking occurs if a line of text overflows beyond the available width
            of its container. Line breaking occurs even if the standard line-breaking
            algorithm cannot determine any line break opportunity, such as when a line
            of text includes a long word that is constrained by a fixed-width container
            without scrolling.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.TextBox">
            <summary>
            Represents a control that can be used to display single-format, multi-line text.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Controls.TextBox class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnIsEnabledChanged">
            <summary>
            Called when IsEnabled property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.FireTextChangedEvent(System.String,System.String)">
            <summary>
            Raise TextChanged event.
            </summary>
            <param name="oldValue">The old text,</param>
            <param name="newValue">The new text.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.RestoreState">
            <summary>
            Restores default state.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnReleasedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Released.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnMovedCore(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Provides class handling when TouchLocationState is Moved.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnTouchDown(OpenXLive.Form.InputEventArgs)">
            <summary>
            Called before the OpenXLive.From.Controls.TextBox.TouchDown event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.Focus">
            <summary>
            Attempts to set the focus on the OpenXLive.From.Controls.TextBox and display the software keyboard.
            </summary>
            <returns>
            true if focus was set to the OpenXLive.From.Controls.TextBox, or focus was already on the control.
            false if the OpenXLive.From.Controls.TextBox is not focusable.
            </returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.BeginShowKeyboardInput">
            <summary>
            Begins show keyboard input dialog box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.InputCallback(System.IAsyncResult)">
            <summary>
            Handles result of input.
            </summary>
            <param name="resutl"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnForegroundChanged">
            <summary>
            Called when Foreground property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnMaxHeightChanged">
            <summary>
            Called when MaxHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnMaxWidthChanged">
            <summary>
            Called when MaxWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnMinHeightChanged">
            <summary>
            Called when MinHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnMinWidthChanged">
            <summary>
            Called when MinWidth property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnAutoHeightChanged">
            <summary>
            Called when AutoHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnAutoWidthChanged">
            <summary>
            Called when AutoHeight property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnTextInput">
            <summary>
            Called before the OpenXLive.Form.Controls.TextBox.TextInput event occurs.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnHeightChanged">
            <summary>
            Called when height property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnSizeRectChanged">
            <summary>
            Called when the size rectangel of a OpenXLive.Form.Controls.TextBox has changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.TipsVisibleStrategy">
            <summary>
            Sets tips text visible.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.UpdateProperty">
            <summary>
            Updates inner control property.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextBox._VisualRect">
            <summary>
            Indicates the visual rectangle of TextBox.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Controls.TextBox._TipsVisible">
            <summary>
            Indicates whether the tips text is visible.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws TextBox.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.TextBox.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="E:OpenXLive.Form.Controls.TextBox.TextInput">
            <summary>
            Occurs when begin to input text.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.TextBox.TextChanged">
            <summary>
            Occurs when content changes in the text box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.IsReadOnly">
            <summary>
            Gets or sets the value that determines if the user can change the text in the text box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.PressedBorderBrush">
            <summary>
            Gets or sets the border color when pressed. The default value is Color.White.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.PressedBackground">
            <summary>
            Gets or sets the background when pressed. The default value is Color.White.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.TipsForeground">
            <summary>
            Gets or sets the color of tips text.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.ReadOnlyForeground">
            <summary>
            Gets or sets the color of text if the text box is readonly.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.Tips">
            <summary>
            Gets or sets the tips of the TextBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.KeyboardTitle">
            <summary>
            Gets or sets the title of keyboard input dialog box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.KeyboardDescription">
            <summary>
            Gets or sets the description of keyboard input dialog box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.BorderThickness">
            <summary>
            Gets or sets the border thickness of a TextBox control.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.BorderBrush">
            <summary>
            Gets or sets the Color that is used to create the border.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.Background">
            <summary>
             Gets or sets a color that provides the background of the TextBox control.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.FontFamily">
            <summary>
            Gets or sets the FontFamily for the OpenXLive.Form.Controls.TextBox.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.FontSize">
            <summary>
            Gets or sets the size of the text in this TextBox. The defualt value is 25 (in pixels).
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.TipsFontSize">
            <summary>
            Gets or sets the size of the tips text in this TextBox. The defualt value is 25 (in pixels).
            </summary>
            <exception cref="T:System.ArgumentException">The new value is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.Text">
            <summary>
            Gets or sets the text contents of a OpenXLive.Form.Controls.TextBox.
            </summary>
            <exception cref="T:System.ArgumentNullException">Text is set to null.</exception>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.TextAlignment">
            <summary>
            Gets or sets a value that indicates the horizontal alignment of text content. The default value is TextAlignment.Left.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.TextWrapping">
            <summary>
            Gets or sets how the OpenXLive.Form.Controls.TextBox wraps text. The default value is TextWrapping.NoWrap.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.TextBox.IsPressed">
            <summary>
            Gets a value that indicates whether a OpenXLive.Form.Controls.TextBox
            is currently in a pressed state.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.SupportedPageOrientation">
            <summary>
            An enumeration defining the orientations that may be supported by a page.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.SupportedPageOrientation.Portrait">
            <summary>
            Portrait orientation.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.SupportedPageOrientation.Landscape">
            <summary>
            Landscape orientation. Landscape supports both left and right views but there
            is no way programmatically to specify one or the other.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.SupportedPageOrientation.PortraitOrLandscape">
            <summary>
            Landscape or portrait orientation.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.ProgressIndicator">
            <summary>
            Provides methods and properties for interacting with the progress indicator
            on the top of a page.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.#ctor">
            <summary>
            Creates a new instance of the OpenXLive.Form.ProgressIndicator class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.InitializeConent">
            <summary>
            Initialize content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.LoadedInternal">
            <summary>
            Loaded content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.UnloadedInternal">
            <summary>
            Unloaded content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.OnIsInputVisibleChanged">
            <summary>
            Called when IsInputVisible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.OnVisibleChanged">
            <summary>
            Called when Visible property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.SetContentInputVisibleCore(System.Boolean)">
            <summary>
            Sets the IsInputVisibleCore property for content.
            </summary>
            <param name="inputVisible"></param>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.SetContentVisibleCore(System.Boolean)">
            <summary>
            Sets the VisibleCore property for content.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="F:OpenXLive.Form.ProgressIndicator._Content">
            <summary>
            The content of the OpenXLive.Form.ProgressIndicator.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.OnHandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Called when have available gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.OnHandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Called when get a touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="F:OpenXLive.Form.ProgressIndicator._OffsetY">
            <summary>
            The y-offset of the content.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates content control.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws content control.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Form.ProgressIndicator._HasShown">
            <summary>
            Indicates whether the progress indicator has shown.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.Show">
            <summary>
            Show progress indicator.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ProgressIndicator.Hide">
            <summary>
            Hide progress indicator.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ProgressIndicator.FontFamily">
            <summary>
            Gets or sets the FontFamily for the OpenXLive.Form.ProgressIndicator
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ProgressIndicator.IsIndeterminate">
            <summary>
            Gets or sets a value that indicates whether the progress indicator on the
            top of the current page is determinate or indeterminate.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ProgressIndicator.Text">
            <summary>
            Gets or sets the text of the progress indicator on the top of the
            current page.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ProgressIndicator.Value">
            <summary>
            Gets or sets the value of the progress indicator on the top of the current page.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ProgressIndicator.BackgroundColor">
            <summary>
            Gets or sets the background color of the area that contains the progress indicator on the top of current page.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ProgressIndicator.IndicatorBackgroundColor">
            <summary>
            Gets or sets the background color of the progress indicator on the top of the current page.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ProgressIndicator.IndicatorForegroundColor">
            <summary>
            Gets or sets the foreground color of the progress indicator on the top of the current page.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ProgressIndicator.TextForegroundColor">
            <summary>
            Gets or sets the text foreground color of the progress indicator on the top of the current page.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ProgressIndicator.IndicatorVisible">
            <summary>
            Gets or sets the visible of the progress indicator on the top of the current page.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.TemplateMessageBoxAsyncResult">
            <summary>
            Represents the status of a template message box.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.TemplateMessageBoxAsyncResult.#ctor(OpenXLive.Form.TemplateMessageBoxResult,System.Nullable{System.Int32},OpenXLive.Form.Controls.ControlTemplate,System.Object)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.TemplateMessageBoxAsyncResult class.
            </summary>
            <param name="result"></param>
            <param name="index"></param>
            <param name="template"></param>
            <param name="asyncState"></param>
        </member>
        <member name="P:OpenXLive.Form.TemplateMessageBoxAsyncResult.AsyncState">
            <summary>
            Gets a user-defined object that qualifies or contains information.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.TemplateMessageBoxAsyncResult.MessageBoxResult">
            <summary>
            Gets the result of a template message box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.TemplateMessageBoxAsyncResult.Tempalte">
            <summary>
            Gets the template of tht message box.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.TemplateMessageBoxAsyncResult.Index">
            <summary>
            Gets a index of custom buttons that user selected.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.TemplateMessageBoxButton">
            <summary>
            Specifies the buttons that are displayed on a template message box. Used as an argument of the Show method.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.TemplateMessageBoxButton.OK">
            <summary>
            The message box displays an OK button.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.TemplateMessageBoxButton.OKCancel">
            <summary>
            The message box displays OK and Cancel buttons.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.TemplateMessageBoxButton.YesNo">
            <summary>
            The message box displays Yes and No buttons.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.TemplateMessageBoxButton.RetryCancel">
            <summary>
            The message box displays Retry and Cancel buttons.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.TemplateMessageBoxCallback">
            <summary>
            References a method to be called when a template message box is closed.
            </summary>
            <param name="result">The async result of the template message box.</param>
        </member>
        <member name="T:OpenXLive.MessageBoxButtons">
            <summary>
            Specifies constants defining which buttons to display on a OpenXLive.MessageBox.
            </summary>
        </member>
        <member name="F:OpenXLive.MessageBoxButtons.OK">
            <summary>
            The message box contains an OK button.
            </summary>
        </member>
        <member name="F:OpenXLive.MessageBoxButtons.OKCancel">
            <summary>
            The message box contains OK and Cancel buttons.
            </summary>
        </member>
        <member name="F:OpenXLive.MessageBoxButtons.YesNo">
            <summary>
            The message box contains Yes and No buttons.
            </summary>
        </member>
        <member name="F:OpenXLive.MessageBoxButtons.RetryCancel">
            <summary>
            The message box contains Retry and Cancel buttons.
            </summary>
        </member>
        <member name="T:OpenXLive.DialogResult">
            <summary>
            Specifies identifiers to indicate the return value of a dialog box.
            </summary>
        </member>
        <member name="F:OpenXLive.DialogResult.None">
            <summary>
            Nothing is returned from the dialog box. This means that the modal dialog
            continues running.
            </summary>
        </member>
        <member name="F:OpenXLive.DialogResult.OK">
            <summary>
            The dialog box return value is OK (usually sent from a button labeled OK).
            </summary>
        </member>
        <member name="F:OpenXLive.DialogResult.Cancel">
            <summary>
            The dialog box return value is Cancel (usually sent from a button labeled Cancel).
            </summary>
        </member>
        <member name="F:OpenXLive.DialogResult.Retry">
            <summary>
            The dialog box return value is Retry (usually sent from a button labeled Retry).
            </summary>
        </member>
        <member name="F:OpenXLive.DialogResult.Yes">
            <summary>
            The dialog box return value is Yes (usually sent from a button labeled Yes).
            </summary>
        </member>
        <member name="F:OpenXLive.DialogResult.No">
            <summary>
            The dialog box return value is No (usually sent from a button labeled No).
            </summary>
        </member>
        <member name="T:OpenXLive.MessageBox">
            <summary>
            Displays a message box.
            </summary>
        </member>
        <member name="M:OpenXLive.MessageBox.Show(System.String)">
            <summary>
            Displays a message box that has a message.
            </summary>
            <param name="Text">A String that specifies the text to display.</param>
        </member>
        <member name="M:OpenXLive.MessageBox.Show(System.String,System.String)">
            <summary>
            Displays a message box that has a message and title bar caption.
            </summary>
            <param name="Text">A String that specifies the text to display.</param>
            <param name="Caption">A String that specifies the title bar caption to display.</param>
        </member>
        <member name="M:OpenXLive.MessageBox.Show(System.String,System.String,OpenXLive.MessageBoxButtons,OpenXLive.MessageBox.DialogResultCallback)">
            <summary>
            Displays a message box that has a message, title bar caption, and button, and handle result in specifies callback.
            </summary>
            <param name="Text">A String that specifies the text to display.</param>
            <param name="Caption">A String that specifies the title bar caption to display.</param>
            <param name="Buttons">A MessageBoxButtons value that specifies which button or buttons to display.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:OpenXLive.MessageBox.DialogCallback(System.IAsyncResult)">
            <summary>
            Callback for the message box.
            </summary>
            <param name="asynchronousResult"></param>
        </member>
        <member name="T:OpenXLive.MessageBox.MessageBoxState">
            <summary>
            Store the state of the message box.
            </summary>
        </member>
        <member name="M:OpenXLive.MessageBox.MessageBoxState.#ctor(OpenXLive.MessageBoxButtons,OpenXLive.MessageBox.DialogResultCallback)">
            <summary>
            Initializes a new instance of MessageBoxState.
            </summary>
            <param name="buttons"></param>
            <param name="callback"></param>
        </member>
        <member name="P:OpenXLive.MessageBox.MessageBoxState.Buttons">
            <summary>
            Gets the MessageBoxButtons of the message box.
            </summary>
        </member>
        <member name="P:OpenXLive.MessageBox.MessageBoxState.Callback">
            <summary>
            Gets the call back of message box. 
            </summary>
        </member>
        <member name="T:OpenXLive.MessageBox.DialogResultCallback">
            <summary>
            Represents the method that will handle the call back of the message box.
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:OpenXLive.XLiveContentManager">
            <summary>
            Represents the ContentManager for OpenXLive.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveContentManager.#ctor(OpenXLive.XLiveFormManager)">
            <summary>
            Initializes a new instance of XLiveContentManager.
            </summary>
            <param name="FormManager"></param>
        </member>
        <member name="M:OpenXLive.XLiveContentManager.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of XLiveContentManager.
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:OpenXLive.XLiveContentManager.Load``1(System.String)">
            <summary>
            Loads an asset that has been processed by the Content Pipeline.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="assetName">Asset name, relative to the loader root directory, and not including the .xnb extension.</param>
            <returns></returns>
        </member>
        <member name="T:OpenXLive.XLiveGraphicsHelper">
            <summary>
            Used to draw special geometry, or create pixel texture.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveGraphicsHelper.ScissorRasterizer">
            <summary>
            A instance of ScissorRasterizer that enblae ScissorTest.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveGraphicsHelper.CreatePixelTexture(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Color)">
            <summary>
            Create a pixel texture with specifies color.
            </summary>
            <param name="device"></param>
            <param name="color">The color of the textrue.</param>
            <returns>The created pixel texture.</returns>
            <exception cref="T:System.ArgumentNullException">device is null.</exception>
        </member>
        <member name="M:OpenXLive.XLiveGraphicsHelper.DrawLine(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draw a line.
            </summary>
            <param name="batch">SpriteBatch.</param>
            <param name="blank">A texture used to be drown.</param>
            <param name="point1">Start point.</param>
            <param name="point2">End point.</param>
            <param name="color">Color</param>
            <param name="size">The thickness of this line.</param>
        </member>
        <member name="M:OpenXLive.XLiveGraphicsHelper.DrawRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draw a rectangle.
            </summary>
            <param name="batch">SpriteBatch.</param>
            <param name="blank">A texture used to be drown.</param>
            <param name="rect">The rectangle.</param>
            <param name="color">Color.</param>
            <param name="Size">Thickness.</param>
        </member>
        <member name="T:OpenXLive.Forms.XLiveFormState">
            <summary>
            Represents a state of XLiveForm.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveFormState.Initialize">
            <summary>
            The form is Initialized.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveFormState.Active">
            <summary>
            The form is the Activated from.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveFormState.Animating">
            <summary>
            The form is being animating.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveFormState.Closeing">
            <summary>
            The form is being close.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveFormState.Closed">
            <summary>
            The form have been closed.
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.LogonFormCategory">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.LogonFormCategory.Normal">
            <summary>
            Normal account login view
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.LogonFormCategory.Social">
            <summary>
            SNS login view
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.LogonFormCategory.CreateNewAccount">
            <summary>
            Create new OpenXLive account view
            </summary>
        </member>
        <member name="T:OpenXLive.Forms.XLiveFormFactory">
            <summary>
            Providers some method to show specifies form.
            </summary>
        </member>
        <member name="F:OpenXLive.Forms.XLiveFormFactory.m_Factory">
            <summary>
            Represents a static instance of the XLiveFormFactory.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.RegisterFormFactory(OpenXLive.Forms.XLiveFormFactory)">
            <summary>
            Register custom XLive Form Factory
            </summary>
            <param name="factory"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowForm(System.String)">
            <summary>
            Create Form Method, support call by thrid-party application.
            </summary>
            <param name="FormName"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowGameCenter">
            <summary>
            Show game center.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowLogon">
            <summary>
            Show login form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowLogon(OpenXLive.Forms.LogonFormCategory)">
            <summary>
            Show login form.
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowSocialConnect(OpenXLive.Features.SNSProvider,System.EventHandler{OpenXLive.Forms.SoicalConnectCompletedArgs})">
            <summary>
            Connect a specifies SNSProvider
            </summary>
            <param name="provider">A SNSProvider used to connect</param>
            <param name="socialConnectCompleted">To be called when connect completed</param>
            <exception cref="T:System.ArgumentNullException">provider is null.</exception>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowMoreGames">
            <summary>
            Show games form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowAchievements">
            <summary>
            Show achievements form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowLeaderboard">
            <summary>
            Show leaderboard form.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.FormManagerCheck">
            <summary>
            Check form manager.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowGameCenterPage">
            <summary>
            Show game center.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowLoginPage">
            <summary>
            Show login page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowLoginPage(System.EventHandler)">
            <summary>
            Show login page.
            </summary>
            <param name="loginCompleted">Called when return from login page.</param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowSocialConnectPage(OpenXLive.Features.SNSProvider,System.EventHandler{OpenXLive.Forms.SoicalConnectCompletedArgs})">
            <summary>
            Connect a specifies SNSProvider
            </summary>
            <param name="provider">A SNSProvider used to connect</param>
            <param name="socialConnectCompleted">To be called when connect completed</param>
            <exception cref="T:System.ArgumentNullException">provider is null.</exception>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowUpdateStatusPage(Microsoft.Xna.Framework.Graphics.Texture2D,System.String)">
            <summary>
            Show update status page.
            </summary>
            <param name="image">The picture will be shared.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowGamesPage">
            <summary>
            Show games page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowAchievementsPage">
            <summary>
            Show achievements page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowLeaderboardPage">
            <summary>
            Show leaderboard page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowFirendsPage">
            <summary>
            Show friends page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowAnnouncementPage">
            <summary>
            Show acnnouncement page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowOnlinePlayerPage">
            <summary>
            Show online players page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowMessageThreadPage">
            <summary>
            Show message threads page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowSeachPage">
            <summary>
            Show search page.
            </summary>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowSendMessagePageInternal(OpenXLive.Features.Player,System.String)">
            <summary>
            Show send message page.
            </summary>
            <param name="sendTo"></param>
            <param name="message"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowPlayerProfilePageInternal(OpenXLive.Features.Player)">
            <summary>
            Show player profile page.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowGameProfilePageInternal(OpenXLive.Features.MyGame)">
            <summary>
            Show game profile page.
            </summary>
            <param name="game"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowSeachPageInternal(OpenXLive.Features.GameSession)">
            <summary>
            Show search page.
            </summary>
            <param name="session">The session of the current game.</param>
            <exception cref="T:System.ArgumentNullException">session is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowSeachPageInternal(OpenXLive.Features.GameSession,OpenXLive.Forms.SearchType,System.EventHandler{OpenXLive.Forms.ChosenSearchResultArgs})">
            <summary>
            Show search page.
            </summary>
            <param name="session">The session of the current game.</param>
            <param name="type">The search type.</param>
            <param name="chosenSearchResultEvent">The event hanlder for chosen result.</param>
            <exception cref="T:System.ArgumentNullException">session is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowPlayerMedalsPageInternal(OpenXLive.Features.Player)">
            <summary>
            Show medals page.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowUpdateStatusPageInternal(OpenXLive.Form.Page,System.String)">
            <summary>
            Show update status page and capture a screen shot as the sharing picture.
            </summary>
            <param name="page"></param>
            <param name="content"></param>
            <exception cref="T:System.ArgumentNullException">page is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowUpdateStatusPageInternal(OpenXLive.Features.XLiveStatus,OpenXLive.Forms.UpdateStatusType)">
            <summary>
            Show update status page.
            </summary>
            <param name="status"></param>
            <param name="type"></param>
            <exception cref="T:System.ArgumentNullException">status is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowUpdateStatusPageInternal(OpenXLive.Features.XLiveStatus,OpenXLive.Features.XLiveStatus)">
            <summary>
            Show update status page.
            </summary>
            <param name="status"></param>
            <param name="comment"></param>
            <exception cref="T:System.ArgumentNullException">status is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowPictureViewPageInternal(System.Uri)">
            <summary>
            Show picture view page.
            </summary>
            <param name="uri"></param>
            <exception cref="T:System.ArgumentNullException">uri is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowPictureViewPageInternal(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Show picture view page.
            </summary>
            <param name="texture"></param>
            <exception cref="T:System.ArgumentNullException">texture is null.</exception>
        </member>
        <member name="M:OpenXLive.Forms.XLiveFormFactory.ShowSettingsPageInternal">
            <summary>
            Show settings page.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveFormFactory.Factory">
            <summary>
            XLive FormFactory instance.
            </summary>
        </member>
        <member name="P:OpenXLive.Forms.XLiveFormFactory.FormManager">
            <summary>
            Gets or sets XLive Form Manager instances.
            </summary>
        </member>
        <member name="T:OpenXLive.XLiveGameState">
            <summary>
            Represents a state of the game.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveGameState.Playing">
            <summary>
            Indicates the game is playing.
            </summary>
        </member>
        <member name="F:OpenXLive.XLiveGameState.Form">
            <summary>
            Indicates the form is shown on the screen.
            </summary>
        </member>
        <member name="T:OpenXLive.ScreenMode">
            <summary>
            Indicates the ratio of the current screen.
            </summary>
        </member>
        <member name="F:OpenXLive.ScreenMode.Landscape">
            <summary>
            Landscape mode, Width is 800, Height is 480
            </summary>
        </member>
        <member name="F:OpenXLive.ScreenMode.Portrait">
            <summary>
            Portrait mode, Width is 480, Height is 800
            </summary>
        </member>
        <member name="T:OpenXLive.BackgroundStyle">
            <summary>
            Describes how background is resized to fill the form space.
            </summary>
        </member>
        <member name="F:OpenXLive.BackgroundStyle.Clip">
            <summary>
            The background is resized to fill the form while it preserves
            its form aspect ratio.
            </summary>
        </member>
        <member name="F:OpenXLive.BackgroundStyle.Extension">
            <summary>
            The background is resized to fill the form while it preserves
            its iamge aspect ratio.
            </summary>
        </member>
        <member name="F:OpenXLive.BackgroundStyle.Stretch">
            <summary>
            The background is resized to fill the form. The aspect ratio is not preserved.
            </summary>
        </member>
        <member name="T:OpenXLive.XLiveGameStateEventArgs">
            <summary>
            Provides event data for GameStateChanged events.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveGameStateEventArgs.#ctor(OpenXLive.XLiveGameState,OpenXLive.XLiveGameState)">
            <summary>
            Initializes a new instance of OpenXLive.XLiveGameStateEventArgs.
            </summary>
            <param name="NewState"></param>
            <param name="OldState"></param>
        </member>
        <member name="P:OpenXLive.XLiveGameStateEventArgs.NewGameState">
            <summary>
            Gets the current game state.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveGameStateEventArgs.OldGameState">
            <summary>
            Gets the old game state.
            </summary>
        </member>
        <member name="T:OpenXLive.XLiveFormManager">
            <summary>
            Provider a component to manager from.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.#ctor(Microsoft.Xna.Framework.Game,System.String)">
            <summary>
            Constructs a new screen manager component.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.Initialize">
            <summary>
            Initializes the screen manager component.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.LoadContent">
            <summary>
            Load your graphics content.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.UnloadContent">
            <summary>
            Unload your graphics content.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Update state for each Form.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Tells each form to draw itself.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.OnGameStateChanged">
            <summary>
            Raise GameStateChanged event.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.StartGame">
            <summary>
            Start Game, change GameState to Playing
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.LeaveGame">
            <summary>
            Leave Game, from GameStates Playing return to Startup Form (GameStates Form)
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.OnUIExiting">
            <summary>
            Raise UIExitingEvent event.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.Add(OpenXLive.Forms.XLiveForm)">
            <summary>
            Push form into stack.
            </summary>
            <param name="form"></param>
            <exception cref="T:System.ArgumentNullException">form is null.</exception>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.Remove">
            <summary>
            Pop form from stack.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.OpenSession">
            <summary>
            Open game session.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.OnOpenSessionCompleted(OpenXLive.AsyncEventArgs)">
            <summary>
            Raise OpenSessionCompleted event.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.#ctor(Microsoft.Xna.Framework.Game,OpenXLive.Features.GameSession)">
            <summary>
            Initializes a new instance of XLiveFormManager.
            </summary>
            <param name="game"></param>
            <param name="session"></param>
        </member>
        <member name="F:OpenXLive.XLiveFormManager._DisableManager">
            <summary>
            Indicates whether disable this manager, ture will not update and draw active form; 
            otherwise, update and draw active from.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.CreateOne">
            <summary>
            New a XLiveFormManager instance.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.Deactivated">
            <summary>
            Called when the game is Deactivated.
            </summary>
        </member>
        <member name="M:OpenXLive.XLiveFormManager.Activated(Microsoft.Phone.Shell.ActivatedEventArgs)">
            <summary>
            Called when the game is Activated.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:OpenXLive.XLiveFormManager.CurrentSession">
            <summary>
            Gets or sets the session of the current game.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveFormManager.SecretKey">
            <summary>
            Gets the SecretKey of the current game.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveFormManager.Content">
            <summary>
            Gets the current content manager of the XLiveFormManager.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveFormManager.ActiveForm">
            <summary>
            Gets the active from that is shown on the screen.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveFormManager.GameState">
            <summary>
            Gets the state of the game.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveFormManager.Background">
            <summary>
            Background Texture, use in all forms.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveFormManager.ScreenMode">
            <summary>
            Screen Mode, Landscape and Portrait mode
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveFormManager.BackgroundStyle">
            <summary>
            Gets or sets the style for background.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveFormManager.IsShowWarning">
            <summary>
            Gets or sets a value that indicates whether show a maessage box when encounter some error.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveFormManager.OpenXLiveFont">
            <summary>
            Gets a SpriteFont of the form.
            </summary>
        </member>
        <member name="E:OpenXLive.XLiveFormManager.GameStateChanged">
            <summary>
            Occurs when the game state has changed.
            </summary>
        </member>
        <member name="P:OpenXLive.XLiveFormManager.IsRunning">
            <summary>
            Get Is Running states from Form Manager. It is running when GameState is Playing.
            true: the game is playing; false: the form is shown on the screen.
            </summary>
        </member>
        <member name="E:OpenXLive.XLiveFormManager.UIExitingEvent">
            <summary>
            Occurs when the OpenXLive UI back to game own page. 
            </summary>
        </member>
        <member name="E:OpenXLive.XLiveFormManager.OpenSessionCompleted">
            <summary>
            Occurs when game session has opened.
            </summary>
        </member>
        <member name="T:OpenXLive.XLiveFormManager.XLiveGameStateEventHandler">
            <summary>
            Represents the method that will handle the GameStateChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:OpenXLive.Form.BackEventHandler">
            <summary>
            Represents the method that will handle the back button pressed event.
            </summary>
            <param name="o"></param>
            <param name="e"></param>
        </member>
        <member name="T:OpenXLive.Form.DownloadProgressEventArgs">
            <summary>
            Provides event data for the OpenXLive.Form.Media.ImageSource.DownloadProgress event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.DownloadProgressEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of OpenXLive.Form.DownloadProgressEventArgs with specifies progress.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.DownloadProgressEventArgs.Progress">
            <summary>
            Gets download progress as a value that is between 0 and 100.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.ExceptionEventArgs">
            <summary>
            Provides event data for exceptions that are raised as events by asynchronous operations.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ExceptionEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of OpenXLive.Form.ExceptionEventArgs with specifies exception.
            </summary>
            <param name="exception"></param>
        </member>
        <member name="P:OpenXLive.Form.ExceptionEventArgs.ErrorException">
            <summary>
            Gets the underlying exception or native-level error reported by the event.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.InputEventArgs">
            <summary>
            Provides data for Input event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.InputEventArgs.#ctor(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Initializes a new instance of InputEventArgs with specifies position.
            </summary>
            <param name="position">The position of input operation.</param>
        </member>
        <member name="P:OpenXLive.Form.InputEventArgs.Position">
            <summary>
            Gets the position of the input position.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.SelectionChangedEventArgs">
            <summary>
            Provides data for the SelectionChanged event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.SelectionChangedEventArgs.#ctor(System.Collections.IList,System.Collections.IList)">
            <summary>
            Initializes a new instance of the SelectionChangedEventArgs class.
            </summary>
            <param name="removedItems">The items that were unselected.</param>
            <param name="addedItems">The items that were selected.</param>
            <exception cref="T:System.ArgumentNullException">removedItems or addedItems is null.</exception>
        </member>
        <member name="P:OpenXLive.Form.SelectionChangedEventArgs.AddedItems">
            <summary>
            Gets a list that contains the items that were selected.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.SelectionChangedEventArgs.RemovedItems">
            <summary>
            Gets a list that contains the items that were unselected.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.SelectionChangedEventHandler">
            <summary>
            Represents the method that will handle the SelectionChanged event.
            </summary>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:OpenXLive.Form.SizeChangedEventArgs">
            <summary>
            Provides data related to the OpenXLive.Form.Controls.Control.SizeChanged event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.SizeChangedEventArgs.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.SizeChangedEventArgs class, with provided old and new values.
            </summary>
            <param name="previousHeight">The previous height, before the event was raised.</param>
            <param name="newHeight">The current height at the time of the event.</param>
            <param name="previousWidth">The previous width, before the event was raised.</param>
            <param name="newWidth">The current width at the time of the event.</param>
        </member>
        <member name="P:OpenXLive.Form.SizeChangedEventArgs.PreviousHeight">
            <summary>
            Gets the previous height as reported by a property-changed event.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.SizeChangedEventArgs.NewHeight">
            <summary>
            Gets the new height as reported by a property-changed event.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.SizeChangedEventArgs.PreviousWidth">
            <summary>
            Gets the previous width as reported by a property-changed event.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.SizeChangedEventArgs.NewWidth">
            <summary>
            Gets the new height as reported by a property-changed event.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.Animation">
            <summary>
            Represents a base class for animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Animation.#ctor">
            <summary>
            Initializes a new instance of Animation.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.Animation.Animation._ElapsedTime">
            <summary>
            Elapsed time.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Animation.Begin">
            <summary>
            Begins the animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Animation.Stop">
            <summary>
            Stops the animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Animation.Pause">
            <summary>
            Pauses the animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Animation.Resume">
            <summary>
            Resumes the animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Animation.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the animation to evaluate the current value of the animation.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Animation.RaiseCompletedEvent">
            <summary>
            Fire completed event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Animation.OnBegin">
            <summary>
            Called by Begin method.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Animation.OnStop">
            <summary>
            Called by Stop method.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Animation.OnUpdate(System.TimeSpan)">
            <summary>
            Called by Update method.
            </summary>
            <param name="elapsedTime">Elapsed time in animation process.</param>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.Animation.IsStoped">
            <summary>
            Gets a value that indicates whether the animation has stoped.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.Animation.IsPaused">
            <summary>
            Gets a vlaue that indicates whether the animation has paused.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Media.Animation.Animation.Completed">
            <summary>
            Occurs when the Animation object has completed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.Animation.SpeedRatio">
            <summary>
            Gets or sets the rate. The default value is 1.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.Animation.EasingFunction">
            <summary>
            Gets or sets the easing function applied to this animation.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.Animation.Duration">
            <summary>
            Gets or sets the length of time for the animation
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.Animation.BeginTime">
            <summary>
            Gets or sets the time at which this Animation should begin.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.BackEase">
            <summary>
            Represents an easing function that retracts the motion of an animation slightly before it begins to animate in the path indicated.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.EasingFunction">
            <summary>
            Provides the base class for all the easing functions.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.EasingFunction.#ctor">
            <summary>
            Initializes a new instance of EasingFunction.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.EasingFunction.Ease(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transforms normalized time to control the pace of an animation.
            </summary>
            <param name="duration">The duration time of the animation.</param>
            <param name="startValue">The start value of the animation.</param>
            <param name="time">The elapsed time of the animation.</param>
            <param name="valueChange">The Changed value of the animation</param>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.EasingFunction.OnEase(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Provides the logic portion of the easing function that you can override.
            </summary>
            <param name="duration">The duration time of the animation.</param>
            <param name="startValue">The start value of the animation.</param>
            <param name="time">The elapsed time of the animation.</param>
            <param name="valueChange">The Changed value of the animation</param>
            <returns></returns>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.EasingFunction.EasingMode">
            <summary>
            Gets or sets a value that specifies how the animation interpolates.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.BackEase.#ctor">
            <summary>
            Initializes a new instance of BackEase.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.BackEase.OnEase(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Computes value of easing animation.
            </summary>
            <param name="time">Current elapsed time.</param>
            <param name="startValue">Start value.</param>
            <param name="duration">The duration of a animation.</param>
            <param name="valueChange">Changed value.</param>
            <returns>Current value in the current timeline.</returns>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.BackEase.Amplitude">
            <summary>
            Gets or sets the amplitude of retraction associated with a BackEase animation.
            This value must be greater than or equal to 0.
            The default value is 1.0.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.BounceEase">
            <summary>
            Represents an easing function that creates an animated bouncing effect.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.BounceEase.#ctor">
            <summary>
            Initializes a new instance of BounceEase.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.BounceEase.OnEase(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Computes value of easing animation.
            </summary>
            <param name="time">Current elapsed time.</param>
            <param name="startValue">Start value.</param>
            <param name="duration">The duration of a animation.</param>
            <param name="valueChange">Changed value.</param>
            <returns>Current value in the current timeline.</returns>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.BounceEase.Bounces">
            <summary>
            The number of bounces. The value must be greater or equal to zero. 
            Negative values will resolve to zero. 
            The default value is 3. 
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.BounceEase.Bounciness">
            <summary>
            The value that specifies how bouncy the bounce animation is. 
            This value must be positive. 
            The default value is 2.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.CircleEase">
            <summary>
            Represents an easing function that creates an animation that accelerates and/or decelerates using a circular function.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.CircleEase.#ctor">
            <summary>
            Initializes a new instance of CircleEase.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.CircleEase.OnEase(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Computes value of easing animation.
            </summary>
            <param name="time">Current elapsed time.</param>
            <param name="startValue">Start value.</param>
            <param name="duration">The duration of a animation.</param>
            <param name="valueChange">Changed value.</param>
            <returns>Current value in the current timeline.</returns>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.CubicEase">
            <summary>
            Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t3.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.CubicEase.#ctor">
            <summary>
            Initializes a new instance of CubicEase.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.CubicEase.OnEase(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Computes value of easing animation.
            </summary>
            <param name="time">Current elapsed time.</param>
            <param name="startValue">Start value.</param>
            <param name="duration">The duration of a animation.</param>
            <param name="valueChange">Changed value.</param>
            <returns>Current value in the current timeline.</returns>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.ElasticEase">
            <summary>
            Gets or sets the number of times the target slides back and forth over the animation destination.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.ElasticEase.#ctor">
            <summary>
            Initializes a new instance of ElasticEase.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.ElasticEase.OnEase(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Computes value of easing animation.
            </summary>
            <param name="time">Current elapsed time.</param>
            <param name="startValue">Start value.</param>
            <param name="duration">The duration of a animation.</param>
            <param name="valueChange">Changed value.</param>
            <returns>Current value in the current timeline.</returns>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.ElasticEase.Oscillations">
            <summary>
            The number of times the target slides back and forth over the animation destination. 
            This value must be greater than or equal to 0. 
            The default is 3.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.ElasticEase.Springiness">
            <summary>
            A positive number that specifies the stiffness of the spring. 
            The default value is 3.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.ExponentialEase">
            <summary>
            Represents an easing function that creates an animation that accelerates and/or decelerates using an exponential formula.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.ExponentialEase.#ctor">
            <summary>
            Initializes a new instance of ExponentialEase.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.ExponentialEase.OnEase(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Computes value of easing animation.
            </summary>
            <param name="time">Current elapsed time.</param>
            <param name="startValue">Start value.</param>
            <param name="duration">The duration of a animation.</param>
            <param name="valueChange">Changed value.</param>
            <returns>Current value in the current timeline.</returns>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.ExponentialEase.Exponent">
            <summary>
            Gets or sets the exponent used to determine the interpolation of the animation. The default value is 2.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.QuadraticEase">
            <summary>
            Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t2.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.QuadraticEase.#ctor">
            <summary>
            Initializes a new instance of QuadraticEase.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.QuadraticEase.OnEase(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Computes value of easing animation.
            </summary>
            <param name="time">Current elapsed time.</param>
            <param name="startValue">Start value.</param>
            <param name="duration">The duration of a animation.</param>
            <param name="valueChange">Changed value.</param>
            <returns>Current value in the current timeline.</returns>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.QuarticEase">
            <summary>
            Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t4.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.QuarticEase.#ctor">
            <summary>
            Initializes a new instance of QuarticEase.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.QuarticEase.OnEase(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Computes value of easing animation.
            </summary>
            <param name="time">Current elapsed time.</param>
            <param name="startValue">Start value.</param>
            <param name="duration">The duration of a animation.</param>
            <param name="valueChange">Changed value.</param>
            <returns>Current value in the current timeline.</returns>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.QuinticEase">
            <summary>
            Represents an easing function that creates an animation that accelerates and/or decelerates using the formula f(t) = t5.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.QuinticEase.#ctor">
            <summary>
            Initializes a new instance of QuinticEase.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.QuinticEase.OnEase(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Computes value of easing animation.
            </summary>
            <param name="time">Current elapsed time.</param>
            <param name="startValue">Start value.</param>
            <param name="duration">The duration of a animation.</param>
            <param name="valueChange">Changed value.</param>
            <returns>Current value in the current timeline.</returns>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.SineEase">
            <summary>
            Represents an easing function that creates an animation that accelerates and/or decelerates using a sine formula.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.SineEase.#ctor">
            <summary>
            Initializes a new instance of SineEase.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.SineEase.OnEase(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Computes value of easing animation.
            </summary>
            <param name="time">Current elapsed time.</param>
            <param name="startValue">Start value.</param>
            <param name="duration">The duration of a animation.</param>
            <param name="valueChange">Changed value.</param>
            <returns>Current value in the current timeline.</returns>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.EasingMode">
            <summary>
            Defines the modes in which classes derived from Animation perform their easing.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.Animation.EasingMode.EasingOut">
            <summary>
            Interpolation follows 100% interpolation minus the output of the formula associated with the easing function.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.Animation.EasingMode.EasingIn">
            <summary>
            Interpolation follows the mathematical formula associated with the easing function.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.Animation.EasingMode.EasingInOut">
            <summary>
            Interpolation uses EaseIn for the first half of the animation and EaseOut for the second half.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.FloatAnimation">
            <summary>
            Represents a float animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.FloatAnimation.#ctor">
            <summary>
            Initializes a new instance of FloatAnimation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.FloatAnimation.OnBegin">
            <summary>
            Begins animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.FloatAnimation.OnUpdate(System.TimeSpan)">
            <summary>
            Updates.
            </summary>
            <param name="elapsedTime"></param>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.FloatAnimation.From">
            <summary>
            Gets or sets the starting value of an animation.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.FloatAnimation.To">
            <summary>
            Gets or sets the ending value of an animation.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.FloatAnimation.Value">
            <summary>
            Gets the current value.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.Animation.Vector2Animation">
            <summary>
            Represents a Vector2 animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Vector2Animation.#ctor">
            <summary>
            Initializes a new instance of Vector2Animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Vector2Animation.OnBegin">
            <summary>
            Begins animation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.Animation.Vector2Animation.OnUpdate(System.TimeSpan)">
            <summary>
            Updates.
            </summary>
            <param name="elapsedTime"></param>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.Vector2Animation.From">
            <summary>
            Gets or sets the animation's starting value
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.Vector2Animation.To">
            <summary>
            Gets or sets the animation's ending value
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.Animation.Vector2Animation.Value">
            <summary>
            Gets the current value.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.ImageSource">
            <summary>
            Provides an object source type for OpenXLive.Form.Controls.Image.Source.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.ImageSource.#ctor">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Media.ImageSource class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.ImageSource.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Media.ImageSource class, using the supplied Texture2D.
            </summary>
            <param name="texture">A Texture2D.</param>
        </member>
        <member name="M:OpenXLive.Form.Media.ImageSource.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.Media.ImageSource class, using the supplied URI.
            </summary>
            <param name="uriSource">The URI that references the source graphics file for the image.</param>
        </member>
        <member name="M:OpenXLive.Form.Media.ImageSource.ProcessData">
            <summary>
            Process the data.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.ImageSource.OnDownloadProgress(System.Int32)">
            <summary>
            Reports download progress.
            </summary>
            <param name="progress">The download progress.</param>
        </member>
        <member name="M:OpenXLive.Form.Media.ImageSource.OnImageFailed(System.Exception)">
            <summary>
            Called when image failed.
            </summary>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:OpenXLive.Form.Media.ImageSource.OnImageOpened">
            <summary>
            Called when image opened.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.ImageSource.SetSource(System.IO.Stream)">
            <summary>
            Sets the source of the OpenXLive.Form.Media.ImageSource.
            </summary>
            <param name="streamSource">The stream to set the source to.</param>
        </member>
        <member name="M:OpenXLive.Form.Media.ImageSource.BeginLoadImage">
            <summary>
            Begin load iamge.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.ImageSource.CheckCache">
            <summary>
            Check cache.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.Media.ImageSource.CreateBitmapImage">
            <summary>
            Create bitmap.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Media.ImageSource.DownloadProgress">
            <summary>
            Occurs when a significant change has occurred in the download progress of
            theOpenXLive.Form.Media.ImageSource content.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Media.ImageSource.ImageFailed">
            <summary>
            Occurs when there is an error associated with image retrieval or format.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Media.ImageSource.ImageOpened">
            <summary>
            Occurs when the image source is downloaded and decoded with no failure.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.ImageSource.CreateOptions">
            <summary>
             Gets or sets the OpenXLive.Form.Media.ImageCreateOptions for a OpenXLive.Form.Media.ImageSource.
             The default is OpenXLive.Form.Media.ImageCreateOptions.DelayCreation.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.ImageSource.UriSource">
            <summary>
            Gets or sets the URI of the graphics source file.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.ImageSource.PixelHeight">
            <summary>
            Gets the height of the bitmap in pixels.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.ImageSource.PixelWidth">
            <summary>
             Gets the width of the bitmap in pixels.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.Stretch">
            <summary>
            Describes how content is resized to fill its allocated space.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.Stretch.None">
            <summary>
            The content preserves its original size.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.Stretch.Fill">
            <summary>
            The content is resized to fill the destination dimensions. The aspect ratio is not preserved.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.Stretch.Uniform">
            <summary>
            The content is resized to fit in the destination dimensions while it preserves its native aspect ratio.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.Stretch.UniformToFill">
            <summary>
            The content is resized to fill the destination dimensions while it preserves
            its native aspect ratio. If the aspect ratio of the destination rectangle
            differs from the source, the source content is clipped to fit in the destination
            dimensions.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Media.TranslateTransform">
            <summary>
            This class lets you apply multiple different transforms to an object.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.TranslateTransform.#ctor">
            <summary>
            Initializes a new instance of TranslateTransform.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.Media.TranslateTransform._Locked">
            <summary>
            Indicates the whether the property change will effect the original value.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.TranslateTransform.Lock">
            <summary>
            Lock the original value.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Media.TranslateTransform.Unlock">
            <summary>
            Unlock the original value.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.TranslateTransform.X">
            <summary>
            Gets or sets the distance to translate along the x-axis. The default is 0.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.TranslateTransform.Y">
            <summary>
            Gets or sets the distance to translate along the y-axis. The default is 0.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Media.TranslateTransform.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.TranslateTransform.OriginalX">
            <summary>
            Gets the original X value.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Media.TranslateTransform.OriginalY">
            <summary>
            Gets the original Y value.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.ScrollMonitorTouchEventArgs">
            <summary>
            Provides event date of touch event during scroll monitor.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitorTouchEventArgs.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of ScrollMonitorTouchEventArgs with specifies x coordinate and y coordinate.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitorTouchEventArgs.X">
            <summary>
            Gets the x-coordinate.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitorTouchEventArgs.Y">
            <summary>
            Gets the y-coordiante.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.PropertyChangedEventHandler`1">
            <summary>
            Represents methods that will handle various events that track property value changes.
            </summary>
            <typeparam name="T">The type of the property value where changes in value are reported.</typeparam>
            <param name="sender">The object where the event handler is attached.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="T:OpenXLive.Form.PropertyChangedEventArgs`1">
            <summary>
            Provides data about a change in value to a property as reported
            by particular events, including the previous and current value of
            the property that changed.
            </summary>
            <typeparam name="T">The type of the property that has changed.</typeparam>
        </member>
        <member name="M:OpenXLive.Form.PropertyChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the OpenXLive.Form.PropertyChangedEventArgs class, with provided old and new values.
            </summary>
            <param name="oldValue">The previous value of the property, before the event was raised.</param>
            <param name="newValue">The current value of the property at the time of the event.</param>
        </member>
        <member name="P:OpenXLive.Form.PropertyChangedEventArgs`1.OldValue">
            <summary>
            Gets the previous value of the property as reported by a property-changed event.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.PropertyChangedEventArgs`1.NewValue">
            <summary>
            Gets the new value of a property as reported by a property-changed event.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.ScrollMonitor">
            <summary>
            Provides a monitor to monitor scrolling action.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.#ctor">
            <summary>
            Initializes a new instance of ScrollMonitor.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.#ctor(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Initializes a new instance of ScrollMonitor with a monitor scope.
            </summary>
            <param name="monitorViewport"></param>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._VerticalScrollAnimation">
            <summary>
            Used to animate vertical scrolling.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._HorizontalScrollAnimation">
            <summary>
            Used to animate horizontal scrolling.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._Duration">
            <summary>
            The duration of scrolling.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._EasingScrollDuration">
            <summary>
            The duration of easing scrolling when scroll complete.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._EasingDragDuration">
            <summary>
            The duration of easing scrolling when drag complete.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._VerticalEasingAnimation">
            <summary>
            The easing animation when scroll vertically.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._HorizontalEasingAnimation">
            <summary>
            The easing animation when scroll hrizontally.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._VerticalJumpAnimation">
            <summary>
            Used to animate scrolling when jump to specified vertical offset.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._HorizontalJumpAnimation">
            <summary>
            Used to animate scrolling when jump to specified horizontal offset.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._JumpDuration">
            <summary>
            The duration when jump to specified offset.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._CanCompute">
            <summary>
            Indicates whether can handle the touch operation.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._LastVerticalOffset">
            <summary>
            The vertical offset before the current scroll.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._LastHorizontalOffset">
            <summary>
            The horizontal offset before the current scroll.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.ComputeOffset(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Computes offset.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.HandleGesture(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Handle user gesture.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.HandleTouch(Microsoft.Xna.Framework.Input.Touch.TouchLocation)">
            <summary>
            Handle touch operation.
            </summary>
            <param name="touchLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.Start">
            <summary>
            Starts monitor.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.Stop">
            <summary>
            Stops monitor.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.StopAndRestore">
            <summary>
            Stops scroll monitor and Restores default values.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.RestoreVertical">
            <summary>
            Restores vertical values.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.RestoreHorizontal">
            <summary>
            Restores horizontal values.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.ScrollToHorizontalOffset(System.Single)">
            <summary>
            Scrolls to the specified horizontal offset position with animation.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.JumpToHorizontalOffset(System.Single)">
            <summary>
            Jumps to the specified horizontal offset position without animation.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.ScrollToVerticalOffset(System.Single)">
            <summary>
            Scrolls to the specified vertical offset position.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.JumpToVerticalOffset(System.Single)">
            <summary>
            Jumps to the specified vertical offset position without animation.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.HitTest(System.Int32,System.Int32)">
            <summary>
            Returns a value that indicates whether the touch point is in the MonitorViewport.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._CurrentVerticalEasingOffset">
            <summary>
            Indicates the current vertical offset in vertical easing animation.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._CurrentHorizontalEasingOffset">
            <summary>
            Indicates the current horizontal offset in horizontal easing animation
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._PressedInvalidEventRaised">
            <summary>
            Indicates whether the PressedInvalid event had raised.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._PressedLocation">
            <summary>
            Gets the position of the press operation.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitor._TouchIsValid">
            <summary>
            Gets a value that indicates whether the touch operation is valid.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.IsHorizontalMinLimit">
            <summary>
            Return wheter the horizontal offset is the minmum limitation value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.IsHorizontalMaxLimit">
            <summary>
            Return wheter the horizontal offset is the maximum limitation value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.IsVerticalMinLimit">
            <summary>
            Return wheter the vertical offset is the minimum limitation value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.IsVerticalMaxLimit">
            <summary>
            Return wheter the vertical offset is the maximum limitation value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.HoriontalDragStrategy(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            The startegy for horizontal drag.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.VerticalDragStrategy(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            The strategy for vertical drag.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.RaisePressedEvent(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Fire pressed event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.ApplyHorizontalDrag(System.Single)">
            <summary>
            Apply horizontal drag delta.
            </summary>
            <param name="dragX"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.ApplyVerticalDrag(System.Single)">
            <summary>
            Apply vertical drag delta.
            </summary>
            <param name="dragY"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.RaisePressedInvalidEvent">
            <summary>
            Fire PressedInvalid event.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.RaiseClickEvent(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Fire click event.
            </summary>
            <param name="clickLocation"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.RaiseTapEvent(Microsoft.Xna.Framework.Input.Touch.GestureSample)">
            <summary>
            Fire tap event.
            </summary>
            <param name="gestureSample"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.SetVerticalOffset(System.Single)">
            <summary>
            Sets verical offset
            </summary>
            <param name="value">vertical offset</param>
            <returns>Returns a value that indicates whether the verical offset is valid.</returns>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.SetHorizontalOffset(System.Single)">
            <summary>
            Sets horizontal offset
            </summary>
            <param name="value">horizontal offset</param>
            <returns>Returns a value that indicates whether the horizontal offset is valid.</returns>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.BeginVerticalEasingAnimation(System.Single,System.Single)">
            <summary>
            Begins vertical easing animation.
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.BeginVerticalEasingAnimation(System.Single,System.Single,System.TimeSpan)">
            <summary>
            Begins vertical easing animation.
            </summary>
            <param name="from">Satrt value.</param>
            <param name="to">End value.</param>
            <param name="duration">Duration time.</param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.BeginHorizontalEasingAnimation(System.Single,System.Single)">
            <summary>
            Begins horizontal easing anmation.
            </summary>
            <param name="from">Start value.</param>
            <param name="to">End value.</param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.BeginHorizontalEasingAnimation(System.Single,System.Single,System.TimeSpan)">
            <summary>
            Begins horizontal easing anmation.
            </summary>
            <param name="from">Start value.</param>
            <param name="to">End value.</param>
            <param name="duration">Duration time.</param>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.ResetVerticalValue">
            <summary>
            Resets all the vercial scrolling counter.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ScrollMonitor.ResetHorizontalValue">
            <summary>
            Resets all the horizontal scrolling counter.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.ScrollMonitor.Click">
            <summary>
            Occurs when clicked and not be scrolled.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.ScrollMonitor.ValidlyPressed">
            <summary>
            Occurs when Pressed.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.ScrollMonitor.InvalidlyPressed">
            <summary>
            Occurs when pressed operation is invalid.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.ScrollMonitor.Tap">
            <summary>
            Occurs when tapped and not be scrolled.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitor.IsEnabled">
            <summary>
            Gets a value that indicates whether the monitor is running.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitor.MonitorViewport">
            <summary>
            Gets or sets a value that indicate the bound of user input.
            The defualt value is null that indicates monitor all the screen.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitor.ScrollQuotient">
            <summary>
            Gets or sets a value that will impact the result of scorlling distance computation.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitor.VerticalMaximum">
            <summary>
            Gets or sets the highest vertical offset.
            </summary>
            <exception cref="T:System.ArgumentException">The new value is Float.NaN.</exception>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitor.VerticalMinimum">
            <summary>
            Gets or sets the minimum vertical offset.
            </summary>
            <exception cref="T:System.ArgumentException">The new value is Float.NaN.</exception>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitor.HorizontalMaximum">
            <summary>
            Gets or sets the highest Horizontal offset.
            </summary>
            <exception cref="T:System.ArgumentException">The new value is Float.NaN.</exception>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitor.HorizontalMinimum">
            <summary>
            Gets or sets the minimum Horizontal offset.
            </summary>
            <exception cref="T:System.ArgumentException">The new value is Float.NaN.</exception>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitor.SupportType">
            <summary>
            Gest or sets the SupportType, the defualt value is Vertical.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitor.VerticalOffset">
            <summary>
            Gets the vertical scrolling distance.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.ScrollMonitor.HorizontalOffset">
            <summary>
            Gets the horizontal scrolling distance.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.ScrollMonitorType">
            <summary>
            Specifies the type of ScrollMonitor.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitorType.Vertical">
            <summary>
            Monitor vertical direction.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitorType.Horizontal">
            <summary>
            Monitor horizontal direction.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.ScrollMonitorType.VerticalAndHorizontal">
            <summary>
            Monitor vertical and horizontal direction.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.TouchEventHanlder`1">
            <summary>
            Represents the method that will handle the touch event.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="e"></param>
        </member>
        <member name="T:OpenXLive.Form.Thickness">
            <summary>
            Describes the thickness of a frame around a rectangle. Four System.Float values 
            describe the OpenXLive.Form.Thickness.Left, OpenXLive.Form.Thickness.Top,
            OpenXLive.Form.Thickness.Right, and OpenXLive.Form.Thickness.Bottom sides
            of the rectangle, respectively.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Thickness.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the structure that has the specified uniform length on each side. 
            </summary>
            <param name="uniformLength">The uniform length applied to all four sides of the bounding rectangle.</param>
        </member>
        <member name="M:OpenXLive.Form.Thickness.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the structure that has specific lengths applied to each side of the rectangle. 
            </summary>
            <param name="left">The thickness for the left side of the rectangle.</param>
            <param name="top">The thickness for the upper side of the rectangle.</param>
            <param name="right">The thickness for the right side of the rectangle</param>
            <param name="bottom">The thickness for the lower side of the rectangle.</param>
        </member>
        <member name="M:OpenXLive.Form.Thickness.Equals(System.Object)">
            <summary>
            Compares this structure to another for equality.
            </summary>
            <returns>true if the two objects are equal; otherwise, false.</returns>
            <param name="obj">The object to compare.</param>
        </member>
        <member name="M:OpenXLive.Form.Thickness.GetHashCode">
            <summary>
            Returns the hash code of the structure.
            </summary>
            <returns>A hash code for this instance of Thickness.</returns>
        </member>
        <member name="M:OpenXLive.Form.Thickness.Equals(OpenXLive.Form.Thickness)">
            <summary>
            Compares this structure to another structure for equality.
            </summary>
            <param name="thickness">An instance of to compare for equality.</param>
            <returns>true if the two instances of are equal; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.Thickness.op_Equality(OpenXLive.Form.Thickness,OpenXLive.Form.Thickness)">
            <summary>
            Compares the value of two structures for equality.
            </summary>
            <param name="t1">The first structure to compare.</param>
            <param name="t2">The other structure to compare.</param>
            <returns>true if the two instances of are equal; otherwise, false.</returns>
        </member>
        <member name="M:OpenXLive.Form.Thickness.op_Inequality(OpenXLive.Form.Thickness,OpenXLive.Form.Thickness)">
            <summary>
            Compares two structures for inequality. 
            </summary>
            <param name="t1">The first structure to compare.</param>
            <param name="t2">The other structure to compare.</param>
            <returns>true if the two instances of are not equal; otherwise, false.</returns>
        </member>
        <member name="P:OpenXLive.Form.Thickness.Left">
            <summary>
            Gets or sets the width, in pixels, of the left side of the bounding rectangle. 
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Thickness.Top">
            <summary>
            Gets or sets the width, in pixels, of the upper side of the bounding rectangle.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Thickness.Right">
            <summary>
            Gets or sets the width, in pixels, of the right side of the bounding rectangle. 
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Thickness.Bottom">
            <summary>
            Gets or sets the width, in pixels, of the lower side of the bounding rectangle.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.CheckAccessHelper">
            <summary>
            Providers some method check whether access is valid.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.CheckAccessHelper.CheckThreadAndThrowException">
            <summary>
            Check wheter cross-thread access, if ture throw UnauthorizedAccessException.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.CheckAccessHelper.CheckThreadAccess">
            <summary>
            Check wheter cross-thread access.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenXLive.Form.CheckAccessHelper.CheckInitializationAndThrowException">
            <summary>
            Check wheter the NavigationService had initialized. if false throw InvalidOperationException.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.TextHelper">
            <summary>
            Represents some method, like compute the scale, draw text, etc...
            </summary>
        </member>
        <member name="M:OpenXLive.Form.TextHelper.ComputeFontScale(System.Single,Microsoft.Xna.Framework.Graphics.SpriteFont)">
            <summary>
            Computes the scale ratio of the font using specifies font size.
            </summary>
            <param name="fontSize">The specifies font size.</param>
            <param name="font">The SpriteFont.</param>
            <returns>The scale ratio.</returns>
        </member>
        <member name="M:OpenXLive.Form.TextHelper.GetCharElements(OpenXLive.Form.Media.FontFamily,System.Single,System.String,System.Single)">
            <summary>
            Return a char element collection in a string.
            </summary>
            <param name="fontFamily">The FontFamily.</param>
            <param name="fontSize">The font size.</param>
            <param name="text">The string of a line.</param>
            <param name="yOffset">The offset of y-axis.</param>
            <exception cref="T:System.ArgumentNullException">fontFamily is null.</exception>
            <exception cref="T:System.ArgumentException">The fontSize is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="M:OpenXLive.Form.TextHelper.GetCharElements(OpenXLive.Form.Media.FontFamily,System.Single,System.String,System.Single,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Return a char element collection in a string.
            </summary>
            <param name="fontFamily">The FontFamily.</param>
            <param name="fontSize">The font size.</param>
            <param name="text">The string of a line.</param>
            <param name="yOffset">The offset of y-axis.</param>
            <param name="lineSize">The width and height of the specifies line.</param>
            <exception cref="T:System.ArgumentNullException">fontFamily is null.</exception>
            <exception cref="T:System.ArgumentException">The fontSize is System.Float.NaN, or less than or equal to zero.</exception>
        </member>
        <member name="M:OpenXLive.Form.TextHelper.DrawText(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Collections.Generic.IList{OpenXLive.Form.Media.CharElement},Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw a text.
            </summary>
            <param name="spriteBatch"></param>
            <param name="charElements">The char element collection.</param>
            <param name="positon">The position.</param>
            <param name="color">The foreground.</param>
            <exception cref="T:System.ArgumentNullException">spriteBatch is null or charElements is null.</exception>
        </member>
        <member name="T:OpenXLive.Form.GraphicsHelper">
            <summary>
            Used to draw special geometry.
            </summary>
        </member>
        <member name="F:OpenXLive.Form.GraphicsHelper.ScissorRasterizer">
            <summary>
            A instance of ScissorRasterizer that enblae ScissorTest.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.GraphicsHelper.DrawLine(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,System.Single,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Draws a line.
            </summary>
            <param name="spriteBatch">SpriteBatch.</param>
            <param name="pixelBlank">A texture used to be drown.</param>
            <param name="thickness">The thickness of this line.</param>
            <param name="color">Color</param>
            <param name="startPoint">Start point.</param>
            <param name="endPoint">End point.</param>
        </member>
        <member name="M:OpenXLive.Form.GraphicsHelper.DrawRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draw a rectangle.
            </summary>
            <param name="spriteBatch">SpriteBatch.</param>
            <param name="pixelBlank">A texture used to be drown.</param>
            <param name="color">Color</param>
            <param name="rectangle"></param>
        </member>
        <member name="M:OpenXLive.Form.GraphicsHelper.DrawRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,System.Single)">
            <summary>
            Draw a rectangle.
            </summary>
            <param name="spriteBatch">SpriteBatch.</param>
            <param name="pixelBlank">A texture used to be drown.</param>
            <param name="color">Color</param>
            <param name="position">The positon of the rectangle.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="M:OpenXLive.Form.GraphicsHelper.DrawFrame(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,OpenXLive.Form.Thickness,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw a frame.
            </summary>
            <param name="spriteBatch">SpriteBatch.</param>
            <param name="pixelBlank">A texture used to be drown.</param>
            <param name="rect">The rectangle.</param>
            <param name="thickness">Thickness.</param>
            <param name="color">Color.</param>
        </member>
        <member name="T:OpenXLive.Form.ImageHelper">
            <summary>
            Providers some method use to draw textue2D on the sprecifies area.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ImageHelper.ComputeDestinationAndSourceRect(Microsoft.Xna.Framework.Graphics.Texture2D,OpenXLive.Form.Media.Stretch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle@,System.Nullable{Microsoft.Xna.Framework.Rectangle}@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Compute the destination rectangle, sourc rectangle, actual origin.
            It can use the result to draw a image on specifies area.
            </summary>
            <param name="image">The texture use to draw.</param>
            <param name="stretch"></param>
            <param name="origin">
            The center point of Image. X and Y is typically given as a value between 0 and 1.
            For example, (0.5,0.5) will represent center of the Image, 
            or (1,1) would represent the bottom right corner of the Image.
            The default value is (0,0).
            </param>
            <param name="imageSizeRectangle">The size rectangle of the image.</param>
            <param name="destinationRectangle">Return destination rectangle the texture will be drawn.</param>
            <param name="sourceRectangle">Return source rectangle of texture.</param>
            <param name="actualOrigin">Return the actual origin, it will be used as origin parameter on SpriteBatch.Draw method.</param>
            <exception cref="T:System.ArgumentNullException">image is null.</exception>
            <exception cref="T:System.InvalidOperationException">stretch is invalid.</exception>
        </member>
        <member name="M:OpenXLive.Form.ImageHelper.ComputeDestinationAndSourceRect(Microsoft.Xna.Framework.Graphics.Texture2D,OpenXLive.Form.Media.Stretch,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle@,System.Nullable{Microsoft.Xna.Framework.Rectangle}@)">
            <summary>
            Compute the destination rectangle, sourc rectangle, actual origin.
            It can use the result to draw a image on specifies area.
            </summary>
            <param name="image">The texture use to draw.</param>
            <param name="stretch"></param>
            <param name="imageSizeRectangle">The size rectangle of the image.</param>
            <param name="destinationRectangle">Return destination rectangle the texture will be drawn.</param>
            <param name="sourceRectangle">Return source rectangle of texture.</param>
            <exception cref="T:System.ArgumentNullException">image is null.</exception>
            <exception cref="T:System.InvalidOperationException">stretch is invalid.</exception>
        </member>
        <member name="T:OpenXLive.Form.PixelTextureMaker">
            <summary>
            Provides a factory to make pixel texture.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.PixelTextureMaker.CreatePixelTexture(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Create a pixel texture.
            </summary>
            <param name="graphicsDevice"></param>
            <returns>The created pixel texture.</returns>
        </member>
        <member name="M:OpenXLive.Form.PixelTextureMaker.CreatePixelTexture(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Color)">
            <summary>
            Create a pixel texture with specifies color.
            </summary>
            <param name="graphicsDevice"></param>
            <param name="color">The color of the textrue.</param>
            <returns>The created pixel texture.</returns>
        </member>
        <member name="M:OpenXLive.Form.PixelTextureMaker.CreatePixelTexture(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Color,System.Int32,System.Int32)">
            <summary>
            Create a pixel texture with specifies color, and width, and height.
            </summary>
            <param name="graphicsDevice"></param>
            <param name="color">The color of the textrue.</param>
            <param name="width">The width of the textrue.</param>
            <param name="height">The height of the textrue.</param>
            <returns>The created pixel texture.</returns>
        </member>
        <member name="P:OpenXLive.Form.PixelTextureMaker.PixelTexure">
            <summary>
            Gets the pixel texute.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.Controls.ProgressBar">
            <summary>
            Represents a control that indicates the progress of an operation.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.#ctor">
            <summary>
            Initializes a new instance of ProgressBar class.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.InitialStoryboard">
            <summary>
            Initial storyboard.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.OnWidthChanged">
            <summary>
            Called when width property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.OnHeightChanged">
            <summary>
            Called when height property changed.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.OnUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.IndeterminatelyUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when IsIndeterminate is ture during update logic.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.DeterminatelyUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when IsIndeterminate is false during update logic.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.OnDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.IndeterminatelyDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when IsIndeterminate is ture during draw logic.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="F:OpenXLive.Form.Controls.ProgressBar._ForeWidthAndHeight">
            <summary>
            Indicates the width and height of the fore indicator.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.DeterminatelyDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when IsIndeterminate is false during draw logic.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Control class.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenXLive.Form.Controls.ProgressBar.IsIndeterminate">
            <summary>
            Gets or sets a value that indicates whether the progress bar reports generic progress with a repeating pattern 
            or reports progress based on the RangeBase.Value property.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ProgressBar.Background">
            <summary>
             Gets or sets a color that provides the background of the ProgressBar control.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.ProgressBarStoryboard.SetSize(Microsoft.Xna.Framework.Vector2)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.ProgressBarStoryboard.Begin">
            <summary>
            Begins the storyboard.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.ProgressBarStoryboard.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:OpenXLive.Form.Controls.ProgressBar.ProgressBarStoryboard.Reset">
            <summary>
            Reset the storyboard.
            </summary>
        </member>
        <member name="E:OpenXLive.Form.Controls.ProgressBar.ProgressBarStoryboard.Completed">
            <summary>
            Occurs when the Storyboard has completed.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ProgressBar.ProgressBarStoryboard.BeginTime">
            <summary>
            Gets or sets the time at which this Storyboard should begin.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ProgressBar.ProgressBarStoryboard.Value">
            <summary>
            Gets the current value.
            </summary>
        </member>
        <member name="P:OpenXLive.Form.Controls.ProgressBar.ProgressBarStoryboard.IsCompleted">
            <summary>
            Gets a value that indicates whether the storyboard has completed.
            </summary>
        </member>
        <member name="T:OpenXLive.Form.ResourceHelper">
            <summary>
            Convert image source to Texture2D.
            </summary>
        </member>
        <member name="M:OpenXLive.Form.ResourceHelper.LoadTextureNormal(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Uri)">
            <summary>
            Load texture from specifies resource by default.
            </summary>
            <param name="graphicsDevice"></param>
            <param name="resourceUri">The uri of the specifies resource.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">graphicsDevice is null ro resourceUri is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.ResourceHelper.LoadTexturePixel(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Uri)">
            <summary>
            Load texture from specifies resource by default.
            </summary>
            <param name="graphicsDevice"></param>
            <param name="resourceUri">The uri of the specifies resource.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">graphicsDevice is null ro resourceUri is null.</exception>
        </member>
        <member name="M:OpenXLive.Form.ScissorCalculator.ComputeVisualRectangle(System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Computes the visual rectangle.
            </summary>
            <param name="sizeRect">the given size rectangle.</param>
            <param name="graphicsDevice">the GraphicsDevice.</param>
            <returns>The final visual rectangle</returns>
        </member>
        <member name="M:OpenXLive.Form.ScissorCalculator.SetGraphicsScissor(System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Sets the ScissorRectangle of GraphicsDevice.
            </summary>
            <param name="sizeRect">the given size Rectangle.</param>
            <param name="spriteBatch">SpriteBatch</param>
            <returns>The final ScissorRectangle</returns>
        </member>
        <member name="M:OpenXLive.Form.ScissorCalculator.ComputeVisualRectangle(Microsoft.Xna.Framework.Rectangle,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Computes the visual rectangle.
            </summary>
            <param name="sizeRect">the given size rectangle.</param>
            <param name="viewport">Specified viewport.</param>
            <param name="graphicsDevice">the GraphicsDevice.</param>
            <returns>The final visual rectangle</returns>
        </member>
        <member name="M:OpenXLive.Form.ScissorCalculator.SetGraphicsScissor(Microsoft.Xna.Framework.Rectangle,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Sets scissor rectangle in the specified viewport.
            </summary>
            <param name="sizeRect">the given size Rectangle.</param>
            <param name="viewport">Specified viewport</param>
            <param name="spriteBatch">SpriteBatch</param>
            <returns>The final ScissorRectangle</returns>
        </member>
        <member name="M:OpenXLive.XLiveNotificationParser.PopupCallback(OpenXLive.Form.TemplateMessageBoxAsyncResult)">
            <summary>
            Callback for the template message box.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:OpenXLive.XLiveNotificationParser.TaskStartedMessageTileCallback(OpenXLive.Form.MessageTileAsyncResult)">
            <summary>
            Callback for task started message tile.
            </summary>
            <param name="result"></param>
        </member>
        <member name="P:OpenXLive.XLiveNotificationParser.Parser">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
